{"version":3,"sources":["styles/img/oo.png","reducers/TreatmentReducer.js","reducers/ModalReducers.js","reducers/StepperReducer.js","reducers/CalendarReducer.js","history.js","services/HttpService.js","services/StorageService.js","services/UserService.js","reducers/UserReducer.js","store.js","services/StoreService.js","cmps/TabsApp/TabsApp.jsx","cmps/StepperApp/StepperApp.jsx","cmps/AppHeader/AppHeader.jsx","services/UtilsService.js","services/TreatmentService.js","actions/treatmentActions.js","actions/userAction.js","cmps/SwitchApp/SwitchApp.jsx","cmps/TreatmentPreview/TreatmentPreview.jsx","cmps/TreatmentList/TreatmentList.jsx","cmps/TreatmentTitle/TreatmentTitle.jsx","actions/stepperActions.js","cmps/NavBtns/NavBtns.jsx","services/MotionService.js","cmps/LoaderApp/LoaderApp.jsx","pages/TreatmentApp/TreatmentApp.jsx","cmps/DailySlots/DailySlots.jsx","cmps/TimeslotList/TimeslotList.jsx","services/EventService.js","services/EmailService.js","services/CalendarService.js","actions/calendarActions.js","pages/CalendarApp/CalendarApp.jsx","actions/modalAction.js","cmps/Modal/Modal.jsx","pages/SubmitForm/SubmitForm.jsx","pages/CancelAppointment/CancelAppointment.jsx","pages/SignupOrLogin/SignupOrLogin.jsx","pages/Login/Login.jsx","pages/Signup/Signup.jsx","services/AdvertiseService.js","pages/HomePage/HomePage.jsx","cmps/EditButton/EditButton.jsx","pages/EditUser/EditUser.jsx","pages/Advertise/Advertise.jsx","pages/AdminContacts/AdminContacts.jsx","pages/Contacts/Contacts.jsx","pages/AppointmentOrBlock/AppointmentOrBlock.jsx","pages/AppointmentFreq/AppointmentFreq.jsx","pages/BlockHours/BlockHours.jsx","pages/BlockConfermation/BlockConfermation.jsx","cmps/ModalButton/ModalButton.jsx","pages/CalendarAdmin/CalendarAdmin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","treatment","treatments","duration","availableDuration","pickedTreatmentsCount","isModalOpen","step","steps","calendar","timeSlots","hoursToBlock","slotToBlock","confirmedEventId","isDayFullyAvailable","tableModel","recurrence","isRecurrence","freq","count","history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","saveToStorage","key","value","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","removeFromStorage","removeItem","getUsers","getUser","phone","HttpService","addUser","removeUser","updateUser","user","oldPhone","StorageService","unshiftCellByPhoneNumber","users","idx","findIndex","splicedCell","splice","isMarked","copySplicedCell","unshift","_sortUsers","sort","b","name","localeCompare","isCreateadByAdmin","isAdmin","_id","loggedInUser","userToSchedule","isAdShown","userPhoneInContactSignup","rootReducer","combineReducers","TreatmentReducer","state","action","type","filter","treatmentId","CalendarReducer","slotsRangeToBlock","StepperReducer","UserReducer","UserService","ModalReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","initApp","dispatch","TabsApp","withRouter","props","React","useState","setValue","location","useLocation","useEffect","pathname","style","width","boxShadow","color","AppBar","position","Tabs","onChange","event","newValue","className","Tab","label","onClick","StoreService","id","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","StepperApp","connect","activeStep","classes","Stepper","map","index","labelProps","Step","StepLabel","AppHeader","headerConstrains","setHeaderConstrains","initWithFalse","isHeader","noHeaderMargin","isStepper","isTabs","englishToHebrew","word","convertedWord","getIsosDate","getTimeSlotsForPreview","getDailySlotsForPreview","changeTimeForDisplay","idGen","Math","random","toString","substr","calculateEndTime","time","hours","slice","minutes","floor","checkDigitsAndAddZerosIfNeeded","arrayToString","pickedTreatments","treatmentsType","forEach","tr","length","convertDateToIsraelisDisplay","convertDateTo4DigitsDisplay","date","dateParts","split","getDayByHebrewWord","getEventReadyForDisplay","filteredEvents","startTime","gUtcDiff","endTime","email","convertNumberToWords","validateEmail","test","String","toLowerCase","getWeekIsosDatesForCalendar","dayByNum","weeklyDates","getDay","Date","getTime","i","isosDate","start","end","checkIfTsInRange","tsToCompare","tsToCompareWithAddedHours","timeRangeBySlots","occupied","includes","rowspan","getMonthByIdx","timeToDisplay","getSplitedEventDesc","desc","splitedDesc","convertDurationToApiStr","calculateDuration","startHours","startMinutes","endHours","endMinutes","dateToDisplay","daysAfterOrBefore","recurrenceAvailbilityCheck","dateCopy","setDate","getDate","toISOString","slotsRanges","timeslotsByConstraints","sr","concat","apply","timeslot","slotsToRender","year","month","day","min","nextTimeSlot","getHours","getMinutes","slotToRender","diff","digit","getTreatments","getById","remove","update","updateTreatments","updatedTreatment","getMarkedTreatmentsStr","marked","UtilsService","setTreatments","setTreatment","_setTreatment","_updateTreatmentsCount","_updateTreatments","_updateDuration","_updateAvailbleDuration","loadUsers","setUsers","updateUsers","_updateUsers","err","updateLoggedInUser","_updateLoggedInUser","updateUserToSchedule","_updateUserToSchedule","updateUserPhoneInContactSignup","_updateUserPhoneInContactSignup","direction","jss","plugins","jssPreset","rtl","SwitchApp","checked","setChecked","StylesProvider","ThemeProvider","Switch","updateDuration","updatePickedTreatments","target","inputProps","_TreatmentPreview","treatmentsToUpdate","setState","updateTreatmentsCount","TreatmentService","this","price","UtilService","Component","mapDispatchToProps","TreatmentPreview","TreatmentList","getTreatmentsToUpdate","TreatmentTitle","isCalendarAdmin","isDurationValid","class","isClicked","updateActiveStep","_updateActiveStep","NavBtns","activeBtn","setActiveBtn","isNextBtnDisable","changeStep","setAppointment","handleOpen","updateTitleProp","disabled","getMotionStyle","in","opacity","x","out","stiffness","textAlign","LoaderApp","height","timeout","loadTreatments","setUserToSchedule","_setUserToSchedule","TreatmentApp","setIsClicked","div","initial","exit","animate","variants","MotionService","transition","DailySlots","ts","onAppointmentChoice","TimeslotList","Object","keys","isDateFullyBooked","slotsForPreview","saveConfirmedEvent","getMongoEventByEventCalendarId","evId","getEventByPhone","removeEventFromDB","sendEmail","isConfirmation","businessName","bodyText","emailObj","getCalendar","getAvailbleDailySlots","addEventToCalendar","addRecurrenceToCalendar","removeEventFromCalendar","getEventsFromCalendar","buildWeeklyModel","weeklyEvents","tableCellsModel","tsIdx","dailyEvents","dailyIdx","isCellInUsed","ev","eventIdx","getAvailbleDuration","table","cellPos","slotSize","durationAvalability","getHoursToBlock","timeSlot","availableSlots","pop","blockSlotRange","getDatesWeeklyRange","days","firstDay","lastDay","timeRange","eventName","creatorName","creatorEmail","eventId","endtTime","dailySlots","confirmedEvent","EventService","EmailService","checkRecurrenceAvailbility","fullDate","firstTime","occupiedDates","time1","time2","setTimeSlots","updateHoursToBlock","_updateHoursToBlock","materialTheme","overrides","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersDay","daySelected","dayDisabled","current","loadTimeSlots","pickedDate","secondDay","thirdDay","CalendarService","firstDaySlots","secondDaySlots","thirdDaySlots","CalendarApp","selectedDate","handleDateChange","loader","setLoader","calendarTitle","seTcalendarTitle","pickerRedTitle","setPickerRedTitle","isOpen","setIsOpen","handleChange","utils","DateFnsUtils","locale","heLocale","DatePicker","disablePast","shouldDisableDate","variant","okLabel","cancelLabel","open","onOpen","onClose","format","disableToolbar","InputProps","disableUnderline","keyboardbuttonprops","onSwiped","eventData","setTimeout","onSwipeDirection","updateIsModalOpen","_updateIsModalOpen","Modal","modalClass","setModalClass","isAdminContacts","handleClose","modalContent","SubmitForm","markedTreatmetns","setMarkedTreatmetns","dateIsraeliDisplay","isCalendarAdminForm","CancelAppointment","getEventsByPhone","clickedUser","eventsToCancel","setEventsToCancel","pageCount","setPageCount","then","events","now","eventToRmove","find","cancelAppointment","SignupOrLogin","to","Login","setPhone","password","setPassword","togglePhoneValidation","setTogglePhoneValidation","phoneIsValid","setPhoneIsValid","field","userFromDb","handleClickOpen","handleModalClickOpen","setOpen","dialogTitle","setDialogTitle","close","openModal","setOpenModal","handleModalClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","Button","aria-describedby","Transition","forwardRef","ref","Slide","Signup","credentials","setCredentials","toggleNameValidation","setToggleNameValidation","toggleEmailValidation","setToggleEmailValidation","isValid","setIsValid","navToContacts","emailIsValid","checkValidation","isContactsPath","maxlength","TransitionComponent","keepMounted","getAd","updateAd","content","toggleAdMode","isAdMoneOn","createAd","updateIsAdShown","_updateIsAdShown","HomePage","changeRoute","route","advertise","setAdvertise","AdvertiseService","ad","isAdModeOn","src","require","href","EditButton","toggleValidations","setUser","EditUser","isNameEditing","setIsNameEditing","isNameDisabled","setIsNameDisabled","nameBorderBottom","setNameBorderBottom","nameFocus","useRef","setIsPhoneEditing","setIsPhoneDisabled","setPhoneBorderBottom","setIsEmailEditing","setIsEmailDisabled","setEmailBorderBottom","focus","isPhoneEditing","isPhoneDisabled","phoneBorderBottom","phoneFocus","isEmailEditing","isEmailDisabled","emailBorderBottom","emailFocus","toggleEditing","Advertise","advertiseContent","setAdvertiseContent","setIsAdModeOn","cols","rows","AdminContacts","searchTerm","setSearchTerm","setClickedUser","appointmentsModalIsOpen","setAppointmentsModalIsOpen","placeholder","saveClickedUser","Contacts","markClickedUser","AppointmentOrBlock","updateRecurrence","_updateRecurrence","AppointmentFreq","freqOrCount","recurrenceCopy","for","selected","updateSlotToBlock","_updateSlotToBlock","BlockHours","clickedSlotRange","slotsRange","slotRange","BlockConfermation","ModalButton","handleModalRoute","checkBtnValidation","updateAvailbleDuration","updateIsDayFullyAvailable","_updateIsDayFullyAvailable","updateTableModel","_updateTableModel","CalendarAdmin","constrains","tempEventToRmoveId","setTempEventToRmoveId","eventToRmoveId","setEventToRmove","prevEventsToDisplay","setPrevEventsToDisplay","modalSubJect","setModalSubJect","isTempModeOn","setIsTempModeOn","setWeeklyDates","tableCells","setTableCells","occDates","setOccupiedDates","getMonth","setMonth","getWeeklyEvents","eventsToDisplay","setEventsToDisplay","getDailyDates","daysForDisplay","setDaysForDisplay","eventsIds","weeklyRange","openAppointmentsModal","dateToScheduale","eventsToDisplayCopy","isTemp","isCancelApp","confirmedDeletedEvent","mongo","Promise","all","counter","cellIsRendered","evenOrOdd","range","rowSpan","checkIfClicked","mongoEvent","isApproved","cancelAppiontment","tempEvent","startTimeTs","startTimeTsIdx","endTimeTs","endTimeTsIdx","isCellOccupied","j","prevEvents","confirmedBlockOrOccDates","closeAppointmentsModal","d","path","exact","component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.673b47f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oo.bb4ea92a.png\";","const INITIAL_STATE = {\n    treatment: null,\n    treatments: null,\n    duration:0,\n    availableDuration:0,\n    pickedTreatmentsCount:0\n}\n\nexport function TreatmentReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n\n        case 'SET_TREATMENTS':\n            return {\n                ...state,\n                treatments: action.treatments\n            }            \n        case 'SET_TREATMENT':\n            return {\n                ...state,\n                treatment: action.treatment\n            }    \n        case 'REMOVE_TREATMENT':\n        return {\n          ...state,\n          treatments: state.treatments.filter(treatment => treatment._id !== action.treatmentId)\n        };     \n        case 'UPDATE_TREATMENTS':\n        return {\n          ...state,\n          treatments:action.treatments \n        };   \n        \n        case 'UPDATE_PICKED_TREATMENTS_COUNT' :\n        return {\n          ...state,\n          pickedTreatmentsCount: state.pickedTreatmentsCount+(action.count)\n        };              \n        case 'UPDATE_DURATION':\n        return {\n          ...state,\n          duration: state.duration+(action.duration)\n        };                 \n        case 'UPDATE_AVAILBLE_DURATION':\n        return {\n          ...state,\n          availableDuration: state.availableDuration+(action.availableDuration)\n        };                 \n        case 'INIT_DURATION':\n        return {\n          ...state,\n          duration:0,\n          availableDuration:0\n        };           \n        case 'INIT_PICKED_TREATMENTS_COUNT':\n        return {\n          ...state,\n          pickedTreatmentsCount:0\n        };           \n      \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    isModalOpen:false\n}\n\nexport function ModalReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'UPDATE_IS_MODAL_OPEN':\n            return {\n                ...state,\n                isModalOpen: action.isModalOpen\n            }\n        default:\n            return state;\n    }\n}\n","const INITIAL_STATE = {\n  step:0,\n  steps:['בחירת טיפולים ', ' בחירת תור', 'אישור']\n}\n\nexport function StepperReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'UPDATE_ACTIVE_STEP':\n            return {\n                ...state,\n                step:action.step\n            }       \n       \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    calendar: null,\n    timeSlots: null,\n    hoursToBlock:null,\n    slotToBlock:null,\n    confirmedEventId:null,\n    isDayFullyAvailable:false,\n    tableModel:[],\n    recurrence: {isRecurrence:false, freq:'DAILY', count: 1}\n}\n\nexport function CalendarReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'SET_CALENDAR':\n            return {\n                ...state,\n                calendar: action.calendar\n            }          \n        case 'SET_TIMESLOTS':\n            return {\n                ...state,\n                timeSlots: action.timeSlots\n            }          \n        case 'UPDATE_HOURS_TO_BLOCK':\n            return {\n                ...state,\n                slotsRangeToBlock: action.slotsRangeToBlock\n            }          \n        case 'UPDATE_SLOT_TO_BLOCK':\n            return {\n                ...state,\n                slotToBlock: action.slotToBlock\n            }          \n        case 'UPDATE_IS_DAY_FULLY_AVAILABLE':\n            return {\n                ...state,\n                isDayFullyAvailable: action.isDayFullyAvailable\n            }          \n        case 'UPDATE_RECURRENCE':\n            return {\n                ...state,\n                recurrence: action.recurrence\n            }          \n        case 'UPDATE_TABLE_MODEL':\n\n            return {\n                ...state,\n                tableModel : action.tableModel\n            }          \n\n        default:\n            return state;\n    }\n}\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nexport default history;","import history from '../history';\nimport Axios from 'axios';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\n\nexport default {\n    get(endpoint, data){\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data){\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data){\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data){\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\n\nasync function ajax(endpoint, method='get', data=null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n          history.push('/login');\n        }\n        throw err;\n    }\n}","export default {\n    saveToStorage,\n    loadFromStorage,\n    removeFromStorage\n}\n\nfunction saveToStorage(key, value) {\n    var str = JSON.stringify(value);\n    localStorage.setItem(key, str);\n}\nfunction removeFromStorage(key) {\n    localStorage.removeItem(key);\n}\n\nfunction loadFromStorage(key) {\n    var str = localStorage.getItem(key)\n    return JSON.parse(str)\n}","import HttpService from './HttpService'\nimport StorageService from \"../services/StorageService\";\n\nexport default {\n    getUsers,\n    getUser,\n    addUser,\n    removeUser,\n    updateUser,\n    unshiftCellByPhoneNumber\n}\n\nfunction _sortUsers(users) {\n    return users.sort((a, b) => a.name.localeCompare(b.name))\n}\n\nasync function getUsers() {\n    const users = await HttpService.get('user')\n    return _sortUsers(users)\n}\n\nfunction getUser(phone) {\n    return HttpService.get(`user/${phone}`)\n}\n\nfunction updateUser(user) {\n    user.oldPhone = StorageService.loadFromStorage('tori-user').phone\n    StorageService.saveToStorage('tori-user', user)\n    return HttpService.put(`user/`, user)\n}\n\nasync function addUser(user, isCreateadByAdmin) {\n    user.isMarked = false\n    if (!isCreateadByAdmin) StorageService.saveToStorage('tori-user', user)\n    //need to come from backend env\n    if (user.phone === '123456789') user.isAdmin = true\n    else user.isAdmin = false\n    return await HttpService.post('user', user)\n}\n\nasync function removeUser(_id) {\n    StorageService.saveToStorage('tori-user', '')\n    return HttpService.delete(`user/${_id}`)\n}\n\n\nfunction unshiftCellByPhoneNumber(users, phone) {\n    const idx = users.findIndex(user => user.phone === phone)\n    let splicedCell = users.splice(idx, 1)[0]\n    splicedCell.isMarked = true\n    let copySplicedCell = { ...splicedCell }\n    users.unshift(copySplicedCell)\n    return users\n}\n","import UserService from '../services/UserService';\n\nconst INITIAL_STATE = {\n    users: [],\n    loggedInUser:null,\n    userToSchedule: null,\n    isAdShown: false,\n    userPhoneInContactSignup: ''\n}\n\nexport function UserReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                   users: (state.userPhoneInContactSignup) ? UserService.unshiftCellByPhoneNumber(action.users, state.userPhoneInContactSignup) : action.users\n            }\n        case 'UPDATE_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'UPDATE_LOGEDIN_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n        case 'SET_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_IS_AD_SHOWN':\n            return {\n                ...state,\n                isAdShown: action.isAdShown\n            }\n        case 'UPDATE_NUMBER_IN_CONTACT_SIGNUP':\n            return {\n                ...state,\n                userPhoneInContactSignup: action.userPhoneInContactSignup\n            }\n\n        default:\n            return state;\n    }\n}\n","import { TreatmentReducer } from './reducers/TreatmentReducer';\nimport { ModalReducer } from './reducers/ModalReducers';\nimport { StepperReducer } from './reducers/StepperReducer';\nimport { CalendarReducer } from './reducers/CalendarReducer';\nimport { UserReducer } from './reducers/UserReducer';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    TreatmentReducer,\n    CalendarReducer,\n    StepperReducer,\n    UserReducer,\n    ModalReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import {store} from \"../store.js\";\n\nexport default {\n    initApp\n}\n\nfunction initApp() {\n    store.dispatch({type: 'UPDATE_ACTIVE_STEP',step:0})\n    store.dispatch({type: 'SET_TREATMENT', treatment:null})\n    store.dispatch({type: 'SET_TREATMENTS', treatments:null})\n    store.dispatch({type: 'SET_TIMESLOTS',timeSlots:null})\n    store.dispatch({type: 'INIT_DURATION'})\n    store.dispatch({type: 'INIT_PICKED_TREATMENTS_COUNT'})\n}\n\n","import React, {useEffect} from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StoreService from '../../services/StoreService';\nimport './TabsApp.scss';\n\nexport function _TabsApp(props) {\n  const [value, setValue] = React.useState(0);\n  const location = useLocation()\n  useEffect(() => {(location.pathname !== '/cancelAppointment')? setValue(0): setValue(1)},[value,location]);\n\n  // tabs style\n  const style = {\n    width:'28%',\n    boxShadow:'none',\n    color:'white'\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue === 1) {\n      props.history.push('/cancelAppointment')\n    } else {\n      props.history.push('/treatments')\n    }\n  };\n\n  function navToHomePage() {\n    StoreService.initApp()\n    props.history.push('/')\n}\n\n  return (\n\n    <AppBar position=\"static\" style={{boxShadow:'none'}} >\n      <Tabs value={value} onChange={handleChange} className=\"tabs flex space-between\">\n        <Tab label=\"זימון תור\" style={style}/>\n        <Tab label=\"התורים שלי\" style={style}/>\n        <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i  className=\"fas fa-tasks\"></i></h2>\n      </Tabs>\n    </AppBar>\n  );\n}\n\nexport const TabsApp = withRouter(_TabsApp)","import React from 'react';\nimport { connect } from 'react-redux';\nimport {MuiThemeProvider,createMuiTheme,makeStyles} from \"@material-ui/core/styles\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport './StepperApp.scss'\n\n// StepperApp style\nconst theme = createMuiTheme({\n// add margin left from the circules\n  palette: {\n    primary: {\n      main: '#273650'\n    }\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  }\n}));\n\n\nexport function _StepperApp(props) {\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n\n  <MuiThemeProvider theme={theme}>\n      <Stepper activeStep={props.activeStep}>\n        {props.steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step  key={label} {...stepProps}>\n              <StepLabel  {...labelProps}>{label}  </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    steps: state.StepperReducer.steps,\n    activeStep:state.StepperReducer.step\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const StepperApp = connect(mapStateProps, mapDispatchToProps)(_StepperApp)","import React, {useState, useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { TabsApp } from '../TabsApp/TabsApp.jsx';\nimport { StepperApp } from '../StepperApp/StepperApp.jsx';\nimport StoreService from '../../services/StoreService';\nimport './AppHeader.scss';\n\n\nfunction _AppHeader(props) {\n\n    const location = useLocation()\n\n    const [headerConstrains, setHeaderConstrains] = useState(false)\n\n    useEffect(() => {\n        let initWithFalse = {isHeader:false, noHeaderMargin:false,  isStepper:false, isTabs:false}\n        switch (location.pathname) {\n            case '/':\n                setHeaderConstrains(false)\n                break;\n            case '/calendarAdmin/':\n                setHeaderConstrains(false)\n                break;\n            case '/advertise':\n                setHeaderConstrains({...initWithFalse, isHeader:true, noHeaderMargin:true}) \n                break;\n            case '/signupOrLogin':\n                setHeaderConstrains({...initWithFalse, isHeader:true, noHeaderMargin:true})\n                break;\n            case '/signup':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            case '/login':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            case '/treatments':\n                setHeaderConstrains({...initWithFalse, isStepper:true, isTabs:true})\n                break;\n            case '/calendar':\n                setHeaderConstrains(false)\n                break;\n            case '/form':\n                setHeaderConstrains({...initWithFalse, isHeader:true, isStepper:true})\n                break;\n            case '/cancelAppointment':\n                 setHeaderConstrains({...initWithFalse, isTabs:true})\n                break;\n            case '/editUser':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            default:\n                setHeaderConstrains(false)\n        }\n    }, [location.pathname]);\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n            {\n                (headerConstrains) &&\n                    <div className={`${(headerConstrains.noHeaderMargin)? 'app-header-no-margin':'app-header'}`}>\n                            {\n                              (headerConstrains.isHeader)?\n                                <header className=\"flex upper-header align-center\">\n                                  <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></h2>\n                                </header>\n                                :\n                                ''\n                            }\n                            {\n                               (headerConstrains.isTabs)?\n                                <TabsApp />\n                                    :\n                                ''\n                            }\n                            {\n                               (headerConstrains.isStepper)?\n                                <StepperApp />\n                                    :\n                                ''\n                            }      \n                    </div>\n            }\n        </>\n    )\n}\n\nexport const AppHeader = withRouter(_AppHeader)\n\n\n\n","\n\nexport default {\n  englishToHebrew,\n  getIsosDate,\n  getTimeSlotsForPreview,\n  getDailySlotsForPreview,\n  changeTimeForDisplay,\n  idGen,\n  calculateEndTime,\n  arrayToString,\n  convertDateToIsraelisDisplay,\n  convertDateTo4DigitsDisplay,\n  getDayByHebrewWord,\n  getEventReadyForDisplay,\n  convertNumberToWords,\n  validateEmail,\n  getWeekIsosDatesForCalendar,\n  checkIfTsInRange,\n  getMonthByIdx,\n  timeToDisplay,\n  getSplitedEventDesc,\n  convertDurationToApiStr,\n  calculateDuration,\n  dateToDisplay\n}\n\nvar gUtcDiff = 2\n\n// for half an hour slots = 2. 15 min slots will be 4 etc...\nvar gDividedHour = 2 \n\nfunction englishToHebrew(word) {\n  let convertedWord\n  switch (word) {\n    case ('minutes'):\n      convertedWord = 'דק׳';\n      break;\n    case ('build'):\n      convertedWord = 'בנייה';\n      break;\n    case ('filling'):\n      convertedWord = 'מילוי';\n      break;\n    case ('medical-manicure'):\n      convertedWord = 'מניקור רפואי';\n      break;\n    case ('gel'):\n      convertedWord = 'לק ג׳ל';\n      break;\n    case ('medical-pedicure'):\n      convertedWord = 'פדיקור';\n      break;\n    case ('medical-pedicure-gel'):\n      convertedWord = 'פדיקור רפואי עם לק ג׳ל';\n      break;\n    case ('half-pedicure'):\n      convertedWord = 'חצי פדיקור';\n      break;\n    case ('half-pedicure-gel'):\n      convertedWord = 'חצי פדיקור עם ג׳ל';\n      break;\n    case ('eyebrows-mustache'):\n      convertedWord = 'גבות ושפם';\n      break;\n    default:\n      convertedWord = \"ברירת מחדל\"\n  }\n\n  return ' ' + convertedWord\n}\n//get a date and how many days before/after and returns only the date part by isos convention\nfunction getIsosDate(daysAfterOrBefore, date = new Date(), recurrenceAvailbilityCheck=false) {\n  let dateCopy = new Date(date.getTime())\n  dateCopy.setDate(dateCopy.getDate() + daysAfterOrBefore)\n  if ((dateCopy.getDay() === 6)&&(!recurrenceAvailbilityCheck)) {\n    return ''\n  }\n  dateCopy = dateCopy.toISOString().slice(0, 10)\n  return dateCopy\n}\n\nfunction getWeekIsosDatesForCalendar(dayByNum, date) {\n  let weeklyDates =[]\n  if (date.getDay()===6){\n    date = new Date(date.getTime() + (1000 * 60 * 60 * 24));\n    dayByNum = 1\n  }\n  switch (dayByNum) {\n    case 1:\n      for (var i = 0; i < 6; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 2:\n      for (var i = -1; i < 5; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 3:\n      for (var i = -2; i < 4; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 4:\n      for (var i = -3; i < 3; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 5:\n      for (var i = -4; i < 2; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 6:\n      for (var i = -5; i < 1; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    default:\n      console.log('Err with getting week dates')\n  }\n  return weeklyDates.map(isosDate => {\n    return { start: `${isosDate}T06:00:00Z`, end: `${isosDate}T18:00:00Z` }\n  })\n}\n\nfunction convertDurationToApiStr(duration){\n  return duration/60 + 'H'\n}\n\nfunction timeToDisplay (time){\n  if (time.slice(0,1)==='0') {time = time.slice(1,5)}\n  return time\n}\n\nfunction dateToDisplay (date){\n  if (date.slice(0,1)==='0') {date = date.slice(1,10)}\n  return date\n}\n\nfunction getDailySlotsForPreview(slotsRanges, duration) {\n  const timeslotsByConstraints = slotsRanges.map(sr => getTimeSlotsForPreview(sr, duration))\n  const mergedTimeSlotsToRender = [].concat.apply([], timeslotsByConstraints);\n  return mergedTimeSlotsToRender\n}\n\nfunction getTimeSlotsForPreview(timeslot, duration) {\n  let slotsToRender = [];\n  let year = timeslot.start.slice(0, 4)\n  let month = timeslot.start.slice(5, 7)\n  let day = timeslot.start.slice(8, 10)\n  let hours = +timeslot.start.slice(11, 13)\n  let min = timeslot.start.slice(14, 16)\n  const startTime = new Date(year, month - 1, day, hours +  gUtcDiff, min, 0, 0);\n  year = timeslot.end.slice(0, 4)\n  month = timeslot.end.slice(5, 7)\n  day = timeslot.end.slice(8, 10)\n  hours = +timeslot.end.slice(11, 13)\n  min = timeslot.end.slice(14, 16)\n  const endTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  let nextTimeSlot = startTime//maby need copy\n  hours = nextTimeSlot.getHours()\n  min = nextTimeSlot.getMinutes()\n  let slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n  if ((nextTimeSlot.getTime() + (duration * 60 * 1000)) <= endTime.getTime()) { slotsToRender.push(slotToRender) }\n  while ((nextTimeSlot.getTime() + (duration * 60 * 1000)) < endTime.getTime()) {\n    nextTimeSlot = new Date(nextTimeSlot.getTime() + ((60 * 60 * 1000) / gDividedHour));//adding half an hour\n    hours = nextTimeSlot.getHours()\n    min = nextTimeSlot.getMinutes()\n    slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n    slotsToRender.push(slotToRender)\n  }\n  return slotsToRender\n}\n\n//get an hour and returns full isos date (including the time) reducing the diff from the hours\nfunction changeTimeForDisplay(time, diff) {\n  let hours = +time.slice(0, 2) - diff\n  let minutes = time.slice(3, 5)\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + (minutes)\n}\n\n\nfunction calculateEndTime(time, duration) {\n  let hours = +time.slice(0, 2)\n  let minutes = time.slice(3, 5)\n\n  if (duration % 60 === 30) {\n    if (+minutes === 30) {\n      hours += Math.floor(duration / 60) + 1\n      minutes = '00'\n    }\n    else {\n      hours += Math.floor(duration / 60)\n      minutes = '30'\n    }\n  }\n  else {\n    hours += (duration / 60)\n  }\n\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + minutes\n}\n\nfunction checkDigitsAndAddZerosIfNeeded(digit) {\n  digit = (digit < 10) ? '0' + digit : digit\n  return digit\n}\n\nfunction calculateDuration (start,end){\n  let startHours = +start.slice(0, 2)*60\n  let startMinutes = +start.slice(3, 5)\n  let endHours =  +end.slice(0, 2)*60\n  let endMinutes = +end.slice(3, 5)\n  const duration = (endHours - startHours + endMinutes - startMinutes)\n  return duration\n}\n\n\nfunction idGen() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\n\nfunction arrayToString(pickedTreatments) {\n  let treatmentsType = ''\n  pickedTreatments.forEach((tr, idx) => {\n    if (pickedTreatments.length !== idx + 1) treatmentsType += tr.name + ', '\n    else treatmentsType += tr.name\n  })\n  return treatmentsType\n}\n\nfunction convertDateToIsraelisDisplay(date) {\n  const dateParts = (date).split('-')\n  return `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`\n}\n\nfunction convertDateTo4DigitsDisplay(date) {\n  const dateParts = (date).split('-')\n  if (dateParts[2].slice(0,1)==='0') {  return `${dateParts[2].slice(1,2)}.${dateParts[1]}`}\n  else {return `${dateParts[2].slice(0,2)}.${dateParts[1]}`}\n}\n\nfunction getDayByHebrewWord(idx) {\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  return days[idx]\n}\n\n\nfunction getEventReadyForDisplay(filteredEvents) {\n  return filteredEvents.map(event => {\n    return {\n      id: event._id,\n      treatments: event.treatments,\n      startTime: changeTimeForDisplay(event.startTime, gUtcDiff*-1),\n      endTime: changeTimeForDisplay(event.endTime, gUtcDiff*-1),\n      date: convertDateToIsraelisDisplay(event.date),\n      email: event.email,\n      name: event.name,\n    }\n  })\n}\n//returns an object with boolean if time slot match the range and the amount of time slots\nfunction checkIfTsInRange(tsToCompare, startTime, endTime, duration) {\n\n  //adding 3 hours to match the time differnce\n  const tsToCompareWithAddedHours = changeTimeForDisplay(tsToCompare, gUtcDiff*-1)\n  const timeRangeBySlots = getDailySlotsForPreview([{ start: startTime, end: endTime }], duration)\n  if (timeRangeBySlots.length) {\n    return { occupied: timeRangeBySlots.includes(tsToCompareWithAddedHours), rowspan: timeRangeBySlots.length }\n  }\n  else {\n    if (startTime.slice(11, 16) === tsToCompare) {\n      return { occupied: true, rowspan: 1 }\n    } else {\n      return { occupied: false, rowspan: 1 }\n    }\n  }\n}\n\nfunction convertNumberToWords(idx) {\n  const words = ['אחד', 'שני', 'שלושה', 'ארבעה', 'חמשה', 'ששה', 'שבעה', 'שמונה', 'תשעה', 'עשרה', 'אחד עשר','שתיים עשר','שלושה עשר','ארבע עשר','חמישה עשר','ששה עשר']\n  return words[idx - 1]\n}\n\nfunction getMonthByIdx(idx) {\n  const months = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\n  return months[idx - 1]\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction getSplitedEventDesc(desc){\n     let splitedDesc= desc.split(' - ')\n     return {name:splitedDesc[0],treatment:splitedDesc[1]}\n}","import HttpService from './HttpService'\nimport UtilsService from \"../services/UtilsService\";\n\nexport default {\n    getTreatments,\n    getById,\n    remove,\n    update,\n    updateTreatments,\n    getMarkedTreatmentsStr\n}\n\n// update only the store not mongo DB\nfunction updateTreatments(treatments, updatedTreatment){\n    const idx = treatments.findIndex(tr => tr._id === updatedTreatment._id)\n    treatments[idx] = updatedTreatment\nreturn treatments\n}\n\nfunction getMarkedTreatmentsStr(treatments) {\n    treatments = (treatments.filter(tr => tr.marked))\n    return UtilsService.arrayToString(treatments)\n}\n\n// comunicate with backend\nfunction getTreatments() {\n    return HttpService.get('treatment')\n}\n\nfunction getById(treatmentId) {\n    return HttpService.get(`treatment/${treatmentId}`)\n}\nfunction remove(treatmentId) {\n    return HttpService.delete(`treatment/${treatmentId}`)\n}\n\nfunction update(treatment) {\n    return HttpService.put(`treatment/${treatment._id}`, treatment)\n}","import TreatmentService from '../services/TreatmentService';\n\n\nexport function loadTreatments() {\n  \n  return async dispatch => {\n    try {\n      const treatments = await TreatmentService.getTreatments();\n      dispatch(setTreatments(treatments));\n   \n    } catch (err) {\n      console.log('TreatmentActions: err in loadTreatments', err);\n    };\n  }\n}\n\nexport function setTreatments(treatments) {\n  return {\n    type: 'SET_TREATMENTS',\n    treatments\n  };\n}\n\nexport function setTreatment(treatment) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_setTreatment(treatment)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\nexport function _setTreatment(treatment) {\n  return {\n    type: 'SET_TREATMENT',\n    treatment\n  };\n}\n\n\nexport function updateTreatmentsCount(count) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_updateTreatmentsCount(count)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\n\nexport function _updateTreatmentsCount(count) {\n  return {\n    type: 'UPDATE_PICKED_TREATMENTS_COUNT',\n    count\n  };\n}\n\n\n\nexport function removeTreatment(treatmentId) {\n  return async dispatch => {\n    try {\n      await TreatmentService.remove(treatmentId);\n      dispatch(_removeTreatment(treatmentId));\n    } catch (err) {\n      console.log('TreatmentActions: err in removeTreatment', err);\n    }\n  };\n}\n\nfunction _removeTreatment(treatmentId) {\n  return {\n    type: 'REMOVE_TREATMENT',\n    treatmentId\n  };\n}\n\nexport function updateTreatments(treatments) {\n  console.log(treatments)\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateTreatments(treatments));\n    } catch (err) {\n      console.log('TreatmentActions: err in updateTreatments', err);\n    }\n  };\n}\n\nexport function _updateTreatments(treatments) {\n  return {\n    type: 'UPDATE_TREATMENTS',\n    treatments\n  };\n}\n\n\n\nexport function updateDuration(duration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateDuration(duration));\n    } catch (err) {\n      console.log('TreatmentActions: err in addDuration', err);\n    }\n  };\n}\n\nexport function _updateDuration(duration) {\n    return {\n      type: 'UPDATE_DURATION',\n      duration\n    };\n}\n\nexport function initDuration() {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_initDuration());\n    } catch (err) {\n      console.log('ERR WITH initDuration', err);\n    }\n  };\n}\n\nfunction _initDuration() {\n  return {\n    type: 'INIT_DURATION'\n  };\n}\n\n\nexport function updateAvailbleDuration(availableDuration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateAvailbleDuration(availableDuration));\n    } catch (err) {\n      console.log('ERR WITH updateAvailbleDuration', err);\n    }\n  };\n}\n\nfunction _updateAvailbleDuration(availableDuration) {\n  return {\n    type: 'UPDATE_AVAILBLE_DURATION',\n    availableDuration\n  };\n}\n","import UserService from '../services/UserService';\nimport StorageService from '../services/StorageService';\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      const users = await UserService.getUsers();\n      dispatch(setUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users\n  };\n}\n\nexport function updateUsers(users) {\n  return async dispatch => {\n    try {\n      dispatch(_updateUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function _updateUsers(users) {\n  return {\n    type: 'UPDATE_USERS',\n    users\n  };\n}\n\n\nexport function updateLoggedInUser(loggedInUser) {\n  return async dispatch => {\n    try {\n      dispatch(_updateLoggedInUser(loggedInUser));\n    } catch (err) {\n      console.log('userActions: err in updateUser', err);\n    };\n  }\n}\n\nexport function _updateLoggedInUser(loggedInUser) {\n  return {\n    type: 'UPDATE_LOGEDIN_USER',\n    loggedInUser\n  };\n}\n\n\nexport function setUserToSchedule() {\n  return dispatch => {\n    const userToSchedule = StorageService.loadFromStorage('tori-user');\n    dispatch(_setUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _setUserToSchedule(userToSchedule) {\n  return {\n    type: 'SET_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\n\nexport function updateUserToSchedule(userToSchedule) {\n  return dispatch => {\n    dispatch(_updateUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _updateUserToSchedule(userToSchedule) {\n  return {\n    type: 'UPDATE_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\nexport function updateIsAdShown(isAdShown) {\n  return dispatch => {\n    dispatch(_updateIsAdShown(isAdShown));\n  }\n}\n\nexport function _updateIsAdShown(isAdShown) {\n  return {\n    type: 'UPDATE_IS_AD_SHOWN',\n    isAdShown\n  };\n}\n\n\n\nexport function updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return dispatch => {\n    dispatch(_updateUserPhoneInContactSignup(userPhoneInContactSignup));\n  }\n}\n\nexport function _updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return {\n    type: 'UPDATE_NUMBER_IN_CONTACT_SIGNUP',\n    userPhoneInContactSignup\n  };\n}\n\n","import React, { useState } from 'react';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset,createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport './SwitchApp.scss'\n\nconst theme = createMuiTheme({\n  direction: 'rtl',\n});\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nexport function SwitchApp(props) {\n\n  const [checked, setChecked] = useState(props.marked);\n\n  const handleChange = (event) => {\n    if (!checked) {\n      props.updateDuration(true)\n      props.updatePickedTreatments(true)\n    }\n    else {\n      // props.setIsActive(false)\n      props.updateDuration(false)\n      props.updatePickedTreatments(false)\n    }\n    setChecked(event.target.checked)\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <Switch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checked\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateDuration,updateTreatments,updateTreatmentsCount} from '../../actions/treatmentActions';\nimport { SwitchApp } from '../SwitchApp/SwitchApp';\nimport UtilService from '../../services/UtilsService'\nimport TreatmentService from '../../services/TreatmentService';\nimport './TreatmentPreview.scss';\n\nclass _TreatmentPreview extends Component {\n    state = {\n        updatedTreatment: this.props.treatment,\n        treatmentsToUpdate: this.props.treatments\n    }\n\n    updateDuration = (isMarked) => {\n        if (isMarked) {\n            this.props.updateDuration(+this.props.treatment.duration)\n        } else {\n            this.props.updateDuration((+this.props.treatment.duration) * -1)\n        }\n    }\n\n    // mark the treatment\n   updatePickedTreatments = (isMarked) => {\n            this.setState({updatedTreatment:{...this.state.updatedTreatment,marked:isMarked}}, ()=>{\n                if(isMarked){\n                    this.props.updateTreatmentsCount(1)\n                }\n                else{\n                  this.props.updateTreatmentsCount(-1)\n                }\n            const treatments = TreatmentService.updateTreatments(this.state.treatmentsToUpdate,this.state.updatedTreatment)\n            this.setState({treatmentsToUpdate:treatments})\n        })\n    }\n\n    render() {\n        const {updatedTreatment} = this.state\n        return (\n            <div className={`treatment-preview ${(updatedTreatment.marked)?'marked-by-switch':\"\"}`}>\n                {updatedTreatment &&\n                    <div className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {updatedTreatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + updatedTreatment.price}</div>\n                        <div className=\"align-col\">{updatedTreatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                        <SwitchApp className=\"align-col\" marked={updatedTreatment.marked} updateDuration={this.updateDuration} updatePickedTreatments={this.updatePickedTreatments} />\n                    </div>\n                }\n            </div>\n        )\n      }\n}\n    \nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    updateDuration,\n    updateTreatments,\n    updateTreatmentsCount\n}\n\nexport const TreatmentPreview = connect(mapStateProps, mapDispatchToProps)(_TreatmentPreview)","import React from 'react';\nimport { TreatmentPreview } from '../TreatmentPreview/TreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentList.scss';\n\nexport function TreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <TreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation,withRouter } from 'react-router-dom';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentTitle.scss';\n\n\nfunction _TreatmentTitle(props) {\n    const location = useLocation()\n    let isCalendarAdmin=( location.pathname === '/calendarAdmin/treatments')\n    let isDurationValid=(props.duration>props.availableDuration)\n    return (\n        <div className={`treatment-title ${isCalendarAdmin?'treatment-title-in-modal':''} \n         ${isCalendarAdmin&&isDurationValid?'pink-title-treatments-modal':''}`}>\n                {\n                    isCalendarAdmin?\n                    <div className=\"back-arrow\" onClick={()=> props.history.push('/calendarAdmin/contacts')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    :\n                    ''\n                }\n            {\n                <div className=\"treatment-title-text\">{\n               (isDurationValid&&isCalendarAdmin) ?\n                  'משך זמן הטיפולים ארוך מידי ! '\n                :\n                (props.pickedTreatmentsCount) ?\n\n                (props.pickedTreatmentsCount===1)?\n                `נבחר טיפול  ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)}     `\n                :\n                   `נבחרו ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)} טיפולים `\n\n                    :\n                    (props.isClicked)?\n                     <span className=\"red-title\">לא נבחרו טיפולים!</span>\n                    :\n                    isCalendarAdmin\n                    ?\n                    \"בחרו סוג טיפול אחד או יותר\"\n                    : \n                    \"  בחרו  סוג  טיפול  אחד  או  יותר  ולחצו  'הבא'\"\n                    }\n                </div>\n                }\n                 <div className=\"modal-header-cls-btn-space\"></div>\n        </div>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentTitle = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentTitle))","\n\nexport function updateActiveStep(step) {\n    return async dispatch => {\n      try {\n        await \n        dispatch(_updateActiveStep(step));\n      } catch (err) {\n        console.log('StepperActions: err in updateActiveStep', err);\n      }\n    };\n  }\n  \n  export function _updateActiveStep(step) {\n      return {\n        type: 'UPDATE_ACTIVE_STEP',\n        step\n        }\n  };\n\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport './NavBtns.scss';\nfunction _NavBtns(props) {\n\n    const location = useLocation()\n    const [activeBtn, setActiveBtn] = useState('');\n\n    useEffect(() => { toggleBtnsStyle() });\n\n    function toggleBtnsStyle() {\n        if ((props.activeStep === 2 && !props.treatment) || (props.duration)) {\n            setActiveBtn('active-btn')\n        } else { setActiveBtn('') }\n    }\n\n    function isNextBtnDisable() {\n        if (!props.duration) return true\n        if (props.activeStep === 2 && !props.treatment) return true\n    }\n\n    function changeStep(diff) {\n\n        if (props.activeStep + diff === 3) {\n            props.setAppointment()\n            props.handleOpen()\n        }\n        props.updateActiveStep(props.activeStep + diff)\n        if (!props.activeStep && diff > 0) {\n            props.history.push('/calendar')\n        }\n        else if (props.activeStep === 1 && diff > 0) props.history.push('/form')\n        else if (props.activeStep === 2 && diff < 0) props.history.push('/calendar')\n        else if (props.activeStep === 1 && diff < 0) props.history.push('/treatments')\n    }\n\n    function noPickedItemTitle(){\n        if (!props.duration){\n            props.updateTitleProp()\n        }\n    }\n\n    return (\n\n        <div className={`nav-btns-container`}>\n            {\n                (location.pathname === '/treatments') ?\n                    <div className=\"nav-btn-wrapper-next\" onClick={noPickedItemTitle}>\n                            <button className=\"nav-btn-next\" onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                הבא\n                             </button>\n                    </div>\n                    :\n                    (location.pathname !== '/form') ?\n                        <div className=\"nav-btn-wrapper\">\n                            <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                חזור\n                </button>\n                        </div>\n                        :\n                        <div className=\"flex btns-wrraper\">\n                            <div className=\"nav-btn-wrapper\">\n                                <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                    חזור\n                    </button>\n                            </div>\n                            <div className={`nav-btn-wrapper`}>\n                                <button className={`nav-btn ${activeBtn}`} onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                    אשר\n                </button>\n                            </div>\n                        </div>\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        steps: state.StepperReducer.steps,\n        activeStep: state.StepperReducer.step,\n        duration: state.TreatmentReducer.duration,\n        treatment: state.TreatmentReducer.treatment,\n\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep\n}\n\nexport const NavBtns = withRouter(connect(mapStateProps, mapDispatchToProps)(_NavBtns))\n","export default {\n    getMotionStyle\n}\n\n// textAlign: 'center'\n\nfunction getMotionStyle(style) {\n    // style motion div\n    const pageVariants = {\n        in: {\n            opacity: 1,\n            x: \"0\"\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n    const pageVariantsWithTextAlign = {\n        in: {\n            opacity: 1,\n            x: \"0\",\n            textAlign: 'center'\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n\n    const pageTransition = {\n        duration: 0.5,\n        type: \"spring\",\n        stiffness: 50\n    }\n    if (style === 'pageVariants') return pageVariants\n    else if(style === 'pageTransition') return pageTransition\n    else return pageVariantsWithTextAlign\n}","import React from 'react';\nimport Loader from 'react-loader-spinner'\nexport class LoaderApp extends React.Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Oval\"\n        color=\"#273650\"\n        height={75}\n        width={75}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { setUserToSchedule, updateUserToSchedule } from '../../actions/userAction.js';\nimport { TreatmentList } from '../../cmps/TreatmentList/TreatmentList';\nimport { TreatmentTitle } from '../../cmps/TreatmentTitle/TreatmentTitle';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './TreatmentApp.scss';\nimport '../../styles/style.scss';\n\nexport function _TreatmentApp(props) {\n    const location = useLocation()\n    const { loadTreatments, treatments, setUserToSchedule, userToSchedule } = props\n    useEffect(() => {\n        if (!treatments) loadTreatments()\n    }, [loadTreatments, treatments]);\n\n    useEffect(() => {\n        (async () => {\n        if (!userToSchedule && !props.loggedInUser.isAdmin) setUserToSchedule()\n    })()\n    }, [setUserToSchedule, userToSchedule]);\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    function updateTitleProp() {\n        setIsClicked(true)\n    }\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n            {\n                (location.pathname !== '/calendarAdmin/treatments')\n                    ?\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </motion.div>\n                    :\n                    <div>\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </div>\n            }\n            {\n                (location.pathname !== '/calendarAdmin/treatments') &&\n                <NavBtns updateTitleProp={updateTitleProp} />\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        userToSchedule: state.UserReducer.userToSchedule,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments,\n    setUserToSchedule,\n    updateUserToSchedule\n}\n\nexport const TreatmentApp = connect(mapStateProps, mapDispatchToProps)(_TreatmentApp)\n\n\n\n","import './DailySlots.scss';\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {setTreatment} from '../../actions/treatmentActions';\nimport {updateActiveStep} from '../../actions/stepperActions';\nimport UtilsService from '../../services/UtilsService';\n\n function _DailySlots(props) {\n\n    function onAppointmentChoice(ts, date, diff) {\n        props.updateActiveStep(props.activeStep + diff)\n        let treatment = {\n            time: ts,\n            date\n        }\n        props.setTreatment(treatment)\n        props.history.push('/form')\n    }\n\n    return (\n        <div id='idForScrollBar' className=\"daily-slots flex column align-center space-between\">\n            {props.timeSlots.map(ts => <button onClick={() => onAppointmentChoice(ts, props.date, 1)}\n            className=\"timeslot-btn\" key={UtilsService.idGen()}>{UtilsService.timeToDisplay(ts)}</button>)}\n        </div>\n    )\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment,\n        activeStep: state.StepperReducer.step\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment,\n    updateActiveStep\n}\n\nexport const DailySlots = withRouter(connect(mapStateProps, mapDispatchToProps)(_DailySlots))\n","import React, {useEffect} from \"react\";\nimport { DailySlots } from '../DailySlots/DailySlots';\nimport UtilsService from '../../services/UtilsService';\nimport './TimeslotList.scss';\n\nexport function TimeslotList(props) {\n\n    useEffect(() => {\n        }, []);\n\n    return (\n        <div className=\"timeslot-list flex\">\n            {\n                Object.keys(props.timeSlots).map(day => {\n                    const isDateFullyBooked = (typeof props.timeSlots[day] == 'string') ? true : false\n                    const date = isDateFullyBooked ? props.timeSlots[day].slice(0, 10) : (props.timeSlots[day])[0].start.slice(0, 10)\n                    // running on each day\n                    const slotsForPreview = isDateFullyBooked ? [] : UtilsService.getDailySlotsForPreview(props.timeSlots[day], props.duration)\n                    return (\n                        <div key={UtilsService.idGen()}>\n                            <div className=\"date-container\">\n                                {\n                                isDateFullyBooked?     \n                                <div className=\"fully-booked\">\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                    <br/>\n                                    <div className=\"fully-booked-title\">אין תור פנוי</div>\n                                </div>\n                                :\n                                <div>\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                </div>\n                                }\n                            </div>\n                            <DailySlots timeSlots={slotsForPreview} date={date} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import HttpService from './HttpService'\n\nexport default {\n    saveConfirmedEvent,\n    getMongoEventByEventCalendarId,\n    getEventByPhone,\n    removeEventFromDB\n}\n\n// MONGO DB - GOES THREW BACKEND\n\nfunction saveConfirmedEvent(event){\n    return HttpService.post('event',event)\n}\n\nfunction getEventByPhone (phone) {\n    return HttpService.get(`event/${phone}`)\n}\n\n\nfunction getMongoEventByEventCalendarId(evId) {\n    return HttpService.get(`event/${evId}`)\n}\n\nfunction removeEventFromDB (_id) {\n    return HttpService.delete(`event/${_id}`)\n}","import HttpService from './HttpService'\n\nexport default {\n    sendEmail\n}\n\nfunction sendEmail(name, date, email='', isConfirmation, phone='', duration='', time='', treatments='') {\n    const businessName='נייל סלון'\n    let bodyText = ''\n    if (isConfirmation) {\n        bodyText =`        שלום ${name} ,\n\n        שמחים שבחרת ${businessName} !\n        נקבע לך תור ל${treatments}  \n        בתאריך ${date}\n        בשעה ${time}\n        משך זמן הטיפול מוערך כ- ${duration} דקות\n        הטלפון שהתקבל ליצירת קשר הוא - ${phone}\n        \n        תודה`\n    } else {\n        bodyText = `\n        שלום,\n         ${name}\n        התור שנקבע לתאריך ${date} בוטל \n        תודה על העדכון `\n    }\n    let emailObj = {\n        email,\n        bodyText\n    }\n    return HttpService.post('email',emailObj)\n}","import HttpService from './HttpService'\nimport EventService from './EventService'\nimport UtilsService from \"../services/UtilsService\";\nimport EmailService from '../services/EmailService';\n\nexport default {\n    getCalendar,\n    getAvailbleDailySlots,\n    addEventToCalendar,\n    addRecurrenceToCalendar,\n    removeEventFromCalendar,\n    setAppointment,\n    getEventsFromCalendar,\n    buildWeeklyModel,\n    getAvailbleDuration,\n    getHoursToBlock,\n    blockSlotRange,\n    getDatesWeeklyRange\n}\n\nvar gUtcDiff = 2\n\n// get the first calendar connected to this TOKEN (usually only 1 should be there)\nfunction getCalendar() {\n    return HttpService.get('calendar')\n}\n\n\nasync function getEventsFromCalendar(timeRange) {\n    return await HttpService.get(`calendar/${timeRange.start}/${timeRange.end}`)\n}\n\nfunction addEventToCalendar(startTime, endTime, eventName, creatorName = 'block', creatorEmail) {\n    const event = { eventName, creatorName, creatorEmail, startTime, endTime }\n    return HttpService.post('calendar', event)\n}\n\n// adding Recurrence event/block\nasync function addRecurrenceToCalendar(startTime, endTime, eventName, creatorName = 'block', recurrence) {\n    const event = { eventName, creatorName, startTime, endTime, recurrence}\n    return HttpService.post('calendar/recurrence', event)\n}\n\nasync function removeEventFromCalendar(eventId) {\n    const res = await HttpService.delete('calendar', { eventId })\n    console.log(res);\n    return res\n}\n\nasync function getAvailbleDailySlots(startTime, endtTime, duration) {\n    const dailySlots = { startTime, endtTime, duration }\n    return await HttpService.post('calendar/slots', dailySlots)\n}\n\n// MAKING SOME CALCULATIONS AND THAN CALLING OTHER FUNCTIONS TO ADD THE EVENT TO CALENDAR + MONGO DB\nasync function setAppointment(treatments, duration, phone, email, name, treatment) {\n    // in case of recurrence => (treatments, duration, phone, email, name, treatment, recurrence)\n    let time = UtilsService.changeTimeForDisplay(treatment.time, gUtcDiff)\n    let firstTime = time\n    const startTime = `${treatment.date}T${time}:00Z`\n    time = UtilsService.calculateEndTime(time, duration)\n    const endTime = `${treatment.date}T${time}:00Z`\n    let confirmedEvent\n    // if (!recurrence.isRecurrence){\n        confirmedEvent = await addEventToCalendar(startTime, endTime, treatments, name, 'ayal@gmail.com')\n    // } else {\n        // checking if recurrence is possible during all the chosen dates\n    //     const occupiedDates = await checkRecurrenceAvailbility (new Date(`${treatment.date}T02:00:00Z`), firstTime, time, duration, recurrence)\n    //     if (!occupiedDates.length) {\n    //     confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, treatments, name, recurrence)\n    //     } else {\n    //         console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n    //         return\n    //     }\n    // }\n    const event = {\n        name,\n        email,\n        phone,\n        eventId: confirmedEvent.id,\n        treatments,\n        duration,\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n    EmailService.sendEmail(name, treatment.date, email, true, phone, duration, treatment.time, treatments)\n    return confirmedEvent\n}\n\n// freq should get DAILY or WEEKLY depends - representing day or week diff. count - for how many times to repeat \nasync function checkRecurrenceAvailbility (fullDate, firstTime, time, duration, recurrence) {\n    let occupiedDates = []\n    let startTime\n    let endTime\n    let isosDate = UtilsService.getIsosDate(0, fullDate)\n    let freq = (recurrence.freq === 'DAILY')? 1 : 7\n    let recurrenceAvailbilityCheck = true\n    duration = UtilsService.convertDurationToApiStr(duration)\n\n    for (var i=0; i < recurrence.count; i++){\n    startTime = `${isosDate}T${firstTime}:00Z`\n    endTime = `${isosDate}T${time}:00Z`\n    const availbleSlots = await getAvailbleDailySlots(startTime, endTime, duration)\n    // if the time is already occupied the day isnt avaiblle\n    if (typeof availbleSlots === 'string'){\n        occupiedDates.push(isosDate)\n    }\n    isosDate = UtilsService.getIsosDate(i+freq, fullDate, recurrenceAvailbilityCheck) \n    }\n    console.log(occupiedDates)\n    return occupiedDates\n}\n\n\nasync function blockSlotRange(slotToBlock, name = 'block', recurrence) {\n    let time1 = UtilsService.changeTimeForDisplay(slotToBlock.start, gUtcDiff)\n    let time2 = UtilsService.changeTimeForDisplay(slotToBlock.end, gUtcDiff)\n    const startTime = `${slotToBlock.date}T${time1}:00Z`\n    const endTime = `${slotToBlock.date}T${time2}:00Z`\n    const duration = UtilsService.calculateDuration (time1, time2)\n\n    let confirmedEvent \n    if (!recurrence.isRecurrence) {\n        confirmedEvent = await addEventToCalendar(startTime, endTime, name)\n    } else {\n        // checking if recurrence is possible during all the chosen dates\n\n        const occupiedDates = await checkRecurrenceAvailbility (new Date(`${slotToBlock.date}T02:00:00Z`), time1, time2, duration, recurrence)\n        if (!occupiedDates.length) {\n             confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, name, 'block', recurrence)\n        } else {\n            console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n            return occupiedDates\n        }\n    }\n    console.log('adsasd', confirmedEvent)\n    const event = {\n        name,\n        email: '',\n        phone: '',\n        eventId: confirmedEvent.id,\n        treatments: '',\n        duration: '',\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n    return confirmedEvent\n}\n\n\n/////////////////////calendarAdmin:\n\nfunction buildWeeklyModel(timeSlots, weeklyEvents) {\n    let tableCellsModel = []\n    for (var i = 0; i < timeSlots.length; i++) {\n        tableCellsModel.push([])\n    }\n    timeSlots.map((ts, tsIdx) => {\n        weeklyEvents.map((dailyEvents, dailyIdx) => {\n            if (dailyEvents.length) {\n                let isCellInUsed = false\n                return dailyEvents.map((ev, eventIdx) => {\n                    const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                    if (range.occupied) {\n                        isCellInUsed = true\n                        tableCellsModel[dailyIdx, tsIdx].push(false)\n                        // tableCellsModel[dailyIdx, tsIdx].push({name:ev.name,id:ev.id,start:ev.start,end:ev.end})\n                    }\n                    else if ((dailyEvents.length === eventIdx + 1) && (!isCellInUsed)) {\n                        tableCellsModel[dailyIdx, tsIdx].push(true)\n                    }\n                })\n            } else {\n                tableCellsModel[dailyIdx, tsIdx].push(true)\n            }\n        })\n    })\n    return tableCellsModel\n}\n\nfunction getAvailbleDuration(table, cellPos, slotSize = 30) {\n    console.table( table)\n    let durationAvalability = 0\n    let i = cellPos.tsIdx\n    while (table[i][cellPos.dailyIdx] && i < table.length - 1) {\n        durationAvalability += slotSize\n        i++\n    }\n    if (!durationAvalability) return slotSize\n    return durationAvalability\n}\n\nfunction getHoursToBlock(timeSlots, ts, availableDuration, date, isDayFullyAvailable, slotSize = 30) {\n    let hoursToBlock = []\n    const tsIdx = timeSlots.findIndex(timeSlot => timeSlot === ts)\n    const availableSlots = availableDuration / slotSize\n    for (let i = tsIdx; i < (tsIdx + availableSlots); i++) {\n        hoursToBlock.push(\n            {\n                date,\n                start: ts,\n                end: timeSlots[i + 1],\n                isMarked: false\n            }\n        )\n    }\n    if (isDayFullyAvailable) {\n        hoursToBlock.unshift(\n            {\n                date,\n                start: timeSlots[0],\n                end: timeSlots[timeSlots.length - 1],\n                isMarked: false\n            }\n        )\n        if (ts === timeSlots[0]) hoursToBlock.pop()\n    }\n    return hoursToBlock\n}\n\nfunction getDatesWeeklyRange(date) {\n    const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n    const firstDay = UtilsService.convertDateToIsraelisDisplay(days[0].start.slice(0, 10))\n    const lastDay = UtilsService.convertDateToIsraelisDisplay(days[days.length - 1].start.slice(0, 10))\n    return { lastDay, firstDay }\n\n}","import CalendarService from '../services/CalendarService';\nimport UtilsService from '../services/UtilsService';\n\n// THUNK\nexport function loadCalendar() {\n  \n  return async dispatch => {\n    try {\n      const calendar = await CalendarService.getCalendar();\n      dispatch(setCalendar(calendar));\n    } catch (err) {\n      console.log('calendarActions: err in loadCalendars', err);\n  };\n}\n}\n\nexport function setCalendar(calendar) {\n    return {\n      type: 'SET_CALENDAR',\n      calendar\n     };\n}\n\n\nexport function loadTimeSlots(pickedDate = null){\n  let date\n      if (!pickedDate) {\n        date = new Date()\n        var firstDay = UtilsService.getIsosDate (0)\n        var secondDay = UtilsService.getIsosDate (1)\n        var thirdDay = UtilsService.getIsosDate (2)\n      } else {\n      // get day after and day before\n      // firstDay = UtilsService.getIsosDate (-1, pickedDate)\n      // secondDay = UtilsService.getIsosDate (0,  pickedDate)\n      // thirdDay = UtilsService.getIsosDate (1, pickedDate )\n      date = pickedDate\n        firstDay = UtilsService.getIsosDate (0, pickedDate)\n        secondDay = UtilsService.getIsosDate (1, pickedDate)\n        thirdDay = UtilsService.getIsosDate (2, pickedDate )\n      } \n      // check for saturday (unwroking day), if it was, sending the correction to skip that day\n        if (!firstDay) {\n          firstDay = UtilsService.getIsosDate (1, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!secondDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!thirdDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (1, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n         }     \n  return async dispatch => {\n    try {\n      const timeSlots = {\n        // 1H means the min block time range later to scheduale a meeting\n      firstDaySlots: await CalendarService.getAvailbleDailySlots(`${firstDay}T06:00:00`, `${firstDay}T18:00:00`, '1H'),\n      secondDaySlots: await CalendarService.getAvailbleDailySlots(`${secondDay}T06:00:00`, `${secondDay}T18:00:00`, '1H'),\n      thirdDaySlots : await CalendarService.getAvailbleDailySlots(`${thirdDay}T06:00:00`, `${thirdDay}T18:00:00`, '1H')\n      }\n      dispatch(setTimeSlots(timeSlots));\n    } catch (err) {\n      console.log('Err getting timeslots', err);\n    }\n  }\n}\n\nexport function setTimeSlots(timeSlots) {\n  return {\n    type: 'SET_TIMESLOTS',\n    timeSlots\n   };\n}\n\n\n\nexport function updateHoursToBlock(slotsRangeToBlock) {\n   return  dispatch => { dispatch(_updateHoursToBlock(slotsRangeToBlock))}\n}\n\n\n\nexport function _updateHoursToBlock(slotsRangeToBlock) {\n    return {\n      type: 'UPDATE_HOURS_TO_BLOCK',\n      slotsRangeToBlock\n     };\n}\n\n\nexport function updateSlotToBlock(slotToBlock) {\n   return  dispatch => { dispatch(_updateSlotToBlock(slotToBlock))}\n}\n\n\n\nexport function _updateSlotToBlock(slotToBlock) {\n    return {\n      type: 'UPDATE_SLOT_TO_BLOCK',\n      slotToBlock\n     };\n}\n\nexport function updateRecurrence(recurrence) {\n  return  dispatch => { dispatch(_updateRecurrence(recurrence))}\n}\n\nexport function _updateRecurrence(recurrence) {\n    return {\n      type: 'UPDATE_RECURRENCE',\n      recurrence\n     };\n}\n\nexport function  updateTableModel (tableModel) {\n  return  dispatch => { dispatch(_updateTableModel(tableModel))}\n}\n\nexport function  _updateTableModel(tableModel) {\n    return {\n      type: 'UPDATE_TABLE_MODEL',\n      tableModel\n     };\n}\n\n\n\nexport function updateIsDayFullyAvailable(isDayFullyAvailable) {\n   return  dispatch => { dispatch(_updateIsDayFullyAvailable(isDayFullyAvailable))}\n}\n\n\n\nexport function _updateIsDayFullyAvailable(isDayFullyAvailable) {\n    return {\n      type: 'UPDATE_IS_DAY_FULLY_AVAILABLE',\n      isDayFullyAvailable\n     };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport { TimeslotList } from '../../cmps/TimeslotList/TimeslotList';\nimport { loadTimeSlots } from '../../actions/calendarActions.js';\nimport UtilsService from '../../services/UtilsService';\nimport { Swipeable } from 'react-swipeable'\nimport StoreService from '../../services/StoreService';\nimport { StepperApp } from '../../cmps/StepperApp/StepperApp.jsx';\nimport './CalendarApp.scss';\n\n\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\nexport function _CalendarApp(props) {\n\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [loader, setLoader] = useState(false);\n    const [calendarTitle, seTcalendarTitle] = useState('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n    const [pickerRedTitle, setPickerRedTitle] = useState('date-picker-title');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { loadTimeSlots } = props\n    useEffect(() => {\n        loadTimeSlots()\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }, [loadTimeSlots]);\n\n\n    async function handleChange(date) {\n        setLoader(true)\n        handleDateChange(date)\n        await props.loadTimeSlots(date)\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }\n\n    function disableDay(date) {\n        return  (date.getDay() === 6);\n    }\n\n\n    function onSwipeDirection(direction) {\n        if(props.timeSlots&&!loader){\n            const dateCopy = (new Date(selectedDate.setDate(selectedDate.getDate())))\n        //need to change to normal way\n        if ((direction === 'Left')&& (selectedDate.getTime()) > (new Date().getTime())) {\n              // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() - 1 === -1) || (dateCopy.getDay() - 2 === -1) || (dateCopy.getDay() - 3 === -1)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 3)));\n            }\n        }\n        else if (direction === 'Right') {\n            // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() + 1 === 6) || (dateCopy.getDay() + 2 === 6) || (dateCopy.getDay() + 3 === 6)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 3)));\n            }\n        }\n        else {\n            if ((direction !== 'Up') && (direction !== 'Down')) {\n                seTcalendarTitle('לא ניתן לבחור תאריך שעבר')\n                setPickerRedTitle('picker-red-title')\n                setTimeout(() => {\n                    seTcalendarTitle('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n                    setPickerRedTitle('date-picker-title')\n                }, 3000);\n            }\n        }\n    }\n    }\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n                <div className=\"header-calendar-app flex justifiy-center align-center space-between\" >\n                    <div className=\"weekly-dates-container weekly-dates-container-calendar-app flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                        <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                        <div className=\"dates-range-text\">{UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(0,selectedDate))}<br />\n                        {\n                            // check for saturday case\n                             ((UtilsService.getIsosDate(2,selectedDate)) !== '')?\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(2,selectedDate))\n                             :\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(3,selectedDate))\n                        }\n                        </div>\n                    </div>\n                    <div id=\"text2\" onClick={navToHomePage} >Tori<i className=\"fas fa-tasks\"></i></div>\n                </div>\n                <StepperApp className=\"calendar-app-stepper\"/>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\" }}\n            >\n                <div className=\"calendar-picker-container\">\n                    <div className={`${pickerRedTitle}`}>\n                        {calendarTitle}\n                    </div> \n                    </div>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                    <ThemeProvider theme={materialTheme}>\n                        <DatePicker\n                            disablePast={true}\n                            shouldDisableDate={disableDay}\n                            variant=\"dialog\"\n                            okLabel=\"אישור\"\n                            cancelLabel=\"ביטול\"\n                            open={isOpen}\n                            onOpen={() => setIsOpen(true)}\n                            onClose={() => setIsOpen(false)}\n                            format=\"MM/dd/yyyy\"\n                            id=\"date-picker-inline\"\n                            disableToolbar\n                            value={selectedDate}\n                            onChange={handleChange}\n                            InputProps={{\n                                disableUnderline: true,\n                                style: { width: '0' }\n                            }}\n                            keyboardbuttonprops={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </ThemeProvider>\n                </MuiPickersUtilsProvider>\n\n        \n                <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                    <div className=\"time-slot-lists-container\">\n                        {(props.timeSlots && !loader) ? <TimeslotList date={selectedDate} timeSlots={props.timeSlots} duration={props.duration} />\n                            : <div className=\"loaderContainer flex  justify-center\"><LoaderApp /></div>}\n                    </div>\n                </Swipeable>\n            </motion.div>\n            <NavBtns />\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        timeSlots: state.CalendarReducer.timeSlots,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTimeSlots\n}\n\nexport const CalendarApp = connect(mapStateProps, mapDispatchToProps)(_CalendarApp)\n","export function updateIsModalOpen(isModalOpen) {\n    return async dispatch => {\n      try {\n        dispatch(_updateIsModalOpen(isModalOpen));\n      } catch (err) {\n        console.log('modalAction: err in updateIsModalOpen', err);\n      };\n    }\n  }\n  \n  export function _updateIsModalOpen(isModalOpen) {\n    return {\n      type: 'UPDATE_IS_MODAL_OPEN',\n      isModalOpen\n    };\n  }","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport StoreService from '../../services/StoreService';\nimport './Modal.scss';\n\n\nexport default function _Modal(props) {\n    const location = useLocation()\n    const [modalClass, setModalClass] = useState('');\n    let isAdminContacts = (location.pathname === '/adminContacts')\n    useEffect(() => {\n        setTimeout(() => {\n            if(!isAdminContacts)  setModalClass('ad-modal-in')\n            else setModalClass('ad-modal-in-in-admin-contacts')\n        }, 2000);\n    }, [props.isModalOpen]);\n\n    const handleClose = () => {\n        setModalClass('')\n        setTimeout(() => {\n            props.updateIsModalOpen(false)\n        }, 2000);\n        if (location.pathname === '/form' || location.pathname === '/cancelAppointment') StoreService.initApp()\n        if (location.pathname === '/form') props.history.push('/treatments')\n    }\n\n    return (\n        <>\n            {\n                props.isModalOpen &&\n                <div className=\"main-modal-container\">\n                    <div className={`ad-modal-screen ${(isAdminContacts) ? 'modal-in-admin-contacts' : ''}`} onClick={handleClose}> </div>\n                    <div className={`ad-modal ${modalClass} ${(isAdminContacts&&!modalClass) ? 'ad-modal-in-admin-contacts' : ''}`}>\n                        <div className=\"advertise-content\">{props.modalContent}</div>\n                        <button className=\"ad-modal-btn\" onClick={handleClose}> אישור</button>\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        isModalOpen: state.ModalReducer.isModalOpen\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Modal = withRouter(connect(mapStateProps, mapDispatchToProps)(_Modal))\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport StoreService from '../../services/StoreService';\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport TreatmentService from \"../../services/TreatmentService\";\nimport './SubmitForm.scss';\n\n\n\nexport function _SubmitForm(props) {\n    const location = useLocation()\n    const [markedTreatmetns, setMarkedTreatmetns] = React.useState('');\n    const dateIsraeliDisplay = UtilsService.convertDateToIsraelisDisplay(props.treatment.date)\n    const endTime = UtilsService.calculateEndTime(props.treatment.time, props.duration)\n    const { name, phone, email } = props.userToSchedule\n    useEffect(() => {\n        setMarkedTreatmetns(TreatmentService.getMarkedTreatmentsStr(props.treatments))\n    }, [props.treatments])\n\n    const handleOpen = () => {\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    };\n\n    function init() {\n        StoreService.initApp()\n        props.history.push('/treatments')\n    }\n\n    async function setAppointment() {\n        await CalendarService.setAppointment(markedTreatmetns, props.duration, phone, email, name, props.treatment)\n    }\n\n    let isCalendarAdminForm = (location.pathname === '/calendarAdmin/form')\n\n    return (\n        <div className=\"submit-form flex column  align-center\">\n            {isCalendarAdminForm && <header className=\"header-in-form-modal flex align-center space-between\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/treatments')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div>\n                    לקביעת התור לחצו 'אישור'\n                                    </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>}\n            {!isCalendarAdminForm && <button className=\"reset-btn\" onClick={init}> איפוס <i className=\"fas fa-redo-alt\"></i></button>}\n            <div className={`user-details ${isCalendarAdminForm ? 'user-details-in-modal' : ''}`}>\n                <div>שם : {name}</div>\n                <div>טלפון : {phone}</div>\n                <div>אימייל : {email}</div>\n            </div>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageTransition') : ''}\n           style={{textAlign:'center', width:'100%'}}\n           >\n                <div className=\"appointment-details\">\n                    <div className=\"table-cell\">סוג הטיפול : {TreatmentService.getMarkedTreatmentsStr(props.treatments)}</div>\n                    <div className=\"table-cell\">תאריך : {UtilsService.convertDateToIsraelisDisplay(props.treatment.date)}</div>\n                    <div className=\"last-cell\">בין השעות : {UtilsService.calculateEndTime(props.treatment.time, props.duration)} - {props.treatment.time}</div>\n                </div>\n            </motion.div>\n            <Modal modalContent={<div className=\"main-modal-in-form flex column justify-center align-center\">\n                    <div className=\"title-modal-in-form\">התור נקבע בהצלחה</div>\n                    <div className=\"form-modal-content flex column space-between\">\n                        <div className=\"margin-bottom-5\"> נקבע לך תור ל{markedTreatmetns}  </div>\n                        <div className=\"margin-bottom-5\"> בתאריך: {dateIsraeliDisplay}</div>\n                        <div> בין השעות: {endTime} - {props.treatment.time}</div>\n                    </div>\n                </div>}\n                />\n            {!isCalendarAdminForm && <NavBtns handleOpen={handleOpen} setAppointment={setAppointment} />}\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        duration: state.TreatmentReducer.duration,\n        userToSchedule: state.UserReducer.userToSchedule,\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const SubmitForm = withRouter(connect(mapStateProps, mapDispatchToProps)(_SubmitForm))\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport EmailService from '../../services/EmailService';\nimport StorageService from \"../../services/StorageService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './CancelAppointment.scss';\n\nexport function _CancelAppointment(props) {\n    useEffect(() => {\n        getEventsByPhone()\n    }, []);\n\n    const [loader, setLoader] = React.useState(<LoaderApp />);\n    setTimeout(() => {\n        setLoader('')\n    }, 2000);\n\n    const [phone, setPhone] = React.useState((props.clickedUser) ? props.clickedUser.phone : StorageService.loadFromStorage('tori-user').phone);\n\n    const [eventsToCancel, setEventsToCancel] = useState(null)\n\n    const [pageCount, setPageCount] = useState(0)\n\n    function getEventsByPhone() {\n        EventService.getEventByPhone(phone)\n            .then(events => {\n                if (!events[0]) return\n                const filteredEvents = events.filter(event => {\n                    let year = event.date.slice(0, 4)\n                    let month = event.date.slice(5, 7)\n                    let day = event.date.slice(8, 10)\n                    let hours = +event.startTime.slice(0, 2) + 3\n                    const date = new Date(year, month - 1, day, hours, 0).getTime()\n                    return (date > Date.now())\n                })\n                if (filteredEvents.length) {\n                    setEventsToCancel(UtilsService.getEventReadyForDisplay(filteredEvents))\n                } else {\n                    setEventsToCancel(null)\n                }\n            })\n    }\n\n    async function cancelAppointment(eventId) {\n        props.updateIsModalOpen(true)\n        const events = await EventService.getEventByPhone(phone)\n        let eventToRmove = events.find(event => event._id === eventId)\n        // delete from Calendar\n        CalendarService.removeEventFromCalendar(eventToRmove.eventId)\n        if (pageCount) { setPageCount(pageCount - 1) }\n        EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n        // delete from mongo data base\n        await EventService.removeEventFromDB(eventToRmove._id)\n        getEventsByPhone()\n        //open modal useing store\n    }\n\n    return (\n        <div className=\"cancel-appointment flex column align-center space-between \">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n            >\n                {\n                    (loader) ?\n                        <div className=\"cancel-apointment-loader\">{loader}</div>\n                        :\n                        <main >\n                            <div className=\"table-wrapper\">\n                                {(eventsToCancel) ?\n                                    <div className={`cancel-table-container ${(props.clickedUser) ? 'table-container-in-contacts-modal' : ''}`}>\n                                        <div className=\"apointment-details\">\n                                            <div className=\"table-cell\"> <span>סוג הטיפול</span> : {eventsToCancel[pageCount].treatments}</div>\n                                            <div className=\"table-cell\"> בתאריך : {eventsToCancel[pageCount].date}</div>\n                                            <div className=\"last-cell\"> בין השעות : {`${eventsToCancel[pageCount].endTime} - ${eventsToCancel[pageCount].startTime}`}</div>\n                                        </div>\n                                        {(eventsToCancel.length > 1) &&\n                                            <div className=\"arrows-container flex space-between\">\n                                                {(eventsToCancel[pageCount - 1]) ? <i onClick={() => setPageCount(pageCount - 1)} className=\"arrow fas fa-angle-right\"></i>\n                                                    : <i className=\"arrow-disabled fas fa-angle-right\"></i>\n                                                }\n                                                {eventsToCancel[pageCount + 1] ? <i onClick={() => setPageCount(pageCount + 1)} className=\"arrow fas fa-angle-left\"></i>\n                                                    : <i className=\"arrow-disabled fas fa-angle-left\"></i>\n                                                }\n                                            </div>\n                                        }\n                                        <button onClick={() => cancelAppointment(eventsToCancel[pageCount].id)} className={`${(props.clickedUser)?'contacts-modal-btn':''} trash-btn`} > בטל תור </button>\n                                    </div>\n                                    :\n                                    <div className=\"no-apointments\">\n                                        לא נמצאו תורים\n                                    </div>\n                                }\n                            </div>\n                        </main>\n                }\n            </motion.div>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{ height: '100%' }}>\n                    <div>התור בוטל</div>\n                </div>} />\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const CancelAppointment = withRouter(connect(mapStateProps, mapDispatchToProps)(_CancelAppointment))\n\n\n","import React from \"react\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './SignupOrLogin.scss';\nimport { Link } from 'react-router-dom'\n\nexport function SignupOrLogin(props) {\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n        >\n            <main className=\"signup-or-login-container flex align-center justify-center column\">\n                <div className=\"square top-square\">\n                    <Link className=\"signUp-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/signup\">\n                       <div className=\"signup-or-login-text\">הרשמ/י</div> \n                       <i class=\"fas fa-user-edit\"></i>\n            </Link>\n                </div>\n                <div className=\"square bottom-square\">\n                    <Link className=\"login-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/login\">\n                       <div className=\"signup-or-login-text\">התחבר/י</div> \n                       <i class=\"fas fa-sign-in-alt\"></i>\n            </Link>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UserService from \"../../services/UserService\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport './Login.scss';\n\n\nconst ownerPassword = '1234'\n\n  function _Login(props) {\n    const [phone, setPhone] = React.useState('')\n    const [password, setPassword] = useState('');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [phoneIsValid, setPhoneIsValid] = useState(false);\n\n    useEffect(() => {\n        checkValidation()\n    }, [phone])\n\n    // hide text validation if text is valid\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'phone':\n                setPhone(value)\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        setPhoneIsValid((phone.length > 8) && (phone.length < 11))\n    }\n\n    function toggleValidations() {\n        if (!phoneIsValid) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        const userFromDb = await UserService.getUser(phone)\n        //validation of owner phone number\n        if (userFromDb) {\n            if (!userFromDb.isAdmin) {\n                //need to bring from mongo\n                const { name, email, phone} = userFromDb\n                StorageService.saveToStorage('tori-user',{name, email, phone})\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/treatments')\n            }\n            else {\n                handleClickOpen()\n            }\n        } else {\n            handleModalClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = async (close) => {\n        const userFromDb = await UserService.getUser(phone)\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                const { name, email, phone} = userFromDb\n                StorageService.saveToStorage('tori-user',{name, email, phone})\n                props.updateLoggedInUser(userFromDb) \n                props.history.push('/calendarAdmin')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleModalClickOpen = () => {\n        setOpenModal(true);\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n        >\n            <main className=\"main-login-container flex align-center justify-center column\">\n                <div className=\"login-title\">\n                    אנא הכניסו מספר טלפון לזיהוי\n                </div>\n                <form className=\"main-form flex align-center column\">\n\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n\n                </form>\n\n                <span className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!phoneIsValid}>התחבר</button></span>\n\n                <div>\n                    <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                הכנס סיסמה\n          </DialogContentText>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"סיסמה\"\n                                type=\"email\"\n                                fullWidth\n                                value={password}\n                                onChange={handleChange}\n                                name=\"password\"\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => handleClose('close')} color=\"primary\">\n                                בטל\n          </Button>\n                            <Button onClick={handleClose} color=\"primary\">\n                                אשר\n          </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n\n                {/* modal dialog */}\n                <div>\n                    <Dialog\n                        open={openModal}\n                        onClose={handleModalClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description row\">\n                                <div>\n                                    <div>\n                                        המספר שהוקש אינו קיים במערכת.\n                                    </div>\n                                    <div className=\"flex\">\n                                        <div>להרשמה לחץ</div>\n                                        <Link className=\"login-link flex align-center justify-center\" to=\"/signup\">\n                                             כאן\n                                       </Link>\n                                    </div>\n                                </div>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleModalClose} color=\"primary\" autoFocus>\n                                ביטול\n                         </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const Login = connect(mapStateProps, mapDispatchToProps)(_Login)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport {updateUserPhoneInContactSignup,updateUserToSchedule} from '../../actions/userAction.js';\nimport { useLocation } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from 'react-router-dom'\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from \"../../services/UserService\";\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './Signup.scss';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function _Signup(props) {\n    const location = useLocation()\n    const [credentials, setCredentials] = React.useState({ name: '', phone: '', email: '' })\n    const { name, phone, email } = credentials\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n    function navToContacts(){\n        props.history.push('/calendarAdmin/contacts')\n    }\n\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n    \n    async function setUser() {\n        const user = await UserService.getUser(phone)\n        if (user) {\n            handleClickOpen()\n        } else {\n          if(!isContactsPath)  props.updateLoggedInUser(credentials)\n          await  UserService.addUser(credentials, isContactsPath)\n            if (!isContactsPath) {\n                if (phone !== '123456789') props.history.push('/treatments')\n                else props.history.push('/calendarAdmin')\n            } else {\n               await props.updateUserPhoneInContactSignup(credentials.phone)\n               props.updateUserToSchedule(credentials)\n                navToContacts()\n            }\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={(!isContactsPath)? MotionService.getMotionStyle('pageVariants') :''}\n            transition={(!isContactsPath)? MotionService.getMotionStyle('pageTransition') :''}\n        >\n            <main className=\"main-login-container flex align-center justify-center column\">\n            {isContactsPath&& <header className=\"header-in-signup-modal\">\n                    {isContactsPath&&<div className=\"back-arrow\" onClick={navToContacts}><i class=\"fas fa-arrow-right\"></i></div>}\n                 </header>}\n                <div className={`login-title ${isContactsPath? 'login-title-display-none' : ''}`}>\n                    אנא מלאו את השדות הבאים ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className={`main-form flex align-center justify-center column ${isContactsPath?'main-form-in-contact-path' :''}`}>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <input maxlength=\"18\" autoFocus={true} className=\"name\" name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <input className=\"email\" name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                    </div>\n                </form>\n\n                <span className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className={`save-btn ${isContactsPath?'save-btn-in-contact-path' :''}`} onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></span>\n                <div>\n                    <Dialog\n                        open={open}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-slide-description\">\n                                <div>\n                                    <div>\n                                        המספר שהוקש כבר קיים במערכת.\n                                    </div>\n                                    {(!isContactsPath) &&\n                                        <div className=\"flex\">\n                                            <div>להתחברות לחץ</div>\n                                            <Link className=\"login-link flex align-center justify-center\" to=\"/login\">\n                                                כאן\n                                       </Link>\n                                        </div>\n                                    }\n                                </div>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                ביטול\n                       </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n\n\n\n\nfunction mapStateProps(state) {\n    return {\n       \n    }\n}\n\nconst mapDispatchToProps = {\n    updateUserPhoneInContactSignup,\n    updateUserToSchedule,\n    updateLoggedInUser\n}\n\nexport const Signup = connect(mapStateProps, mapDispatchToProps)(_Signup)","import HttpService from './HttpService'\n\nexport default {\n    getAd,\n    updateAd,\n    toggleAdMode,\n    createAd\n}\n\n// MONGO DB - GOES THREW BACKEND\n\n function getAd() {\n    return HttpService.get('advertise')\n}\n\nfunction updateAd(content) {\n    return HttpService.put('advertise', content)\n}\n\nfunction toggleAdMode(isAdMoneOn){\n    return HttpService.put('advertise/mode',isAdMoneOn)\n}\n\n function createAd() {\n    return  HttpService.post('advertise')\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateIsAdShown} from '../../actions/userAction';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport './HomePage.scss';\n\nexport function _HomePage(props) {\n    function changeRoute(route) {\n        (props.loggedInUser) ? props.history.push(route) : props.history.push('/signupOrLogin')\n    }\n    const [advertise, setAdvertise] = useState();\n    const wazeUrl = 'https://www.waze.com/ul?ll=32.07757250%2C34.82430500&navigate=yes'\n    const facebook = 'bokeresh'\n    const instagram = 'restylebar'\n\n    useEffect(() => {\n        (async () => {\n                let ad = await AdvertiseService.getAd()\n                ad = ad[0]\n                if (props.loggedInUser&&(!props.loggedInUser.isAdmin)) {\n                    if (ad && ad.content && ad.isAdModeOn) {\n                        if (!props.isAdShown) {\n                            setAdvertise(ad.content)\n                            props.updateIsModalOpen(true)\n                            props.updateIsAdShown(true)\n                        }\n                    }\n                } else {\n                    if (ad) return\n                    else {\n                        AdvertiseService.createAd()\n                    }\n                }\n        })()\n    }, [props.loggedInUser]);\n\n\n    return (\n        <div className=\"home-page-wrapper\">\n            <main className=\"home-page\">\n                <img className=\"cover-photo\" src={require('../../styles/img/oo.png')} />\n                {(props.loggedInUser) ?\n                    <div className=\"login-container\" onClick={() => props.history.push('/editUser')}>\n                        <div className=\"admin-logo\"> <i className=\"fas fa-user-tie\"></i></div>\n                        <div>{props.loggedInUser.name}</div>\n                    </div>\n                    :\n                    <div className=\"login-container\" onClick={() => props.history.push('/signupOrLogin')}>\n                        <div className=\"user-logo\">  <i className=\"fas fa-user-tie\"></i></div>\n                        <div>הרשם/</div>\n                        <div>התחבר</div>\n                    </div>\n                }\n                <div className=\"profile-container\">\n                    <div className=\"profile-img\"></div>\n                    <div className=\"profile-text-container\">\n                        <div id=\"profile-title\" className=\"profile-title\">Dee Nail Salon</div>\n                        <div className=\"profile-sub-title\">מכון לבניית ציפורניים</div>\n                    </div>\n                </div>\n                <div className=\"icons-container flex column align-center justify-center\">\n                {((props.loggedInUser ) && !props.loggedInUser.isAdmin)\n                        ?\n                        < div className=\"bottom-icons-container flex space-around\">\n                            <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                    קביעת תור\n                    </div>\n                            <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                    ביטול תור\n                    </div>\n                            <a className=\"phone\" href=\"tel:0538281511\">\n                                <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                         חייגו אלינו\n                    </a>\n                        </div>\n                        :\n                        props.loggedInUser\n                            ?\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/calendarAdmin')}>\n                                    <div className=\"circle\"><i class=\"far fa-calendar-alt\"></i></div>\n                     יומן\n                       </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/adminContacts')}>\n                                    <div className=\"circle\"><i class=\"fas fa-users\"></i> </div>\n                    לקוחות\n                      </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/advertise')}>\n                                    <div className=\"circle\"><i class=\"far fa-comment-alt\"></i></div>\n                    פרסומים\n                      </div>\n                            </div>\n                            :\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                        קביעת תור\n                         </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                       ביטול תור\n                         </div>\n                                <a className=\"phone\" href=\"tel:0538281511\">\n                                    <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                        חייגו אלינו\n                          </a>\n                            </div>\n                    }\n                    <div className=\"top-icons-container flex space-around\">\n                        <a className=\"facebook-container\" href={`https://www.facebook.com/${facebook}/`} >\n                            <div className=\"circle\"><i class=\"fab fa-facebook-f\"></i> </div>\n                       פייסבוק\n                        </a>\n                        <a className=\"instagram-container\" href={`https://www.instagram.com/${instagram}/`}>\n                            <div className=\"circle\"><i class=\"fab fa-instagram\"></i></div>\n                           אינסטגרם\n                        </a>\n                        <a className=\"waze-container\" href={wazeUrl}>\n                            <div className=\"circle\"> <i className=\"fab fa-waze\"></i></div>\n                        נווטו אלינו\n                        </a>\n                    </div>\n                </div>\n                 <Modal modalContent={advertise} />  \n            </main>\n        </div >\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        isAdShown: state.UserReducer.isAdShown,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsAdShown,\n    updateIsModalOpen\n}\n\nexport const HomePage = connect(mapStateProps, mapDispatchToProps)(_HomePage)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport './EditButton.scss';\n\n\n\n\nfunction _EditButton(props) {\n    return (\n        <div className=\"save-btn-wrapper\" onClick={() => props.toggleValidations()}>\n            <button className=\"save-btn\" onClick={() => props.setUser()} disabled={!props.isValid.phone || !props.isValid.email || !props.isValid.name}>שמור</button></div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const EditButton = connect(mapStateProps, mapDispatchToProps)(_EditButton)","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from '../../services/UserService';\nimport { EditButton } from '../../cmps/EditButton/EditButton';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './EditUser.scss';\n\nconst ownerPassword = '1234'\n\nexport function _EditUser(props) {\n    const [credentials, setCredentials] = React.useState(props.loggedInUser)\n    const { name, phone, email } = credentials\n    const [password, setPassword] = useState('');\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                // checkPhoneValidation()\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                // checkEmailValidation()\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        //validation of owner phone number\n        if (!props.loggedInUser.isAdmin) {\n            UserService.updateUser(credentials)\n            props.history.push('/')\n        }\n        else {\n            handleClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (close) => {\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                UserService.updateUser(credentials)\n                props.history.push('/')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n\n    const [isNameEditing, setIsNameEditing] = useState(false);\n    const [isNameDisabled, setIsNameDisabled] = useState(true);\n    const [nameBorderBottom, setNameBorderBottom] = useState('thin-border-bottom');\n    const nameFocus = useRef(null);\n    useEffect(() => {\n        if (isNameEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            nameFocus.current.focus();\n        }\n    }, [isNameEditing]);\n\n    const [isPhoneEditing, setIsPhoneEditing] = useState(false);\n    const [isPhoneDisabled, setIsPhoneDisabled] = useState(true);\n    const [phoneBorderBottom, setPhoneBorderBottom] = useState('thin-border-bottom');\n    const phoneFocus = useRef(null);\n    useEffect(() => {\n        if (isPhoneEditing) {\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            phoneFocus.current.focus();\n        }\n    }, [isPhoneEditing]);\n\n    const [isEmailEditing, setIsEmailEditing] = useState(false);\n    const [isEmailDisabled, setIsEmailDisabled] = useState(true);\n    const [emailBorderBottom, setEmailBorderBottom] = useState('thin-border-bottom');\n    const emailFocus = useRef(null);\n    useEffect(() => {\n        if (isEmailEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            emailFocus.current.focus();\n        }\n    }, [isEmailEditing]);\n\n\n    const toggleEditing = (value) => {\n        if (value === 'name') {\n            setIsNameEditing(!isNameEditing);\n            setIsNameDisabled(!isNameDisabled)\n            if (nameBorderBottom === 'thick-border-bottom') {\n                setNameBorderBottom('thin-border-bottom')\n            } else {\n                setNameBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'phone') {\n            setIsPhoneEditing(!isPhoneEditing);\n            setIsPhoneDisabled(!isPhoneDisabled)\n            if (phoneBorderBottom === 'thick-border-bottom') {\n                setPhoneBorderBottom('thin-border-bottom')\n            } else {\n                setPhoneBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'email') {\n            setIsEmailEditing(!isEmailEditing);\n            setIsEmailDisabled(!isEmailDisabled)\n            if (emailBorderBottom === 'thick-border-bottom') {\n                setEmailBorderBottom('thin-border-bottom')\n            } else {\n                setEmailBorderBottom('thick-border-bottom')\n            }\n        }\n    };\n\n\n    function signOut() {\n        StorageService.removeFromStorage('tori-user')\n        props.updateLoggedInUser(null)\n        props.history.push('/')\n    }\n\n    return (\n        <motion.div\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n            style={{ width: \"100%\", height: \"100%\" }}\n        >\n            <main className=\"main-edit-container flex align-center justify-center column\">\n                <div className=\"sign-out flex align-center justify-center space-between\" onClick={signOut}>\n                    <i class=\"fas fa-sign-out-alt\"></i>\n                    <div>התנתק</div>\n                </div>\n                <div className=\"login-title\">\n                    לשינוי לחצו על סמל העריכה ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className=\"main-form flex align-center justify-center column\">\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <div className={`input-edit-container ${nameBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page name\" disabled={isNameDisabled} ref={nameFocus} name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                            {\n                                (isNameEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('name')}></i>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <div className={`input-edit-container ${phoneBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page phone\" disabled={isPhoneDisabled} ref={phoneFocus} name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                            {\n                                (isPhoneEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <div className={`input-edit-container ${emailBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page email\" disabled={isEmailDisabled} ref={emailFocus} name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                            {\n                                (isEmailEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('email')}></i>\n                            }\n                        </div>\n                    </div>\n                </form>\n\n                {/* <div className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></div> */}\n              \n                <EditButton toggleValidations={toggleValidations} setUser={setUser} isValid={isValid}/>\n              \n                    <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                הכנס סיסמה\n          </DialogContentText>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"סיסמה\"\n                                type=\"email\"\n                                fullWidth\n                                value={password}\n                                onChange={handleChange}\n                                name=\"password\"\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => handleClose('close')} color=\"primary\">\n                                בטל\n          </Button>\n                            <Button onClick={handleClose} color=\"primary\">\n                                אשר\n          </Button>\n                        </DialogActions>\n                    </Dialog>\n            </main>\n        </motion.div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const EditUser = connect(mapStateProps, mapDispatchToProps)(_EditUser)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport {Modal} from '../../cmps/Modal/Modal';\nimport {updateIsModalOpen} from '../../actions/modalAction.js';\nimport './Advertise.scss';\n\nexport function _Advertise(props) {\n\n    const [advertiseContent, setAdvertiseContent] = useState('')\n    // boolean shows if the returned ad should be shown and make the opposite to backend if btn clicked\n    const [isAdModeOn, setIsAdModeOn] = useState('')\n\n    useEffect(() => {\n        (async () => {\n            let ad = await AdvertiseService.getAd()\n            setIsAdModeOn(ad[0].isAdModeOn)\n            setAdvertiseContent(ad[0].content)\n        })()\n    }, []);\n\n\n    function handleChange({ target }) {\n        setAdvertiseContent(target.value)\n    }\n\n    function updateAdContent() {\n        AdvertiseService.updateAd({ advertiseContent })\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    }\n    \n    function toggleAdMode() {\n        AdvertiseService.toggleAdMode({isAdModeOn:!isAdModeOn})\n        setIsAdModeOn(!isAdModeOn)\n    }\n\n    return (\n        <main className=\"main-ad-container\">\n            {\n                <div className=\"ad-title\">ערכו את המודעה ולחצו 'שמור טקסט'</div>\n            }\n            {\n                isAdModeOn?\n                <div className=\"ad-title ad-sub-title\">לעצירת הפרסום לחצו 'הפסק פרסום'</div>:\n                <div className=\"ad-title ad-sub-title\">לחצו 'המשך פרסום' כדי להפעילה</div>\n            }\n                <div className=\"textarea-container\">\n                    <textarea className=\"ad-textarea\" cols=\"30\" rows=\"10\" value={advertiseContent} onChange={handleChange} ></textarea>\n                    <div className=\"ad-btn-container flex column\">\n                        {\n                            isAdModeOn?\n                            <button className=\"ad-btn stop-ad-btn\" onClick={toggleAdMode}> הפסק פרסום</button>\n                            :\n                            <button className=\"ad-btn run-ad-btn\" onClick={toggleAdMode}> המשך פרסום</button>\n                        }\n                    </div>\n                </div>\n            <button className=\"ad-content-btn\" onClick={updateAdContent}>שמור טקסט</button>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{height:'100%'}}>\n                <div>הטקסט נשמר</div>\n                </div>\n                } />\n        </main>\n\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Advertise = connect(mapStateProps, mapDispatchToProps)(_Advertise)\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule } from '../../actions/userAction.js';\nimport { CancelAppointment } from '../CancelAppointment/CancelAppointment';\nimport './AdminContacts.scss';\nexport function _AdminContacts(props) {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [clickedUser, setClickedUser] = useState('')\n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = useState(false);\n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n    }\n    function saveClickedUser(user) {\n        setClickedUser(user)\n        setAppointmentsModalIsOpen(true)\n    }\n    return (\n        <main className=\"admin-contacts\">\n                   {appointmentsModalIsOpen &&\n                    <>\n                        <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                        </div>\n                        <div className=\"apointments-modal\">\n                             <header className=\"header-admin-contacts-modal\">\n                                <div className=\"space-div-for-flex\"></div>\n                                <div className=\"admin-contacts-title-in-modal\">\n                                 התורים של {clickedUser.name}\n                                </div>\n                                <div className={'modal-header-cls-btn-space'}></div>\n                             </header>\n                            <CancelAppointment clickedUser={clickedUser}/>\n                        </div>\n                    </>\n                }\n            <div className=\"search-input-wrapper flex align-center\">\n                <input className=\"search-input-admin-contacts\" placeholder=\"חפשו לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                <i className=\"fas fa-search\"></i>\n                <div onClick={() => props.history.push('/')} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></div>\n            </div>\n            <div className=\"admin-contacts-modal-title\">\n                ניתן להתקשר, לשלוח ווצאפ, לראות תורים שנקבעו\n                <div>  ואף למחוק אותם, ע״י לחיצה על האייקון המתאים.</div>\n            </div>\n            <div className=\"contacts-users-container-warpper\">\n                <div className=\"contacts-users-container\">\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container flex align-center justify-center`}  key={idx}>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-icons-container flex \">\n                                        <div className=\"user-que user-attr\" onClick={() => saveClickedUser(user)}><i class=\"far fa-calendar-check\"></i></div>\n                                        <a className=\"user-whatsapp user-attr\" href={`https://api.whatsapp.com/send?phone=+972${user.phone.slice(1,user.phone.length)}`}>\n                                            <div><i class=\"fa fa-whatsapp\"></i></div>\n                                        </a>\n                                        <a className=\"user-phone user-attr\"  href={`tel:${user.phone}`}>\n                                             <div ><i class=\"fas fa-phone-alt\"></i></div>\n                                        </a>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule\n}\nexport const AdminContacts = connect(mapStateProps, mapDispatchToProps)(_AdminContacts)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule,updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport './Contacts.scss';\n\nexport function _Contacts(props) {\n    const [searchTerm, setSearchTerm] = React.useState('')\n   \n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function markClickedUser(clickedUser) {\n        let users = props.users.slice()\n        if (clickedUser.isMarked) {\n            users = users.map(user => {\n                user.isMarked = false\n                props.updateUserToSchedule(null)\n                return user\n            })\n        } else {\n            users = users.map(user => {\n                if (user._id === clickedUser._id) {\n                    user.isMarked = true\n                    props.updateUserToSchedule(user)\n                    return user\n                } else {\n                    user.isMarked = false\n                    return user\n                }\n            })\n        }\n        props.updateUsers(users)\n    }\n\n    function transferTosignup() {\n        props.history.push('/calendarAdmin/contacts/signup')\n    }\n\n    return (\n        <main className=\"contacts-main-container\">\n            <div className=\"search-input-container flex align-center\">\n                <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"search-wrapper flex align-center\">\n                    <input className=\"search-input\" placeholder=\"חפש לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                    <i className=\"fas fa-search\"></i>\n                </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </div>\n            <div className=\"users-container-warpper\">\n                <div className=\"users-container\">\n                     <div className={`user-container  flex align-center justify-center`} onClick={transferTosignup}>\n                                    {/* // just for kepping the space of the text */}\n                                    <div className=\"check-mark-container\"></div>\n                                    <div className=\"user-name user-attr\">לקוח חדש</div>\n                                    <div className=\"user-icon user-attr\"> <i class=\"fas fa-user-plus\"></i></div>\n                                </div>\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container ${(user.isMarked) ? 'user-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(user)} key={idx}>\n                                    <div className=\"check-mark-container flex align-center\">\n                                        {\n                                            (user.isMarked) && <i class=\"fas fa-check\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-phone user-attr\">{user.phone}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userPhoneInContactSignup: state.UserReducer.userPhoneInContactSignup\n    }\n}\n\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule,\n    updateUserPhoneInContactSignup\n}\n\nexport const Contacts = connect(mapStateProps, mapDispatchToProps)(_Contacts)","import React from \"react\";\nimport { connect } from 'react-redux';\nimport './AppointmentOrBlock.scss';\n\nexport function _AppointmentOrBlock(props) {\n\n    return (\n        <>\n            <main className=\"main-appointment-or-block-container flex justify-center align-center column\">\n            <header className=\"header-in-apointment-or-block-modal\">\n                <div className=\"space-div-for-flex\"></div>\n                <div className=\"appointment-or-block-title-modal\">בחרו בפעולה הרצויה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n                <div className=\"routes-btn-container flex column space-around\">\n                    <div className=\"contacts-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/contacts')}>\n                        <div className=\"app-or-block-title\">קביעת תור ללקוח</div>\n                        <i className=\"app-icon fas fa-user-clock\"></i>\n                    </div >\n                    <div className=\"block-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/blockHours')}>\n                        <div className=\"app-or-block-title\">סגירת חלונות זמנים</div>\n                        <i class=\"fas fa-ban\"></i>\n                    </div>\n                </div>\n            <footer className=\"footer-in-apointment-or-block-modal\"></footer>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const AppointmentOrBlock = connect(mapStateProps, mapDispatchToProps)(_AppointmentOrBlock)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { updateRecurrence } from '../../actions/calendarActions';\nimport './AppointmentFreq.scss';\n\nexport function _AppointmentFreq(props) {\n\n    function updateRecurrence(freqOrCount){\n        freqOrCount = freqOrCount.target.value \n        let recurrenceCopy = {...props.recurrence}\n        recurrenceCopy.isRecurrence = true\n        if (freqOrCount.length > 2) {recurrenceCopy.freq = freqOrCount}\n        else  {recurrenceCopy.count = freqOrCount}\n        props.updateRecurrence(recurrenceCopy)\n    }\n\n    return (\n        <>\n            <main className=\"appointment-freq flex justify-center align-center column\">\n            <header className=\"header-in-appointment-freq-modal\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/blockHours')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"appointment-freq-title-modal\">קבעו את תדירות הסגירה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n            <div className=\"appointment-freq-main-contianer\">\n                <div className=\"appointment-freq-exmple-container\">\n                    <br/>\n                    <div className=\"\">בחרו את מספר הסגירות,</div>\n                    <div className=\"\">ואחת לכמה זמן תופיע הסגירה.</div>\n                    <br/>\n                    <div>לדוגמא: </div>\n                    <br/>\n                    <div>נניח שמספר הסגירות הוא שתיים,</div>\n                    <div>ובחרתם סגירות על בסיס שבועי.</div>\n                    <br/>\n                    <div>יקבעו שתי סגירות!</div>\n                    <br/>\n                    <div> הראשונה ביום הנבחר,</div>\n                    <div>והשנייה בדיוק שבוע לאחר מכן.</div>\n                    <br/>\n                    <div className=\"one-time-appointment\">לסגירה רגילה וחד פעמית.</div>\n                    <div className=\"one-time-appointment\">אין צורך לבחור, פשוט לחצו אישור.</div>\n                    <br/>\n                </div>\n                <div className=\"appointment-freq-selects-wrapper\">\n                    <div className=\"count-container flex space-between\">\n                        <div className=\"count-title\" for=\"count\">מספר החזרות הרצוי:</div>\n                            <select className=\"count-select\" id=\"count\" name=\"count\" onChange={updateRecurrence}>\n                                <option value={1} selected={(props.recurrence.count === '1')? true : false }>אחת</option>\n                                <option value={2} selected={(props.recurrence.count === '2')? true : false }>שתיים</option>\n                                <option value={3} selected={(props.recurrence.count === '3')? true : false }>שלוש</option>\n                                <option value={4} selected={(props.recurrence.count === '4')? true : false }>ארבע</option>\n                                <option value={5} selected={(props.recurrence.count === '5')? true : false }>חמש</option>\n                                <option value={6} selected={(props.recurrence.count === '6')? true : false }>שש</option>\n                                <option value={7} selected={(props.recurrence.count === '7')? true : false }>שבע</option>\n                                <option value={8} selected={(props.recurrence.count === '8')? true : false }>שמונה</option>\n                                <option value={9} selected={(props.recurrence.count === '9')? true : false }>תשע</option>\n                                <option value={10} selected={(props.recurrence.count === '10')? true : false }>עשר</option>\n                                <option value={11} selected={(props.recurrence.count === '11')? true : false }>אחת-עשרה</option>\n                                <option value={12} selected={(props.recurrence.count === '12')? true : false }>שתיים-עשרה</option>\n                                <option value={13} selected={(props.recurrence.count === '13')? true : false }>שלוש-עשרה</option>\n                                <option value={14} selected={(props.recurrence.count === '14')? true : false }>ארבע-עשרה</option>\n                                <option value={15} selected={(props.recurrence.count === '15')? true : false }>חמש-עשרה</option>\n                                <option value={16} selected={(props.recurrence.count === '16')? true : false }>שש-עשרה</option>\n                                <option value={17} selected={(props.recurrence.count === '17')? true : false }>שבע-עשרה</option>\n                                <option value={18} selected={(props.recurrence.count === '18')? true : false }>שמונה-עשרה</option>\n                                <option value={19} selected={(props.recurrence.count === '19')? true : false }>תשע-עשרה</option>\n                                <option value={20} selected={(props.recurrence.count === '20')? true : false }>עשרים</option>\n                            </select>\n                    </div>\n                    <br/>\n                            <div className=\"freq-container flex space-between\">\n                                <div className=\"freq-title\" for=\"freq\">חזרתיות על בסיס:</div>\n                                <select className=\"appointment-freq-select\" name=\"freq\" id=\"freq\" onChange={updateRecurrence}>\n                                    <option value=\"DAILY\" selected={(props.recurrence.freq === 'DAILY')? true : false }>יומי</option>\n                                    <option value=\"WEEKLY\" selected={(props.recurrence.freq === 'WEEKLY')? true : false }>שבועי</option>\n                                </select>\n                            </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        recurrence: state.CalendarReducer.recurrence,\n        userToSchedule: state.UserReducer.userToSchedule\n    }\n}\n\nconst mapDispatchToProps = {\n    updateRecurrence\n}\n\nexport const AppointmentFreq = connect(mapStateProps, mapDispatchToProps)(_AppointmentFreq)\n","import React  from \"react\";\nimport { connect } from 'react-redux';\nimport { updateHoursToBlock, updateSlotToBlock } from '../../actions/calendarActions';\nimport './BlockHours.scss';\n\nexport function _BlockHours(props) {\n\n    function markClickedUser(clickedSlotRange) {\n        let slotsRange = props.slotsRangeToBlock.slice()\n        if (clickedSlotRange.isMarked) {\n            slotsRange = slotsRange.map(slotRange => {\n                slotRange.isMarked = false\n                props.updateSlotToBlock(null)\n                return slotRange\n            })\n        } else {\n            slotsRange = props.slotsRangeToBlock.map(slotRange => {\n                if (slotRange.end === clickedSlotRange.end) {\n                    slotRange.isMarked = true\n                    props.updateSlotToBlock(slotRange)\n                    return slotRange\n                } else {\n                    slotRange.isMarked = false\n                    return slotRange\n                }\n            })\n        }\n        props.updateHoursToBlock(slotsRange)\n    }\n\n    return (\n        <main className=\"hours-main-container\">\n                <header className=\"header-in-block-hours-modal flex align-center\">\n                     <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    <div className=\"block-hours-title-in-modal\">בחרו חלון זמנים ולחצו 'אישור' </div>\n                    <div className={'modal-header-cls-btn-space'}></div>\n                </header>\n            <div className=\"hours-container-warpper\">\n                <div className=\"hours-container\">\n                    {\n                        (props.slotsRangeToBlock) &&\n                        props.slotsRangeToBlock.map((slotRange, idx) => {\n                            return (\n                                (props.isDayFullyAvailable && (idx === 0))\n                                    ?\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div>סגירת יום שלם</div>\n                                    </div>\n                                    :\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div className=\"hour-end user-attr\">{slotRange.end}</div>\n                                        <div className=\"hours-dash\">-</div>\n                                        <div className=\"hour-start user-attr\">{slotRange.start}</div>\n                                    </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        isDayFullyAvailable: state.CalendarReducer.isDayFullyAvailable\n    }\n}\n\nconst mapDispatchToProps = {\n    updateHoursToBlock,\n    updateSlotToBlock\n}\n\nexport const BlockHours = connect(mapStateProps, mapDispatchToProps)(_BlockHours)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport UtilsService from \"../../services/UtilsService\";\nimport './BlockConfermation.scss';\n\nexport function _BlockConfermation(props) {\n  return (\n    <>\n      <header className=\"header-in-block-confermation-modal flex space-between\">\n        <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/freq')}><i  class=\"fas fa-arrow-right\"></i></div>\n        <div className=\"block-confirmation-title-in-modal\">\n          לסגירת החלון שנבחר לחצו 'אישור'\n        </div>\n        <div className={'modal-header-cls-btn-space'}></div>\n      </header>\n      <main className=\"main-confermation-container flex align-center justify-center\">\n        <div className=\"block-confermation-details\">\n          <div className=\"table-cell1\">חלון הזמנים שנבחר :</div>\n          <div className=\"table-cell2\">בתאריך : {UtilsService.convertDateToIsraelisDisplay(props.slotToBlock.date)}</div>\n          <div className=\"table-cell3\">בין השעות : {props.slotToBlock.end} - {props.slotToBlock.start}</div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nfunction mapStateProps(state) {\n  return {\n    slotToBlock: state.CalendarReducer.slotToBlock\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const BlockConfermation = connect(mapStateProps, mapDispatchToProps)(_BlockConfermation)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './ModalButton.scss';\n\nfunction _ModalButton(props) {\n    const location = useLocation()\n    function checkBtnValidation() {\n        const path = location.pathname\n        let isValid = true\n        switch (path) {\n            case '/calendarAdmin/contacts':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/treatments':\n                isValid = (!props.pickedTreatmentsCount) || (!(props.duration <= props.availableDuration))\n                break;\n            case '/calendarAdmin/form':\n                isValid = false\n                break;\n            case '/calendarAdmin/freq':\n                isValid = false\n                break;\n            case '/calendarAdmin/blockHours':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/blockConfermation':\n                isValid = false\n                break;\n            case '/calendarAdmin/appointmentOrBlock':\n                isValid = true\n                break;\n            default:\n                console.log('Err updating button modal validation')\n        }\n        return isValid\n    }\n    return (\n        <button className=\"calendar-admin-modal-btn\" onClick={() => props.handleModalRoute(props.duration)}\n            disabled={checkBtnValidation()}>\n            {\n                (location.pathname === '/calendarAdmin/contacts') ?\n                    'בחרו לקוח ולחצו כאן להמשך'\n                    :\n                    (location.pathname === '/calendarAdmin/treatments')\n                        ?\n                        'לחצו כאן להמשך'\n                        :\n                        (location.pathname === '/calendarAdmin/blockHours')\n                            ?\n                            'אישור'\n                            :\n                            (location.pathname === '/calendarAdmin/appointmentOrBlock')\n                                ?\n                                ''\n                                :\n                                'אישור'\n            }\n        </button>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const ModalButton = connect(mapStateProps, mapDispatchToProps)(_ModalButton)","import React, { useEffect, useState } from \"react\";\nimport { useLocation, HashRouter as Router, withRouter, Route } from 'react-router-dom';\nimport { connect} from 'react-redux';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { Swipeable } from 'react-swipeable'\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { updateAvailbleDuration, setTreatment } from '../../actions/treatmentActions.js';\nimport { updateHoursToBlock, updateIsDayFullyAvailable, updateTableModel} from '../../actions/calendarActions';\nimport { updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport TreatmentService from \"../../services/TreatmentService\";\nimport UtilsService from '../../services/UtilsService';\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport StoreService from '../../services/StoreService';\nimport { TreatmentApp } from '../TreatmentApp/TreatmentApp'\nimport { Contacts } from '../../pages/Contacts/Contacts.jsx'\nimport { AppointmentOrBlock } from '../../pages/AppointmentOrBlock/AppointmentOrBlock.jsx'\nimport { AppointmentFreq } from '../../pages/AppointmentFreq/AppointmentFreq.jsx'\nimport { BlockHours } from '../../pages/BlockHours/BlockHours.jsx'\nimport { BlockConfermation } from '../../pages/BlockConfermation/BlockConfermation.jsx'\nimport { SubmitForm } from '../../pages/SubmitForm/SubmitForm.jsx'\nimport { ModalButton } from '../../cmps/ModalButton/ModalButton.jsx'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport './CalendarAdmin.scss';\nimport { Signup } from \"../Signup/Signup\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide timeout={5000} direction=\"down\" ref={ref} {...props} />;\n});\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\n\n\nfunction _CalendarAdmin(props) {\n    //the date is irrelevant, its only for the formated function the hours wiil be given by the owner.\n    const location = useLocation()\n    const constrains = {\n        start: \"2020-10-12T06:00:00Z\",\n        end: \"2020-10-12T18:00:00Z\"\n    }\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [tempEventToRmoveId, setTempEventToRmoveId] = useState('');\n    const [eventToRmoveId, setEventToRmove] = React.useState({});\n    const [prevEventsToDisplay, setPrevEventsToDisplay] = React.useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [modalSubJect, setModalSubJect] = React.useState('');\n    const [isTempModeOn, setIsTempModeOn] = useState(false);\n    const [weeklyDates, setWeeklyDates] = useState([]);\n    const [timeSlots, setWorkingTimeSlots] = useState(getWorkingTimeSlots());\n    const [isClicked, setIsClicked] = useState(true);\n    const [tableCells, setTableCells] = useState([]);\n    const [occDates, setOccupiedDates] = useState([]);\n    const [month, setMonth] = useState(UtilsService.getMonthByIdx(new Date().getMonth() + 1));\n    const [eventsToDisplay, setEventsToDisplay] = useState(async () => {\n        return await getWeeklyEvents()\n    });\n    const [daysForDisplay, setDaysForDisplay] = useState(() => {\n        return getDailyDates(selectedDate)\n    });\n    const [loader, setLoader] = useState(true);\n\n    let eventsIds = []\n\n    let weeklyRange = CalendarService.getDatesWeeklyRange(selectedDate)\n    \n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = React.useState(false);\n\n\n    useEffect(() => {\n        (async () => {\n\n            let weeklyEvents = await eventsToDisplay\n            let isTemp = false\n            weeklyEvents.forEach(dailyEvents => {\n                dailyEvents.forEach(ev => {\n                    if (ev.isTemp) isTemp = true\n                })\n            })\n            if (!isTemp) {\n                setIsTempModeOn(false)\n                setOpen(false)\n            }\n\n            if (!props.tableModel.length) {\n                let table = CalendarService.buildWeeklyModel(timeSlots,await eventsToDisplay)\n                props.updateTableModel(table)\n            }\n\n            if (weeklyEvents) setLoader(false)\n            if (weeklyEvents && timeSlots) {\n                console.log('calendaradmin recreated')\n\n                return setTableCells(\n                    timeSlots.map((ts, tsIdx) => {\n                        if (tsIdx === timeSlots.length - 1) return\n                        return <tr key={tsIdx}>\n                            <td className=\"td-hours\">{UtilsService.timeToDisplay(ts)}</td>\n                            {\n                                weeklyEvents.map((dailyEvents, dailyIdx) => {\n                                    let counter = 0\n                                    if (dailyEvents.length) {\n                                        let cellIsRendered = false\n                                        return dailyEvents.map((ev, eventIdx) => {\n                                            let evenOrOdd = (dailyIdx % 2 === 0) ? 'even-event' : 'odd-event'\n                                            if (counter > 2) counter = 0\n                                            const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                                            if (range.occupied) {\n                                                cellIsRendered = true\n                                                if (!eventsIds.includes(ev.id)) {\n                                                    eventsIds.push(ev.id)\n                                                    return <td className={`occupied-cell ${(ev.name === 'block - block') ? 'blocked-cell' : ''} ${evenOrOdd}-${(counter)} ${(ev.isTemp&&!ev.isCancelApp) ? 'temp-cell' : ''}`} key={eventIdx} onClick={() => handleClickOpen(ev)} rowSpan={range.rowspan}>\n                                                        <div className=\"occupied-cell-content\">\n                                                            <div className=\"event-time-wrapper\">\n                                                                <div className=\"event-time\">{UtilsService.timeToDisplay((ev.start).slice(11, 16))}-{UtilsService.timeToDisplay((ev.end).slice(11, 16))}</div>\n                                                            </div>\n                                                            {(ev.name === 'block - block')\n                                                                ?\n                                                                <div>\n                                                                    סגור\n                                                                </div>\n                                                                :\n                                                                <div className=\"event-desc\">\n                                                                    <div className=\"event-name\">{UtilsService.getSplitedEventDesc(ev.name).name}</div>\n                                                                    <div className=\"event-treatment\">{UtilsService.getSplitedEventDesc(ev.name).treatment}</div>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </td>\n\n                                                } else return ''\n                                            }\n                                            else if ((dailyEvents.length === eventIdx + 1) && (!cellIsRendered)) {\n                                                return <td className=\"available-cell\" key={eventIdx} onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                            }\n                                            counter++\n                                        })\n                                    } else {\n                                        //all day available no event at this day\n                                        return <td key={dailyIdx} className=\"available-cell\" onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts, true)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                    }\n                                })\n                            }\n                        </tr>\n                    })\n                )\n            }\n        })()\n    }, [eventsToDisplay, props.updateTableModel, props.tableModel]);\n\n    useEffect(() => {\n        checkIfClicked()\n    }, [props.users, props.slotsRangeToBlock]);\n\n    useEffect(() => {\n        // events to display\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n                let table = CalendarService.buildWeeklyModel(timeSlots, await eventsToDisplay)\n                props.updateTableModel(table)\n        })()\n    }, [eventsToDisplay]);\n\n    function checkIfClicked() {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            setIsClicked(!(props.users.find(user => user.isMarked)))\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            setIsClicked(!(props.slotsRangeToBlock.find(sr => sr.isMarked)))\n        }\n    }\n\n    function openAppointmentsModal(cellPos, ts, isDayFullyAvailable = false) {\n        console.log('tt',props.tableModel)\n        props.updateIsDayFullyAvailable(isDayFullyAvailable)\n        const dateToScheduale = weeklyDates[cellPos.dailyIdx].start\n        props.setTreatment({\n            time: ts,\n            date: dateToScheduale.slice(0, 10),\n            dailyIdx: cellPos.dailyIdx\n        })\n        const availableDuration = CalendarService.getAvailbleDuration(props.tableModel, cellPos)\n        props.updateAvailbleDuration(availableDuration)\n        props.updateHoursToBlock(CalendarService.getHoursToBlock(timeSlots, ts, availableDuration, dateToScheduale.slice(0, 10), isDayFullyAvailable))\n        setAppointmentsModalIsOpen(true)\n        props.history.push('/calendarAdmin/appointmentOrBlock')\n    }\n\n\n    function handleModalRoute(duration) {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            props.history.push('/calendarAdmin/treatments')\n            setIsClicked(true)\n        }\n        if (location.pathname === '/calendarAdmin/treatments') {\n            props.history.push('/calendarAdmin/form')\n            // props.history.push('/calendarAdmin/freq')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n        //  if (userToSchedule) {props.history.push('/calendarAdmin/form')}\n        //  else {{props.history.push('/calendarAdmin/blockConfermation')}\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/form') {\n            // setAppointment(duration, props.recurrence)\n            setAppointment(duration)\n            closeAppointmentsModal()\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            props.history.push('/calendarAdmin/freq')\n            // props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/blockConfermation') {\n            blockSlotRange(props.recurrence)\n            closeAppointmentsModal()\n        }\n    }\n\n    function getDailyDates(date) {\n        const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n        setWeeklyDates(days)\n        return days.map(day => {\n            return day.start.slice(8, 10)\n        })\n    }\n\n    async function cancelAppiontment() {\n        setIsTempModeOn(true)\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.filter(ev => ev.id !== tempEventToRmoveId)\n        })\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.map(ev => {\n                ev.isTemp = true\n                ev.isCancelApp = true\n                return ev\n            })\n        })\n\n        setEventsToDisplay(eventsToDisplayCopy)\n        const confirmedDeletedEvent = await CalendarService.removeEventFromCalendar(eventToRmoveId.calendar)\n        console.log(confirmedDeletedEvent)\n        if (!confirmedDeletedEvent) {\n            console.log('problem deleting event')\n            //need to put modal\n            return\n        }\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n        // delete from mongo data base\n        EventService.removeEventFromDB(eventToRmoveId.mongo)\n        // EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n    }\n\n\n\n    function getWorkingTimeSlots() {\n        return UtilsService.getDailySlotsForPreview([constrains], 15)\n    }\n\n    async function getWeeklyEvents(date = new Date()) {\n        return await Promise.all((UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)).map(async isosDate => {\n            return await CalendarService.getEventsFromCalendar(isosDate)\n        }))\n    }\n\n    async function handleChange(date) {\n        setDaysForDisplay(getDailyDates(date))\n        setMonth(UtilsService.getMonthByIdx(date.getMonth() + 1))\n        eventsIds = []\n        setLoader(true)\n        const weeklyEvents = await getWeeklyEvents(date)\n        if (weeklyEvents) {\n            setLoader(false)\n        }\n        setEventsToDisplay(weeklyEvents)\n        handleDateChange(date)\n    }\n\n    function onSwipeDirection(direction) {\n        if (!loader) {\n            //need to change to normal way\n            if ((direction === 'Left') && (selectedDate.getTime()) > (new Date().getTime())) {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 7)));\n            }\n            else if (direction === 'Right') {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 7)));\n            }\n        }\n    }\n\n    const handleClickOpen = async (ev) => {\n        if (ev) {\n            setTempEventToRmoveId(ev.id)\n            if (ev.name === 'block - block') setModalSubJect('block')\n            else setModalSubJect('appointment')\n            const mongoEvent = await EventService.getMongoEventByEventCalendarId(ev.id)\n            setEventToRmove({ mongo: mongoEvent._id, calendar: ev.id })\n        }\n        setOpen(true);\n    };\n\n    const handleClose = (isApproved) => {\n        setOpen(false);\n        console.log(prevEventsToDisplay)\n        if (isApproved && !prevEventsToDisplay) cancelAppiontment()\n        if (prevEventsToDisplay) {\n            setEventsToDisplay(prevEventsToDisplay)\n            setPrevEventsToDisplay(null)\n        }\n    };\n\n    async function setAppointment(duration) {\n        setIsTempModeOn(true)\n        const markedTreatmetns = TreatmentService.getMarkedTreatmentsStr(props.treatments)\n        const { phone, email, name } = props.userToSchedule\n        let time = UtilsService.changeTimeForDisplay(props.treatment.time, 0)\n        const startTime = `${props.treatment.date}T${time}:00Z`\n        time = UtilsService.calculateEndTime(time, duration)\n        const endTime = `${props.treatment.date}T${time}:00Z`\n        const tempEvent = {\n            id: UtilsService.idGen(),\n            name: `${name} - ${markedTreatmetns}`,\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        setEventsToDisplay(eventsToDisplayCopy)\n        const confirmedEvent = await CalendarService.setAppointment(markedTreatmetns, duration, phone, email, name, props.treatment)\n        if (!confirmedEvent) {\n            console.log('couldnt schduale appointment')\n            //need to put modal\n            return\n        }\n\n        setEventsToDisplay(await getWeeklyEvents(selectedDate))\n    }\n\n    async function blockSlotRange(recurrence) {\n        console.table('tt',props.tableModel)\n        setIsTempModeOn(true)\n        let time1 = UtilsService.changeTimeForDisplay(props.slotToBlock.start, 0)\n        let time2 = UtilsService.changeTimeForDisplay(props.slotToBlock.end, 0)\n        let startTime = `${props.slotToBlock.date}T${time1}:00Z`\n        let endTime = `${props.slotToBlock.date}T${time2}:00Z`\n        let tempEvent = {\n            id: UtilsService.idGen(),\n            name: 'block - block',\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n            let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n            eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        \n            let startTimeTs = tempEvent.start.slice(11,16) \n            let startTimeTsIdx = timeSlots.findIndex(ts => ts === startTimeTs)\n            let endTimeTs = tempEvent.end.slice(11,16)\n            let endTimeTsIdx = timeSlots.findIndex(ts => ts === endTimeTs)\n    \n            for (var i=1; i<props.recurrence.count && props.recurrence.freq === 'DAILY'; i++){\n              tempEvent = {...tempEvent}\n              startTime = new Date (new Date(startTime).getTime() + (1000 * 60 * 60 * 24))\n              startTime = startTime.toISOString()\n              endTime = new Date (new Date(endTime).getTime() + (1000 * 60 * 60 * 24))\n              endTime = endTime.toISOString()\n              tempEvent.id = UtilsService.idGen()\n              tempEvent.start = startTime\n              tempEvent.end = endTime\n            //   dailyIdx+i for the next day -- the j is for the ts (where exactly in the next day) => making sure there is not already an event there before pushing temp\n            let isCellOccupied = false\n            for (var j=startTimeTsIdx; j<endTimeTsIdx; j++) { \n                if (!props.tableModel[j][props.treatment.dailyIdx+i]){\n                    isCellOccupied = true\n                    console.log(timeSlots[j], 'is not availble at', props.treatment.dailyIdx+i)\n                }\n            }\n                if (!isCellOccupied) { eventsToDisplayCopy[props.treatment.dailyIdx+i].push(tempEvent)}\n        }\n            let prevEvents = [... await eventsToDisplay]\n            setEventsToDisplay(eventsToDisplayCopy)\n            const confirmedBlockOrOccDates = await CalendarService.blockSlotRange(props.slotToBlock, 'block', recurrence)\n        if (confirmedBlockOrOccDates &&  typeof confirmedBlockOrOccDates !== 'array') {\n            setOccupiedDates (confirmedBlockOrOccDates)\n            setPrevEventsToDisplay (prevEvents)\n            setIsTempModeOn(false)\n            setModalSubJect('occupied')\n            setOpen(true)\n            return\n        }\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n    }\n\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n        // chagne semantics, because it represents the opposite - making sure btn will be disable after modal closed and reopen\n        setIsClicked(true)\n        props.updateUserPhoneInContactSignup('')\n        StoreService.initApp()\n        props.history.push('/calendarAdmin')\n    }\n\n    function disableDay(date) {\n        return (date.getDay() === 6);\n    }\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                <ThemeProvider theme={materialTheme}>\n                    <DatePicker\n                        disablePast={true}\n                        shouldDisableDate={disableDay}\n                        variant=\"dialog\"\n                        okLabel=\"אישור\"\n                        cancelLabel=\"ביטול\"\n                        open={isOpen}\n                        onOpen={() => setIsOpen(true)}\n                        onClose={() => setIsOpen(false)}\n                        format=\"MM/dd/yyyy\"\n                        id=\"date-picker-inline\"\n                        disableToolbar\n                        value={selectedDate}\n                        onChange={handleChange}\n                        InputProps={{\n                            disableUnderline: true,\n                            style: { width: '0', height: '0px' }\n                        }}\n                        keyboardbuttonprops={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </ThemeProvider>\n            </MuiPickersUtilsProvider>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n                <main className=\"calendar-admin-container\">\n                    <div className=\"header-app flex justifiy-center align-center space-between\" >\n                        <div className=\"weekly-dates-container flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                            <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                            <div className=\"weekly-dates-text\">{weeklyRange.firstDay}<br />{weeklyRange.lastDay} </div>\n                        </div>\n                        <div id=\"text2\" onClick={() => props.history.push('/')} >Tori<i className=\"fas fa-tasks\"></i></div>\n                    </div>\n                    <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                        <header className=\"days-header-container flex space-between\">\n                            <div className=\"days-name-container month-container\" >\n                                <div className=\"month-name\">{month}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">ראשון</div>\n                                <div className=\"daily-num\"> {daysForDisplay[0]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שני</div>\n                                <div className=\"daily-num\"> {daysForDisplay[1]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שלישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[2]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">רביעי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[3]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">חמישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[4]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[5]}</div>\n                            </div>\n                        </header>\n                        <div>\n                            {\n                                !loader ?\n                                    <div className=\"table-container\">\n                                        <table>\n                                            <tbody>\n                                                {\n                                                    (tableCells.length) &&\n                                                    tableCells\n                                                }\n                                            </tbody>\n                                        </table>\n                                        <footer className=\"calendar-footer flex align-center justify-center\">\n                                            <div className=\"footer-hours\">20:00</div>\n                                        </footer>\n                                    </div>\n                                    :\n                                    <div className=\"loader-container flex justify-center align-center space-around\">\n                                        <LoaderApp />\n                                    </div>\n                            }\n                        </div>\n                    </Swipeable>\n\n\n\n                    <div>\n                        <Dialog\n                            open={open}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={() => handleClose(false)}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\n                                    (isTempModeOn) ?\n                                        'ארעה שגיאה'\n                                        :\n                                        (modalSubJect === 'block')\n                                            ?\n                                            'הסרת חסימה'\n                                            :\n                                            (modalSubJect === 'appointment')?\n                                            'ביטול תור'\n                                            :\n                                                (occDates.length>1)?\n                                                 'התאריכים הנ״ל כבר תפוסים' \n                                                 :\n                                                 'התאריך הנ״ל כבר תפוס' \n                                }\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    {\n                                        (isTempModeOn) ?\n                                            'סגרו את המודעה ונסו שנית'\n                                            :\n                                            (modalSubJect === 'block')\n                                                ?\n                                                'להסרת החסימה לחצו אישור'\n                                                :\n                                                (modalSubJect === 'appointment')?\n                                                ' לביטול התור לחצו אישור'\n                                                :\n                                                (occDates.length>1)?\n                                                `התאריכים - ${occDates.map(d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוסים, הסגירות לא נקבעו!`\n                                                :\n                                                `התאריך ${occDates.map(d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוס, הסגירות לא נקבעו!`\n\n                                           \n                                        // (isTempModeOn) ?\n                                        //     'סגרו את המודעה ונסו שנית'\n                                        //     :\n                                        //     (modalSubJect === 'block')\n                                        //         ?\n                                        //         'להסרת החסימה לחצו אישור'\n                                        //         :\n                                        //         ' לביטול התור לחצו אישור'\n                                    }\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => handleClose(false)} color=\"primary\">\n                                    ביטול\n                            </Button>\n                                {\n                                    (isTempModeOn)\n                                        ?\n                                        <Button onClick={() => handleClose(false)} color=\"primary\">\n                                            אישור\n                             </Button>\n                                        :\n                                        <Button onClick={() => handleClose(true)} color=\"primary\">\n                                            אישור\n                              </Button>\n                                }\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    {appointmentsModalIsOpen &&\n                        <>\n                            <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                            </div>\n                            <div className=\"apointments-modal\">\n                                <Router>\n                                    <Route path=\"/calendarAdmin/contacts\" exact component={Contacts} />\n                                    <Route path=\"/calendarAdmin/contacts/signup\" component={Signup} />\n                                    <Route path=\"/calendarAdmin/treatments\" component={TreatmentApp} />\n                                    <Route path=\"/calendarAdmin/form\" component={SubmitForm} />\n                                    <Route path=\"/calendarAdmin/freq\" component={AppointmentFreq} />\n                                    <Route path=\"/calendarAdmin/appointmentOrBlock\" component={AppointmentOrBlock} />\n                                    <Route path=\"/calendarAdmin/blockHours\" component={BlockHours} />\n                                    <Route path=\"/calendarAdmin/blockConfermation\" component={BlockConfermation} />\n                                </Router>\n                                {((location.pathname !== '/calendarAdmin/appointmentOrBlock') && (location.pathname !== '/calendarAdmin/contacts/signup')) && <ModalButton handleModalRoute={handleModalRoute} isClicked={isClicked} />}\n                                <div className=\"close-admin-modal-btn\" onClick={closeAppointmentsModal}><i class=\"fas fa-times\"></i></div>\n                            </div>\n                        </>\n                    }\n                </main>\n            </motion.div>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userToSchedule: state.UserReducer.userToSchedule,\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        slotToBlock: state.CalendarReducer.slotToBlock,\n        recurrence: state.CalendarReducer.recurrence,\n        tableModel: state.CalendarReducer.tableModel\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAvailbleDuration,\n    setTreatment,\n    updateHoursToBlock,\n    updateIsDayFullyAvailable,\n    updateUserPhoneInContactSignup,\n    updateTableModel\n}\n\nexport const CalendarAdmin = withRouter(connect(mapStateProps, mapDispatchToProps)(_CalendarAdmin))\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { TreatmentApp } from './pages/TreatmentApp/TreatmentApp.jsx'\nimport { CalendarApp } from './pages/CalendarApp/CalendarApp.jsx'\nimport { SubmitForm } from './pages/SubmitForm/SubmitForm.jsx'\nimport { CancelAppointment } from './pages/CancelAppointment/CancelAppointment.jsx'\nimport { SignupOrLogin } from './pages/SignupOrLogin/SignupOrLogin.jsx'\nimport { Login } from './pages/Login/Login.jsx'\nimport { Signup } from './pages/Signup/Signup.jsx'\nimport { HomePage } from './pages/HomePage/HomePage.jsx'\nimport { EditUser } from './pages/EditUser/EditUser.jsx'\nimport { Advertise } from './pages/Advertise/Advertise.jsx'\nimport { AdminContacts } from './pages/AdminContacts/AdminContacts.jsx'\nimport { CalendarAdmin } from './pages/CalendarAdmin/CalendarAdmin.jsx'\nimport { HashRouter as Router } from 'react-router-dom';\nimport { updateLoggedInUser } from './actions/userAction.js';\nimport StorageService from './services/StorageService';\nimport UserService from './services/UserService';\n\nexport function _App(props) {\n\n  useEffect(() => {\n    (async () => {\n    let user = await StorageService.loadFromStorage('tori-user')\n    if (user&&!props.loggedInUser) {\n     await props.updateLoggedInUser(await UserService.getUser(user.phone))\n    }\n  })()\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch >\n          <Route path=\"/calendar\" component={CalendarApp} />\n          <Route path=\"/cancelAppointment\" component={CancelAppointment} />\n          <Route path=\"/form\" component={SubmitForm} />\n          <Route path=\"/treatments\" component={TreatmentApp} />\n          <Route path=\"/signupOrLogin\" component={SignupOrLogin} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/editUser\" component={EditUser} />\n          <Route path=\"/calendarAdmin\" component={CalendarAdmin} />\n          <Route path=\"/advertise\" component={Advertise} />\n          <Route path=\"/adminContacts\" component={AdminContacts} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    loggedInUser: state.UserReducer.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  updateLoggedInUser\n}\n\nexport const App = connect(mapStateProps, mapDispatchToProps)(_App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}