{"version":3,"sources":["styles/img/oo.png","reducers/TreatmentReducer.js","reducers/ModalReducers.js","reducers/StepperReducer.js","reducers/CalendarReducer.js","history.js","services/HttpService.js","services/StorageService.js","services/UserService.js","reducers/UserReducer.js","store.js","services/StoreService.js","cmps/TabsApp/TabsApp.jsx","cmps/StepperApp/StepperApp.jsx","cmps/AppHeader/AppHeader.jsx","services/UtilsService.js","services/TreatmentService.js","actions/treatmentActions.js","actions/userAction.js","cmps/SwitchApp/SwitchApp.jsx","cmps/TreatmentPreview/TreatmentPreview.jsx","cmps/TreatmentList/TreatmentList.jsx","cmps/TreatmentTitle/TreatmentTitle.jsx","actions/stepperActions.js","cmps/NavBtns/NavBtns.jsx","services/MotionService.js","cmps/LoaderApp/LoaderApp.jsx","pages/TreatmentApp/TreatmentApp.jsx","cmps/DailySlots/DailySlots.jsx","cmps/TimeslotList/TimeslotList.jsx","services/EventService.js","services/EmailService.js","services/CalendarService.js","actions/calendarActions.js","pages/CalendarApp/CalendarApp.jsx","actions/modalAction.js","cmps/Modal/Modal.jsx","pages/SubmitForm/SubmitForm.jsx","pages/CancelAppointment/CancelAppointment.jsx","pages/SignupOrLogin/SignupOrLogin.jsx","pages/Login/Login.jsx","pages/Signup/Signup.jsx","services/AdvertiseService.js","pages/HomePage/HomePage.jsx","pages/EditUser/EditUser.jsx","pages/Advertise/Advertise.jsx","pages/AdminContacts/AdminContacts.jsx","pages/Contacts/Contacts.jsx","pages/AppointmentOrBlock/AppointmentOrBlock.jsx","pages/BlockHours/BlockHours.jsx","pages/BlockConfermation/BlockConfermation.jsx","cmps/ModalButton/ModalButton.jsx","pages/CalendarAdmin/CalendarAdmin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","treatment","treatments","duration","availableDuration","pickedTreatmentsCount","isModalOpen","step","steps","calendar","timeSlots","hoursToBlock","slotToBlock","confirmedEventId","isDayFullyAvailable","history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","saveToStorage","key","value","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","removeFromStorage","removeItem","getUsers","getUser","phone","HttpService","addUser","removeUser","updateUser","user","oldPhone","StorageService","unshiftCellByPhoneNumber","users","idx","findIndex","splicedCell","splice","isMarked","copySplicedCell","unshift","_sortUsers","sort","b","name","localeCompare","isCreateadByAdmin","isAdmin","_id","loggedInUser","userToSchedule","isAdShown","userPhoneInContactSignup","rootReducer","combineReducers","TreatmentReducer","state","action","type","filter","treatmentId","count","CalendarReducer","slotsRangeToBlock","StepperReducer","UserReducer","UserService","ModalReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","initApp","dispatch","TabsApp","withRouter","props","React","useState","setValue","location","useLocation","useEffect","pathname","style","width","boxShadow","color","AppBar","position","Tabs","onChange","event","newValue","className","Tab","label","onClick","StoreService","id","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","StepperApp","connect","activeStep","classes","Stepper","map","index","labelProps","Step","StepLabel","AppHeader","headerConstrains","setHeaderConstrains","initWithFalse","isHeader","noHeaderMargin","isStepper","isTabs","englishToHebrew","word","convertedWord","getIsosDate","getTimeSlotsForPreview","getDailySlotsForPreview","changeTimeForDisplay","idGen","Math","random","toString","substr","calculateEndTime","time","hours","slice","minutes","floor","checkDigitsAndAddZerosIfNeeded","arrayToString","pickedTreatments","treatmentsType","forEach","tr","length","convertDateToIsraelisDisplay","convertDateTo4DigitsDisplay","date","dateParts","split","getDayByHebrewWord","getEventReadyForDisplay","filteredEvents","startTime","gUtcDiff","endTime","email","convertNumberToWords","validateEmail","test","String","toLowerCase","getWeekIsosDatesForCalendar","dayByNum","weeklyDates","getDay","Date","getTime","i","isosDate","start","end","checkIfTsInRange","tsToCompare","tsToCompareWithAddedHours","timeRangeBySlots","occupied","includes","rowspan","getMonthByIdx","timeToDisplay","daysAfterOrBefore","dateCopy","setDate","getDate","toISOString","slotsRanges","timeslotsByConstraints","sr","concat","apply","timeslot","slotsToRender","year","month","day","min","nextTimeSlot","getHours","getMinutes","slotToRender","diff","digit","getTreatments","getById","remove","update","updateTreatments","updatedTreatment","getMarkedTreatmentsStr","marked","UtilsService","setTreatments","setTreatment","_setTreatment","_updateTreatmentsCount","_updateTreatments","_updateDuration","_updateAvailbleDuration","loadUsers","setUsers","updateUsers","_updateUsers","err","updateLoggedInUser","_updateLoggedInUser","updateUserToSchedule","_updateUserToSchedule","updateUserPhoneInContactSignup","_updateUserPhoneInContactSignup","direction","jss","plugins","jssPreset","rtl","SwitchApp","checked","setChecked","StylesProvider","ThemeProvider","Switch","updateDuration","updatePickedTreatments","target","inputProps","_TreatmentPreview","treatmentsToUpdate","setState","updateTreatmentsCount","TreatmentService","this","price","UtilService","Component","mapDispatchToProps","TreatmentPreview","TreatmentList","getTreatmentsToUpdate","TreatmentTitle","isCalendarAdmin","isDurationValid","class","isClicked","updateActiveStep","_updateActiveStep","NavBtns","activeBtn","setActiveBtn","isNextBtnDisable","changeStep","setAppointment","handleOpen","updateTitleProp","disabled","getMotionStyle","in","opacity","x","out","stiffness","textAlign","LoaderApp","height","timeout","loadTreatments","setUserToSchedule","_setUserToSchedule","TreatmentApp","setIsClicked","div","initial","exit","animate","variants","MotionService","transition","DailySlots","ts","onAppointmentChoice","TimeslotList","Object","keys","isDateFullyBooked","slotsForPreview","saveConfirmedEvent","getMongoEventByEventCalendarId","evId","getEventByPhone","removeEventFromDB","sendEmail","isConfirmation","businessName","bodyText","emailObj","getCalendar","getAvailbleDailySlots","addEventToCalendar","removeEventFromCalendar","getEventsFromCalendar","buildWeeklyModel","weeklyEvents","tableCellsModel","tsIdx","dailyEvents","dailyIdx","isCellInUsed","ev","eventIdx","getAvailbleDuration","table","cellPos","slotSize","durationAvalability","getHoursToBlock","timeSlot","availableSlots","pop","blockSlotRange","timeRange","eventName","creatorName","creatorEmail","eventId","endtTime","dailySlots","confirmedEvent","EventService","EmailService","time1","time2","setTimeSlots","updateHoursToBlock","_updateHoursToBlock","materialTheme","overrides","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersDay","daySelected","dayDisabled","current","loadTimeSlots","pickedDate","firstDay","secondDay","thirdDay","CalendarService","firstDaySlots","secondDaySlots","thirdDaySlots","CalendarApp","selectedDate","handleDateChange","loader","setLoader","calendarTitle","seTcalendarTitle","pickerRedTitle","setPickerRedTitle","isOpen","setIsOpen","handleChange","utils","DateFnsUtils","locale","heLocale","DatePicker","disablePast","shouldDisableDate","variant","okLabel","cancelLabel","open","onOpen","onClose","format","disableToolbar","InputProps","disableUnderline","keyboardbuttonprops","onSwiped","eventData","setTimeout","onSwipeDirection","updateIsModalOpen","_updateIsModalOpen","Transition","forwardRef","ref","Slide","Modal","handleClose","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","modalTitle","DialogTitle","DialogContent","modalContent","DialogContentText","DialogActions","Button","SubmitForm","markedTreatmetns","setMarkedTreatmetns","dateIsraeliDisplay","isCalendarAdminForm","CancelAppointment","getEventsByPhone","clickedUser","eventsToCancel","setEventsToCancel","pageCount","setPageCount","then","events","now","eventToRmove","find","cancelAppointment","SignupOrLogin","to","Login","setPhone","password","setPassword","togglePhoneValidation","setTogglePhoneValidation","phoneIsValid","setPhoneIsValid","field","userFromDb","handleClickOpen","handleModalClickOpen","setOpen","dialogTitle","setDialogTitle","close","openModal","setOpenModal","handleModalClose","TextField","autoFocus","margin","fullWidth","Signup","credentials","setCredentials","toggleNameValidation","setToggleNameValidation","toggleEmailValidation","setToggleEmailValidation","isValid","setIsValid","navToContacts","emailIsValid","checkValidation","isContactsPath","getAd","updateAd","content","toggleAdMode","isAdMoneOn","createAd","updateIsAdShown","_updateIsAdShown","HomePage","isAdModalOpen","setIsAdModalOpen","closeAdModal","setModalInClass","changeRoute","route","advertise","setAdvertise","modalInClass","AdvertiseService","ad","isAdModeOn","src","require","href","EditUser","isNameEditing","setIsNameEditing","isNameDisabled","setIsNameDisabled","nameBorderBottom","setNameBorderBottom","nameFocus","useRef","setIsPhoneEditing","setIsPhoneDisabled","setPhoneBorderBottom","setIsEmailEditing","setIsEmailDisabled","setEmailBorderBottom","focus","isPhoneEditing","isPhoneDisabled","phoneBorderBottom","phoneFocus","isEmailEditing","isEmailDisabled","emailBorderBottom","emailFocus","toggleEditing","Advertise","advertiseContent","setAdvertiseContent","setIsAdModeOn","cols","rows","AdminContacts","searchTerm","setSearchTerm","setClickedUser","appointmentsModalIsOpen","setAppointmentsModalIsOpen","placeholder","saveClickedUser","Contacts","markClickedUser","AppointmentOrBlock","updateSlotToBlock","_updateSlotToBlock","BlockHours","clickedSlotRange","slotsRange","slotRange","BlockConfermation","ModalButton","handleModalRoute","checkBtnValidation","updateAvailbleDuration","updateIsDayFullyAvailable","_updateIsDayFullyAvailable","CalendarAdmin","constrains","setWeeklyDates","tableCells","setTableCells","getMonth","setMonth","getWeeklyEvents","eventsToDisplay","setEventsToDisplay","getDailyDates","daysForDisplay","setDaysForDisplay","eventsIds","days","Promise","all","counter","cellIsRendered","evenOrOdd","range","rowSpan","openAppointmentsModal","checkIfClicked","eventToRmoveId","setEventToRmove","modalSubJect","setModalSubJect","mongoEvent","mongo","isApproved","weeklyRange","lastDay","getDatesWeeklyRange","dateToScheduale","closeAppointmentsModal","path","exact","component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ebcc265b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oo.bb4ea92a.png\";","const INITIAL_STATE = {\n    treatment: null,\n    treatments: null,\n    duration:0,\n    availableDuration:0,\n    pickedTreatmentsCount:0\n}\n\nexport function TreatmentReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n\n        case 'SET_TREATMENTS':\n            return {\n                ...state,\n                treatments: action.treatments\n            }            \n        case 'SET_TREATMENT':\n            return {\n                ...state,\n                treatment: action.treatment\n            }    \n        case 'REMOVE_TREATMENT':\n        return {\n          ...state,\n          treatments: state.treatments.filter(treatment => treatment._id !== action.treatmentId)\n        };     \n        case 'UPDATE_TREATMENTS':\n        return {\n          ...state,\n          treatments:action.treatments \n        };   \n        \n        case 'UPDATE_PICKED_TREATMENTS_COUNT' :\n        return {\n          ...state,\n          pickedTreatmentsCount: state.pickedTreatmentsCount+(action.count)\n        };              \n        case 'UPDATE_DURATION':\n        return {\n          ...state,\n          duration: state.duration+(action.duration)\n        };                 \n        case 'UPDATE_AVAILBLE_DURATION':\n        return {\n          ...state,\n          availableDuration: state.availableDuration+(action.availableDuration)\n        };                 \n        case 'INIT_DURATION':\n        return {\n          ...state,\n          duration:0,\n          availableDuration:0\n        };           \n        case 'INIT_PICKED_TREATMENTS_COUNT':\n        return {\n          ...state,\n          pickedTreatmentsCount:0\n        };           \n      \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    isModalOpen:false\n}\n\nexport function ModalReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'UPDATE_IS_MODAL_OPEN':\n            return {\n                ...state,\n                isModalOpen: action.isModalOpen\n            }\n        default:\n            return state;\n    }\n}\n","const INITIAL_STATE = {\n  step:0,\n  steps:['בחירת טיפולים ', ' בחירת תור', 'אישור']\n}\n\nexport function StepperReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'UPDATE_ACTIVE_STEP':\n            return {\n                ...state,\n                step:action.step\n            }       \n       \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    calendar: null,\n    timeSlots: null,\n    hoursToBlock:null,\n    slotToBlock:null,\n    confirmedEventId:null,\n    isDayFullyAvailable:false\n}\n\nexport function CalendarReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'SET_CALENDAR':\n            return {\n                ...state,\n                calendar: action.calendar\n            }          \n        case 'SET_TIMESLOTS':\n            return {\n                ...state,\n                timeSlots: action.timeSlots\n            }          \n        case 'UPDATE_HOURS_TO_BLOCK':\n            return {\n                ...state,\n                slotsRangeToBlock: action.slotsRangeToBlock\n            }          \n        case 'UPDATE_SLOT_TO_BLOCK':\n            return {\n                ...state,\n                slotToBlock: action.slotToBlock\n            }          \n        case 'UPDATE_IS_DAY_FULLY_AVAILABLE':\n            return {\n                ...state,\n                isDayFullyAvailable: action.isDayFullyAvailable\n            }          \n\n        default:\n            return state;\n    }\n}\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nexport default history;","import history from '../history';\nimport Axios from 'axios';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\n\nexport default {\n    get(endpoint, data){\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data){\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data){\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data){\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\n\nasync function ajax(endpoint, method='get', data=null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n          history.push('/login');\n        }\n        throw err;\n    }\n}","export default {\n    saveToStorage,\n    loadFromStorage,\n    removeFromStorage\n}\n\nfunction saveToStorage(key, value) {\n    var str = JSON.stringify(value);\n    localStorage.setItem(key, str);\n}\nfunction removeFromStorage(key) {\n    localStorage.removeItem(key);\n}\n\nfunction loadFromStorage(key) {\n    var str = localStorage.getItem(key)\n    return JSON.parse(str)\n}","import HttpService from './HttpService'\nimport StorageService from \"../services/StorageService\";\n\nexport default {\n    getUsers,\n    getUser,\n    addUser,\n    removeUser,\n    updateUser,\n    unshiftCellByPhoneNumber\n}\n\nfunction _sortUsers(users) {\n    return users.sort((a, b) => a.name.localeCompare(b.name))\n}\n\nasync function getUsers() {\n    const users = await HttpService.get('user')\n    return _sortUsers(users)\n}\n\nfunction getUser(phone) {\n    return HttpService.get(`user/${phone}`)\n}\n\nfunction updateUser(user) {\n    user.oldPhone = StorageService.loadFromStorage('tori-user').phone\n    StorageService.saveToStorage('tori-user', user)\n    return HttpService.put(`user/`, user)\n}\n\nasync function addUser(user, isCreateadByAdmin) {\n    user.isMarked = false\n    if (!isCreateadByAdmin) StorageService.saveToStorage('tori-user', user)\n    //need to come from backend env\n    if (user.phone === '123456789') user.isAdmin = true\n    else user.isAdmin = false\n    return await HttpService.post('user', user)\n}\n\nasync function removeUser(_id) {\n    StorageService.saveToStorage('tori-user', '')\n    return HttpService.delete(`user/${_id}`)\n}\n\n\nfunction unshiftCellByPhoneNumber(users, phone) {\n    const idx = users.findIndex(user => user.phone === phone)\n    let splicedCell = users.splice(idx, 1)[0]\n    splicedCell.isMarked = true\n    let copySplicedCell = { ...splicedCell }\n    users.unshift(copySplicedCell)\n    return users\n}\n","import UserService from '../services/UserService';\n\nconst INITIAL_STATE = {\n    users: [],\n    loggedInUser:null,\n    userToSchedule: null,\n    isAdShown: false,\n    userPhoneInContactSignup: ''\n}\n\nexport function UserReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                   users: (state.userPhoneInContactSignup) ? UserService.unshiftCellByPhoneNumber(action.users, state.userPhoneInContactSignup) : action.users\n            }\n        case 'UPDATE_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'UPDATE_LOGEDIN_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n        case 'SET_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_IS_AD_SHOWN':\n            return {\n                ...state,\n                isAdShown: action.isAdShown\n            }\n        case 'UPDATE_NUMBER_IN_CONTACT_SIGNUP':\n            return {\n                ...state,\n                userPhoneInContactSignup: action.userPhoneInContactSignup\n            }\n\n        default:\n            return state;\n    }\n}\n","import { TreatmentReducer } from './reducers/TreatmentReducer';\nimport { ModalReducer } from './reducers/ModalReducers';\nimport { StepperReducer } from './reducers/StepperReducer';\nimport { CalendarReducer } from './reducers/CalendarReducer';\nimport { UserReducer } from './reducers/UserReducer';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    TreatmentReducer,\n    CalendarReducer,\n    StepperReducer,\n    UserReducer,\n    ModalReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import {store} from \"../store.js\";\n\nexport default {\n    initApp\n}\n\nfunction initApp() {\n    store.dispatch({type: 'UPDATE_ACTIVE_STEP',step:0})\n    store.dispatch({type: 'SET_TREATMENT', treatment:null})\n    store.dispatch({type: 'SET_TREATMENTS', treatments:null})\n    store.dispatch({type: 'SET_TIMESLOTS',timeSlots:null})\n    store.dispatch({type: 'INIT_DURATION'})\n    store.dispatch({type: 'INIT_PICKED_TREATMENTS_COUNT'})\n}\n\n","import React, {useEffect} from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StoreService from '../../services/StoreService';\nimport './TabsApp.scss';\n\nexport function _TabsApp(props) {\n  const [value, setValue] = React.useState(0);\n  const location = useLocation()\n  useEffect(() => {(location.pathname !== '/cancelAppointment')? setValue(0): setValue(1)},[value,location]);\n\n  // tabs style\n  const style = {\n    width:'28%',\n    boxShadow:'none',\n    color:'white'\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue === 1) {\n      props.history.push('/cancelAppointment')\n    } else {\n      props.history.push('/treatments')\n    }\n  };\n\n  function navToHomePage() {\n    StoreService.initApp()\n    props.history.push('/')\n}\n\n  return (\n\n    <AppBar position=\"static\" style={{boxShadow:'none'}} >\n      <Tabs value={value} onChange={handleChange} className=\"tabs flex space-between\">\n        <Tab label=\"זימון תור\" style={style}/>\n        <Tab label=\"התורים שלי\" style={style}/>\n        <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i  className=\"fas fa-tasks\"></i></h2>\n      </Tabs>\n    </AppBar>\n  );\n}\n\nexport const TabsApp = withRouter(_TabsApp)","import React from 'react';\nimport { connect } from 'react-redux';\nimport {MuiThemeProvider,createMuiTheme,makeStyles} from \"@material-ui/core/styles\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport './StepperApp.scss'\n\n// StepperApp style\nconst theme = createMuiTheme({\n// add margin left from the circules\n  palette: {\n    primary: {\n      main: '#273650'\n    }\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  }\n}));\n\n\nexport function _StepperApp(props) {\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n\n  <MuiThemeProvider theme={theme}>\n      <Stepper activeStep={props.activeStep}>\n        {props.steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step  key={label} {...stepProps}>\n              <StepLabel  {...labelProps}>{label}  </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    steps: state.StepperReducer.steps,\n    activeStep:state.StepperReducer.step\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const StepperApp = connect(mapStateProps, mapDispatchToProps)(_StepperApp)","import React, {useState, useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { TabsApp } from '../TabsApp/TabsApp.jsx';\nimport { StepperApp } from '../StepperApp/StepperApp.jsx';\nimport StoreService from '../../services/StoreService';\nimport './AppHeader.scss';\n\n\nfunction _AppHeader(props) {\n\n    const location = useLocation()\n\n    const [headerConstrains, setHeaderConstrains] = useState(false)\n\n    useEffect(() => {\n        let initWithFalse = {isHeader:false, noHeaderMargin:false,  isStepper:false, isTabs:false}\n        switch (location.pathname) {\n            case '/':\n                setHeaderConstrains(false)\n                break;\n            case '/calendarAdmin/':\n                setHeaderConstrains(false)\n                break;\n            case '/advertise':\n                setHeaderConstrains({...initWithFalse, isHeader:true, noHeaderMargin:true}) \n                break;\n            case '/signupOrLogin':\n                setHeaderConstrains({...initWithFalse, isHeader:true, noHeaderMargin:true})\n                break;\n            case '/signup':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            case '/login':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            case '/treatments':\n                setHeaderConstrains({...initWithFalse, isStepper:true, isTabs:true})\n                break;\n            case '/calendar':\n                setHeaderConstrains(false)\n                break;\n            case '/form':\n                setHeaderConstrains({...initWithFalse, isHeader:true, isStepper:true})\n                break;\n            case '/cancelAppointment':\n                 setHeaderConstrains({...initWithFalse, isTabs:true})\n                break;\n            case '/editUser':\n                setHeaderConstrains({...initWithFalse, isHeader:true})\n                break;\n            default:\n                setHeaderConstrains(false)\n        }\n    }, [location.pathname]);\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n            {\n                (headerConstrains) &&\n                    <div className={`${(headerConstrains.noHeaderMargin)? 'app-header-no-margin':'app-header'}`}>\n                            {\n                              (headerConstrains.isHeader)?\n                                <header className=\"flex upper-header align-center\">\n                                  <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></h2>\n                                </header>\n                                :\n                                ''\n                            }\n                            {\n                               (headerConstrains.isTabs)?\n                                <TabsApp />\n                                    :\n                                ''\n                            }\n                            {\n                               (headerConstrains.isStepper)?\n                                <StepperApp />\n                                    :\n                                ''\n                            }      \n                    </div>\n            }\n        </>\n    )\n}\n\nexport const AppHeader = withRouter(_AppHeader)\n\n\n\n","\n\nexport default {\n  englishToHebrew,\n  getIsosDate,\n  getTimeSlotsForPreview,\n  getDailySlotsForPreview,\n  changeTimeForDisplay,\n  idGen,\n  calculateEndTime,\n  arrayToString,\n  convertDateToIsraelisDisplay,\n  convertDateTo4DigitsDisplay,\n  getDayByHebrewWord,\n  getEventReadyForDisplay,\n  convertNumberToWords,\n  validateEmail,\n  getWeekIsosDatesForCalendar,\n  checkIfTsInRange,\n  getMonthByIdx,\n  timeToDisplay\n}\n\nvar gUtcDiff = 2\n\n// for half an hour slots = 2. 15 min slots will be 4 etc...\nvar gDividedHour = 2 \n\nfunction englishToHebrew(word) {\n  let convertedWord\n  switch (word) {\n    case ('minutes'):\n      convertedWord = 'דק׳';\n      break;\n    case ('build'):\n      convertedWord = 'בנייה';\n      break;\n    case ('filling'):\n      convertedWord = 'מילוי';\n      break;\n    case ('medical-manicure'):\n      convertedWord = 'מניקור רפואי';\n      break;\n    case ('gel'):\n      convertedWord = 'לק ג׳ל';\n      break;\n    case ('medical-pedicure'):\n      convertedWord = 'פדיקור';\n      break;\n    case ('medical-pedicure-gel'):\n      convertedWord = 'פדיקור רפואי עם לק ג׳ל';\n      break;\n    case ('half-pedicure'):\n      convertedWord = 'חצי פדיקור';\n      break;\n    case ('half-pedicure-gel'):\n      convertedWord = 'חצי פדיקור עם ג׳ל';\n      break;\n    case ('eyebrows-mustache'):\n      convertedWord = 'גבות ושפם';\n      break;\n    default:\n      convertedWord = \"ברירת מחדל\"\n  }\n\n  return ' ' + convertedWord\n}\n//get a date and how many days before/after and returns only the date part by isos convention\nfunction getIsosDate(daysAfterOrBefore, date = new Date()) {\n  let dateCopy = new Date(date.getTime())\n  dateCopy.setDate(dateCopy.getDate() + daysAfterOrBefore)\n  if (dateCopy.getDay() === 6) {\n    return ''\n  }\n  dateCopy = dateCopy.toISOString().slice(0, 10)\n  return dateCopy\n}\n\nfunction getWeekIsosDatesForCalendar(dayByNum, date) {\n  let weeklyDates =[]\n  if (date.getDay()===6){\n    date = new Date(date.getTime() + (1000 * 60 * 60 * 24));\n    dayByNum = 1\n  }\n  switch (dayByNum) {\n    case 1:\n      for (var i = 0; i < 6; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 2:\n      for (var i = -1; i < 5; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 3:\n      for (var i = -2; i < 4; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 4:\n      for (var i = -3; i < 3; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 5:\n      for (var i = -4; i < 2; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 6:\n      for (var i = -5; i < 1; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    default:\n      console.log('Err with getting week dates')\n  }\n  return weeklyDates.map(isosDate => {\n    return { start: `${isosDate}T06:00:00Z`, end: `${isosDate}T18:00:00Z` }\n  })\n}\n\nfunction timeToDisplay (time){\n  if (time.slice(0,1)==='0') {time = time.slice(1,5)}\n  return time\n}\n\nfunction getDailySlotsForPreview(slotsRanges, duration) {\n  const timeslotsByConstraints = slotsRanges.map(sr => getTimeSlotsForPreview(sr, duration))\n  const mergedTimeSlotsToRender = [].concat.apply([], timeslotsByConstraints);\n  return mergedTimeSlotsToRender\n}\n\nfunction getTimeSlotsForPreview(timeslot, duration) {\n  let slotsToRender = [];\n  let year = timeslot.start.slice(0, 4)\n  let month = timeslot.start.slice(5, 7)\n  let day = timeslot.start.slice(8, 10)\n  let hours = +timeslot.start.slice(11, 13)\n  let min = timeslot.start.slice(14, 16)\n  const startTime = new Date(year, month - 1, day, hours +  gUtcDiff, min, 0, 0);\n  year = timeslot.end.slice(0, 4)\n  month = timeslot.end.slice(5, 7)\n  day = timeslot.end.slice(8, 10)\n  hours = +timeslot.end.slice(11, 13)\n  min = timeslot.end.slice(14, 16)\n  const endTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  let nextTimeSlot = startTime//maby need copy\n  hours = nextTimeSlot.getHours()\n  min = nextTimeSlot.getMinutes()\n  let slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n  if ((nextTimeSlot.getTime() + (duration * 60 * 1000)) <= endTime.getTime()) { slotsToRender.push(slotToRender) }\n  while ((nextTimeSlot.getTime() + (duration * 60 * 1000)) < endTime.getTime()) {\n    nextTimeSlot = new Date(nextTimeSlot.getTime() + ((60 * 60 * 1000) / gDividedHour));//adding half an hour\n    hours = nextTimeSlot.getHours()\n    min = nextTimeSlot.getMinutes()\n    slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n    slotsToRender.push(slotToRender)\n  }\n  return slotsToRender\n}\n\n//get an hour and returns full isos date (including the time) reducing the diff from the hours\nfunction changeTimeForDisplay(time, diff) {\n  let hours = +time.slice(0, 2) - diff\n  let minutes = time.slice(3, 5)\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + (minutes)\n}\n\n\nfunction calculateEndTime(time, duration) {\n  let hours = +time.slice(0, 2)\n  let minutes = time.slice(3, 5)\n\n  if (duration % 60 === 30) {\n    if (+minutes === 30) {\n      hours += Math.floor(duration / 60) + 1\n      minutes = '00'\n    }\n    else {\n      hours += Math.floor(duration / 60)\n      minutes = '30'\n    }\n  }\n  else {\n    hours += (duration / 60)\n  }\n\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + minutes\n}\n\nfunction checkDigitsAndAddZerosIfNeeded(digit) {\n  digit = (digit < 10) ? '0' + digit : digit\n  return digit\n}\n\n\nfunction idGen() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\n\nfunction arrayToString(pickedTreatments) {\n  let treatmentsType = ''\n  pickedTreatments.forEach((tr, idx) => {\n    if (pickedTreatments.length !== idx + 1) treatmentsType += tr.name + ', '\n    else treatmentsType += tr.name\n  })\n  return treatmentsType\n}\n\nfunction convertDateToIsraelisDisplay(date) {\n  const dateParts = (date).split('-')\n  return `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`\n}\n\nfunction convertDateTo4DigitsDisplay(date) {\n  const dateParts = (date).split('-')\n  if (dateParts[2].slice(0,1)==='0') {  return `${dateParts[2].slice(1,2)}.${dateParts[1]}`}\n  else {return `${dateParts[2].slice(0,2)}.${dateParts[1]}`}\n}\n\nfunction getDayByHebrewWord(idx) {\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  return days[idx]\n}\n\n\nfunction getEventReadyForDisplay(filteredEvents) {\n  return filteredEvents.map(event => {\n    return {\n      id: event._id,\n      treatments: event.treatments,\n      startTime: changeTimeForDisplay(event.startTime, gUtcDiff*-1),\n      endTime: changeTimeForDisplay(event.endTime, gUtcDiff*-1),\n      date: convertDateToIsraelisDisplay(event.date),\n      email: event.email,\n      name: event.name,\n    }\n  })\n}\n//returns an object with boolean if time slot match the range and the amount of time slots\nfunction checkIfTsInRange(tsToCompare, startTime, endTime, duration) {\n\n  //adding 3 hours to match the time differnce\n  const tsToCompareWithAddedHours = changeTimeForDisplay(tsToCompare, gUtcDiff*-1)\n  const timeRangeBySlots = getDailySlotsForPreview([{ start: startTime, end: endTime }], duration)\n  if (timeRangeBySlots.length) {\n    return { occupied: timeRangeBySlots.includes(tsToCompareWithAddedHours), rowspan: timeRangeBySlots.length }\n  }\n  else {\n    if (startTime.slice(11, 16) === tsToCompare) {\n      return { occupied: true, rowspan: 1 }\n    } else {\n      return { occupied: false, rowspan: 1 }\n    }\n  }\n}\n\nfunction convertNumberToWords(idx) {\n  const words = ['אחד', 'שני', 'שלושה', 'ארבעה', 'חמשה', 'ששה', 'שבעה', 'שמונה', 'תשעה', 'עשרה', 'אחד עשר','שתיים עשר','שלושה עשר','ארבע עשר','חמישה עשר','ששה עשר']\n  return words[idx - 1]\n}\n\nfunction getMonthByIdx(idx) {\n  const months = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\n  return months[idx - 1]\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import HttpService from './HttpService'\nimport UtilsService from \"../services/UtilsService\";\n\nexport default {\n    getTreatments,\n    getById,\n    remove,\n    update,\n    updateTreatments,\n    getMarkedTreatmentsStr\n}\n\n// update only the store not mongo DB\nfunction updateTreatments(treatments, updatedTreatment){\n    const idx = treatments.findIndex(tr => tr._id === updatedTreatment._id)\n    treatments[idx] = updatedTreatment\nreturn treatments\n}\n\nfunction getMarkedTreatmentsStr(treatments) {\n    treatments = (treatments.filter(tr => tr.marked))\n    return UtilsService.arrayToString(treatments)\n}\n\n// comunicate with backend\nfunction getTreatments() {\n    return HttpService.get('treatment')\n}\n\nfunction getById(treatmentId) {\n    return HttpService.get(`treatment/${treatmentId}`)\n}\nfunction remove(treatmentId) {\n    return HttpService.delete(`treatment/${treatmentId}`)\n}\n\nfunction update(treatment) {\n    return HttpService.put(`treatment/${treatment._id}`, treatment)\n}","import TreatmentService from '../services/TreatmentService';\n\n\nexport function loadTreatments() {\n  \n  return async dispatch => {\n    try {\n      const treatments = await TreatmentService.getTreatments();\n      dispatch(setTreatments(treatments));\n   \n    } catch (err) {\n      console.log('TreatmentActions: err in loadTreatments', err);\n    };\n  }\n}\n\nexport function setTreatments(treatments) {\n  return {\n    type: 'SET_TREATMENTS',\n    treatments\n  };\n}\n\nexport function setTreatment(treatment) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_setTreatment(treatment)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\nexport function _setTreatment(treatment) {\n  return {\n    type: 'SET_TREATMENT',\n    treatment\n  };\n}\n\n\nexport function updateTreatmentsCount(count) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_updateTreatmentsCount(count)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\n\nexport function _updateTreatmentsCount(count) {\n  return {\n    type: 'UPDATE_PICKED_TREATMENTS_COUNT',\n    count\n  };\n}\n\n\n\nexport function removeTreatment(treatmentId) {\n  return async dispatch => {\n    try {\n      await TreatmentService.remove(treatmentId);\n      dispatch(_removeTreatment(treatmentId));\n    } catch (err) {\n      console.log('TreatmentActions: err in removeTreatment', err);\n    }\n  };\n}\n\nfunction _removeTreatment(treatmentId) {\n  return {\n    type: 'REMOVE_TREATMENT',\n    treatmentId\n  };\n}\n\nexport function updateTreatments(treatments) {\n  console.log(treatments)\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateTreatments(treatments));\n    } catch (err) {\n      console.log('TreatmentActions: err in updateTreatments', err);\n    }\n  };\n}\n\nexport function _updateTreatments(treatments) {\n  return {\n    type: 'UPDATE_TREATMENTS',\n    treatments\n  };\n}\n\n\n\nexport function updateDuration(duration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateDuration(duration));\n    } catch (err) {\n      console.log('TreatmentActions: err in addDuration', err);\n    }\n  };\n}\n\nexport function _updateDuration(duration) {\n    return {\n      type: 'UPDATE_DURATION',\n      duration\n    };\n}\n\nexport function initDuration() {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_initDuration());\n    } catch (err) {\n      console.log('ERR WITH initDuration', err);\n    }\n  };\n}\n\nfunction _initDuration() {\n  return {\n    type: 'INIT_DURATION'\n  };\n}\n\n\nexport function updateAvailbleDuration(availableDuration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateAvailbleDuration(availableDuration));\n    } catch (err) {\n      console.log('ERR WITH updateAvailbleDuration', err);\n    }\n  };\n}\n\nfunction _updateAvailbleDuration(availableDuration) {\n  return {\n    type: 'UPDATE_AVAILBLE_DURATION',\n    availableDuration\n  };\n}\n","import UserService from '../services/UserService';\nimport StorageService from '../services/StorageService';\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      const users = await UserService.getUsers();\n      dispatch(setUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users\n  };\n}\n\nexport function updateUsers(users) {\n  return async dispatch => {\n    try {\n      dispatch(_updateUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function _updateUsers(users) {\n  return {\n    type: 'UPDATE_USERS',\n    users\n  };\n}\n\n\nexport function updateLoggedInUser(loggedInUser) {\n  return async dispatch => {\n    try {\n      dispatch(_updateLoggedInUser(loggedInUser));\n    } catch (err) {\n      console.log('userActions: err in updateUser', err);\n    };\n  }\n}\n\nexport function _updateLoggedInUser(loggedInUser) {\n  return {\n    type: 'UPDATE_LOGEDIN_USER',\n    loggedInUser\n  };\n}\n\n\nexport function setUserToSchedule() {\n  return dispatch => {\n    const userToSchedule = StorageService.loadFromStorage('tori-user');\n    dispatch(_setUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _setUserToSchedule(userToSchedule) {\n  return {\n    type: 'SET_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\n\nexport function updateUserToSchedule(userToSchedule) {\n  return dispatch => {\n    dispatch(_updateUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _updateUserToSchedule(userToSchedule) {\n  return {\n    type: 'UPDATE_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\nexport function updateIsAdShown(isAdShown) {\n  return dispatch => {\n    dispatch(_updateIsAdShown(isAdShown));\n  }\n}\n\nexport function _updateIsAdShown(isAdShown) {\n  return {\n    type: 'UPDATE_IS_AD_SHOWN',\n    isAdShown\n  };\n}\n\n\n\nexport function updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return dispatch => {\n    dispatch(_updateUserPhoneInContactSignup(userPhoneInContactSignup));\n  }\n}\n\nexport function _updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return {\n    type: 'UPDATE_NUMBER_IN_CONTACT_SIGNUP',\n    userPhoneInContactSignup\n  };\n}\n\n","import React, { useState } from 'react';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset,createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport './SwitchApp.scss'\n\nconst theme = createMuiTheme({\n  direction: 'rtl',\n});\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nexport function SwitchApp(props) {\n\n  const [checked, setChecked] = useState(props.marked);\n\n  const handleChange = (event) => {\n    if (!checked) {\n      props.updateDuration(true)\n      props.updatePickedTreatments(true)\n    }\n    else {\n      // props.setIsActive(false)\n      props.updateDuration(false)\n      props.updatePickedTreatments(false)\n    }\n    setChecked(event.target.checked)\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <Switch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checked\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateDuration,updateTreatments,updateTreatmentsCount} from '../../actions/treatmentActions';\nimport { SwitchApp } from '../SwitchApp/SwitchApp';\nimport UtilService from '../../services/UtilsService'\nimport TreatmentService from '../../services/TreatmentService';\nimport './TreatmentPreview.scss';\n\nclass _TreatmentPreview extends Component {\n    state = {\n        updatedTreatment: this.props.treatment,\n        treatmentsToUpdate: this.props.treatments\n    }\n\n    updateDuration = (isMarked) => {\n        if (isMarked) {\n            this.props.updateDuration(+this.props.treatment.duration)\n        } else {\n            this.props.updateDuration((+this.props.treatment.duration) * -1)\n        }\n    }\n\n    // mark the treatment\n   updatePickedTreatments = (isMarked) => {\n            this.setState({updatedTreatment:{...this.state.updatedTreatment,marked:isMarked}}, ()=>{\n                if(isMarked){\n                    this.props.updateTreatmentsCount(1)\n                }\n                else{\n                  this.props.updateTreatmentsCount(-1)\n                }\n            const treatments = TreatmentService.updateTreatments(this.state.treatmentsToUpdate,this.state.updatedTreatment)\n            this.setState({treatmentsToUpdate:treatments})\n        })\n    }\n\n    render() {\n        const {updatedTreatment} = this.state\n        return (\n            <div className={`treatment-preview ${(updatedTreatment.marked)?'marked-by-switch':\"\"}`}>\n                {updatedTreatment &&\n                    <div className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {updatedTreatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + updatedTreatment.price}</div>\n                        <div className=\"align-col\">{updatedTreatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                        <SwitchApp className=\"align-col\" marked={updatedTreatment.marked} updateDuration={this.updateDuration} updatePickedTreatments={this.updatePickedTreatments} />\n                    </div>\n                }\n            </div>\n        )\n      }\n}\n    \nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    updateDuration,\n    updateTreatments,\n    updateTreatmentsCount\n}\n\nexport const TreatmentPreview = connect(mapStateProps, mapDispatchToProps)(_TreatmentPreview)","import React from 'react';\nimport { TreatmentPreview } from '../TreatmentPreview/TreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentList.scss';\n\nexport function TreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <TreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation,withRouter } from 'react-router-dom';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentTitle.scss';\n\n\nfunction _TreatmentTitle(props) {\n    const location = useLocation()\n    let isCalendarAdmin=( location.pathname === '/calendarAdmin/treatments')\n    let isDurationValid=(props.duration>props.availableDuration)\n    return (\n        <div className={`treatment-title ${isCalendarAdmin?'treatment-title-in-modal':''} \n         ${isCalendarAdmin&&isDurationValid?'pink-title-treatments-modal':''}`}>\n                {\n                    isCalendarAdmin?\n                    <div className=\"back-arrow\" onClick={()=> props.history.push('/calendarAdmin/contacts')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    :\n                    ''\n                }\n            {\n                <div className=\"treatment-title-text\">{\n               (isDurationValid&&isCalendarAdmin) ?\n                  'משך זמן הטיפולים ארוך מידי ! '\n                :\n                (props.pickedTreatmentsCount) ?\n\n                (props.pickedTreatmentsCount===1)?\n                `נבחר טיפול  ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)}     `\n                :\n                   `נבחרו ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)} טיפולים `\n\n                    :\n                    (props.isClicked)?\n                     <span className=\"red-title\">לא נבחרו טיפולים!</span>\n                    :\n                    isCalendarAdmin\n                    ?\n                    \"בחרו סוג טיפול אחד או יותר\"\n                    : \n                    \"  בחרו  סוג  טיפול  אחד  או  יותר  ולחצו  'הבא'\"\n                    }\n                </div>\n                }\n                 { isCalendarAdmin?<div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>:''}\n        </div>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentTitle = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentTitle))","\n\nexport function updateActiveStep(step) {\n    return async dispatch => {\n      try {\n        await \n        dispatch(_updateActiveStep(step));\n      } catch (err) {\n        console.log('StepperActions: err in updateActiveStep', err);\n      }\n    };\n  }\n  \n  export function _updateActiveStep(step) {\n      return {\n        type: 'UPDATE_ACTIVE_STEP',\n        step\n        }\n  };\n\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport './NavBtns.scss';\nfunction _NavBtns(props) {\n\n    const location = useLocation()\n    const [activeBtn, setActiveBtn] = useState('');\n\n    useEffect(() => { toggleBtnsStyle() });\n\n    function toggleBtnsStyle() {\n        if ((props.activeStep === 2 && !props.treatment) || (props.duration)) {\n            setActiveBtn('active-btn')\n        } else { setActiveBtn('') }\n    }\n\n    function isNextBtnDisable() {\n        if (!props.duration) return true\n        if (props.activeStep === 2 && !props.treatment) return true\n    }\n\n    function changeStep(diff) {\n\n        if (props.activeStep + diff === 3) {\n            props.setAppointment()\n            props.handleOpen()\n        }\n        props.updateActiveStep(props.activeStep + diff)\n        if (!props.activeStep && diff > 0) {\n            props.history.push('/calendar')\n        }\n        else if (props.activeStep === 1 && diff > 0) props.history.push('/form')\n        else if (props.activeStep === 2 && diff < 0) props.history.push('/calendar')\n        else if (props.activeStep === 1 && diff < 0) props.history.push('/treatments')\n    }\n\n    function noPickedItemTitle(){\n        if (!props.duration){\n            props.updateTitleProp()\n        }\n    }\n\n    return (\n\n        <div className={`nav-btns-container`}>\n            {\n                (location.pathname === '/treatments') ?\n                    <div className=\"nav-btn-wrapper-next\" onClick={noPickedItemTitle}>\n                            <button className=\"nav-btn-next\" onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                הבא\n                             </button>\n                    </div>\n                    :\n                    (location.pathname !== '/form') ?\n                        <div className=\"nav-btn-wrapper\">\n                            <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                חזור\n                </button>\n                        </div>\n                        :\n                        <div className=\"flex btns-wrraper\">\n                            <div className=\"nav-btn-wrapper\">\n                                <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                    חזור\n                    </button>\n                            </div>\n                            <div className={`nav-btn-wrapper`}>\n                                <button className={`nav-btn ${activeBtn}`} onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                    אשר\n                </button>\n                            </div>\n                        </div>\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        steps: state.StepperReducer.steps,\n        activeStep: state.StepperReducer.step,\n        duration: state.TreatmentReducer.duration,\n        treatment: state.TreatmentReducer.treatment,\n\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep\n}\n\nexport const NavBtns = withRouter(connect(mapStateProps, mapDispatchToProps)(_NavBtns))\n","export default {\n    getMotionStyle\n}\n\n// textAlign: 'center'\n\nfunction getMotionStyle(style) {\n    // style motion div\n    const pageVariants = {\n        in: {\n            opacity: 1,\n            x: \"0\"\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n    const pageVariantsWithTextAlign = {\n        in: {\n            opacity: 1,\n            x: \"0\",\n            textAlign: 'center'\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n\n    const pageTransition = {\n        duration: 0.5,\n        type: \"spring\",\n        stiffness: 50\n    }\n    if (style === 'pageVariants') return pageVariants\n    else if(style === 'pageTransition') return pageTransition\n    else return pageVariantsWithTextAlign\n}","import React from 'react';\nimport Loader from 'react-loader-spinner'\nexport class LoaderApp extends React.Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Oval\"\n        color=\"#273650\"\n        height={75}\n        width={75}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { setUserToSchedule, updateUserToSchedule } from '../../actions/userAction.js';\nimport { TreatmentList } from '../../cmps/TreatmentList/TreatmentList';\nimport { TreatmentTitle } from '../../cmps/TreatmentTitle/TreatmentTitle';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './TreatmentApp.scss';\nimport '../../styles/style.scss';\n\nexport function _TreatmentApp(props) {\n    const location = useLocation()\n    const { loadTreatments, treatments, setUserToSchedule, userToSchedule } = props\n    useEffect(() => {\n        if (!treatments) loadTreatments()\n    }, [loadTreatments, treatments]);\n\n    useEffect(() => {\n        (async () => {\n        if (!userToSchedule && !props.loggedInUser.isAdmin) setUserToSchedule()\n    })()\n    }, [setUserToSchedule, userToSchedule]);\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    function updateTitleProp() {\n        setIsClicked(true)\n    }\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n            {\n                (location.pathname !== '/calendarAdmin/treatments')\n                    ?\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </motion.div>\n                    :\n                    <div>\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </div>\n            }\n            {\n                (location.pathname !== '/calendarAdmin/treatments') &&\n                <NavBtns updateTitleProp={updateTitleProp} />\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        userToSchedule: state.UserReducer.userToSchedule,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments,\n    setUserToSchedule,\n    updateUserToSchedule\n}\n\nexport const TreatmentApp = connect(mapStateProps, mapDispatchToProps)(_TreatmentApp)\n\n\n\n","import './DailySlots.scss';\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {setTreatment} from '../../actions/treatmentActions';\nimport {updateActiveStep} from '../../actions/stepperActions';\nimport UtilsService from '../../services/UtilsService';\n\n function _DailySlots(props) {\n\n    function onAppointmentChoice(ts, date, diff) {\n        props.updateActiveStep(props.activeStep + diff)\n        let treatment = {\n            time: ts,\n            date\n        }\n        props.setTreatment(treatment)\n        props.history.push('/form')\n    }\n\n    return (\n        <div id='idForScrollBar' className=\"daily-slots flex column align-center space-between\">\n            {props.timeSlots.map(ts => <button onClick={() => onAppointmentChoice(ts, props.date, 1)}\n            className=\"timeslot-btn\" key={UtilsService.idGen()}>{UtilsService.timeToDisplay(ts)}</button>)}\n        </div>\n    )\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment,\n        activeStep: state.StepperReducer.step\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment,\n    updateActiveStep\n}\n\nexport const DailySlots = withRouter(connect(mapStateProps, mapDispatchToProps)(_DailySlots))\n","import React, {useEffect} from \"react\";\nimport { DailySlots } from '../DailySlots/DailySlots';\nimport UtilsService from '../../services/UtilsService';\nimport './TimeslotList.scss';\n\nexport function TimeslotList(props) {\n\n    useEffect(() => {\n        }, []);\n\n    return (\n        <div className=\"timeslot-list flex\">\n            {\n                Object.keys(props.timeSlots).map(day => {\n                    const isDateFullyBooked = (typeof props.timeSlots[day] == 'string') ? true : false\n                    const date = isDateFullyBooked ? props.timeSlots[day].slice(0, 10) : (props.timeSlots[day])[0].start.slice(0, 10)\n                    // running on each day\n                    const slotsForPreview = isDateFullyBooked ? [] : UtilsService.getDailySlotsForPreview(props.timeSlots[day], props.duration)\n                    return (\n                        <div key={UtilsService.idGen()}>\n                            <div className=\"date-container\">\n                                {\n                                isDateFullyBooked?     \n                                <div className=\"fully-booked\">\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                    <br/>\n                                    <div className=\"fully-booked-title\">אין תור פנוי</div>\n                                </div>\n                                :\n                                <div>\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                </div>\n                                }\n                            </div>\n                            <DailySlots timeSlots={slotsForPreview} date={date} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import HttpService from './HttpService'\n\nexport default {\n    saveConfirmedEvent,\n    getMongoEventByEventCalendarId,\n    getEventByPhone,\n    removeEventFromDB\n}\n\n// MONGO DB - GOES THREW BACKEND\n\nfunction saveConfirmedEvent(event){\n    return HttpService.post('event',event)\n}\n\nfunction getEventByPhone (phone) {\n    return HttpService.get(`event/${phone}`)\n}\n\n\nfunction getMongoEventByEventCalendarId(evId) {\n    return HttpService.get(`event/${evId}`)\n}\n\nfunction removeEventFromDB (_id) {\n    return HttpService.delete(`event/${_id}`)\n}","import HttpService from './HttpService'\n\nexport default {\n    sendEmail\n}\n\nfunction sendEmail(name, date, email='', isConfirmation, phone='', duration='', time='', treatments='') {\n    const businessName='נייל סלון'\n    let bodyText = ''\n    if (isConfirmation) {\n        bodyText =`        שלום ${name} ,\n\n        שמחים שבחרת ${businessName} !\n        נקבע לך תור ל${treatments}  \n        בתאריך ${date}\n        בשעה ${time}\n        משך זמן הטיפול מוערך כ- ${duration} דקות\n        הטלפון שהתקבל ליצירת קשר הוא - ${phone}\n        \n        תודה`\n    } else {\n        bodyText = `\n        שלום,\n         ${name}\n        התור שנקבע לתאריך ${date} בוטל \n        תודה על העדכון `\n    }\n    let emailObj = {\n        email,\n        bodyText\n    }\n    return HttpService.post('email',emailObj)\n}","import HttpService from './HttpService'\nimport EventService from './EventService'\nimport UtilsService from \"../services/UtilsService\";\nimport EmailService from '../services/EmailService';\n\nexport default {\n    getCalendar,\n    getAvailbleDailySlots,\n    addEventToCalendar,\n    removeEventFromCalendar,\n    setAppointment,\n    getEventsFromCalendar,\n    buildWeeklyModel,\n    getAvailbleDuration,\n    getHoursToBlock,\n    blockSlotRange\n}\n\nvar gUtcDiff = 2\n\n// get the first calendar connected to this TOKEN (usually only 1 should be there)\nfunction getCalendar() {\n    return HttpService.get('calendar')\n}\n\n\nasync function getEventsFromCalendar(timeRange) {\n    return await HttpService.get(`calendar/${timeRange.start}/${timeRange.end}`)\n}\n\nfunction addEventToCalendar(startTime, endTime, eventName, creatorName = 'block', creatorEmail) {\n    const event = { eventName, creatorName, creatorEmail, startTime, endTime }\n    return HttpService.post('calendar', event)\n}\n\nasync function removeEventFromCalendar(eventId) {\n    return HttpService.delete('calendar', { eventId })\n}\n\nasync function getAvailbleDailySlots(startTime, endtTime, duration) {\n    const dailySlots = { startTime, endtTime, duration }\n    return await HttpService.post('calendar/slots', dailySlots)\n}\n\n// MAKING SOME CALCULATIONS AND THAN CALLING OTHER FUNCTIONS TO ADD THE EVENT TO CALENDAR + MONGO DB\nasync function setAppointment(treatments, duration, phone, email, name, treatment) {\n    console.log(treatments, duration, phone, email, name, treatment)\n    let time = UtilsService.changeTimeForDisplay(treatment.time, gUtcDiff)\n    const startTime = `${treatment.date}T${time}:00Z`\n    time = UtilsService.calculateEndTime(time, duration)\n    const endTime = `${treatment.date}T${time}:00Z`\n    const confirmedEvent = await addEventToCalendar(startTime, endTime, treatments, name, 'ayal@gmail.com')\n    const event = {\n        name,\n        email,\n        phone,\n        eventId: confirmedEvent.id,\n        treatments,\n        duration,\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n    EmailService.sendEmail(name, treatment.date, email, true, phone, duration, treatment.time, treatments)\n}\n\nasync function blockSlotRange(slotToBlock, name = 'block') {\n    let time1 = UtilsService.changeTimeForDisplay(slotToBlock.start, gUtcDiff)\n    let time2 = UtilsService.changeTimeForDisplay(slotToBlock.end, gUtcDiff)\n    const startTime = `${slotToBlock.date}T${time1}:00Z`\n    const endTime = `${slotToBlock.date}T${time2}:00Z`\n    const confirmedEvent = await addEventToCalendar(startTime, endTime, name)\n    const event = {\n        name,\n        email: '',\n        phone: '',\n        eventId: confirmedEvent.id,\n        treatments: '',\n        duration: '',\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n}\n\n\n/////////////////////calendarAdmin:\n\nfunction buildWeeklyModel(timeSlots, weeklyEvents) {\n    let tableCellsModel = []\n    for (var i = 0; i < timeSlots.length; i++) {\n        tableCellsModel.push([])\n    }\n    timeSlots.map((ts, tsIdx) => {\n        weeklyEvents.map((dailyEvents, dailyIdx) => {\n            if (dailyEvents.length) {\n                let isCellInUsed = false\n                return dailyEvents.map((ev, eventIdx) => {\n                    const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                    if (range.occupied) {\n                        isCellInUsed = true\n                        tableCellsModel[dailyIdx, tsIdx].push(false)\n                    }\n                    else if ((dailyEvents.length === eventIdx + 1) && (!isCellInUsed)) {\n                        tableCellsModel[dailyIdx, tsIdx].push(true)\n                    }\n                })\n            } else {\n                tableCellsModel[dailyIdx, tsIdx].push(true)\n            }\n        })\n    })\n    return tableCellsModel\n}\n\nfunction getAvailbleDuration(table, cellPos, slotSize = 30) {\n    let durationAvalability = 0\n    let i = cellPos.tsIdx\n    while (table[i][cellPos.dailyIdx] && i < table.length - 1) {\n        durationAvalability += slotSize\n        i++\n    }\n    if (!durationAvalability) return slotSize\n    return durationAvalability\n}\n\nfunction getHoursToBlock(timeSlots, ts, availableDuration, date, isDayFullyAvailable, slotSize = 30) {\n    let hoursToBlock = []\n    const tsIdx = timeSlots.findIndex(timeSlot => timeSlot === ts)\n    const availableSlots = availableDuration / slotSize\n    for (let i = tsIdx; i < (tsIdx + availableSlots); i++) {\n        hoursToBlock.push(\n            {\n                date,\n                start: ts,\n                end: timeSlots[i + 1],\n                isMarked: false\n            }\n        )\n    }\n    if (isDayFullyAvailable) {\n        hoursToBlock.unshift(\n            {\n                date,\n                start: timeSlots[0],\n                end: timeSlots[timeSlots.length-1],\n                isMarked: false\n            }\n        )\n      if(ts===timeSlots[0])  hoursToBlock.pop()\n    }\n    return hoursToBlock\n}\n\n","import CalendarService from '../services/CalendarService';\nimport UtilsService from '../services/UtilsService';\n\n// THUNK\nexport function loadCalendar() {\n  \n  return async dispatch => {\n    try {\n      const calendar = await CalendarService.getCalendar();\n      dispatch(setCalendar(calendar));\n    } catch (err) {\n      console.log('calendarActions: err in loadCalendars', err);\n  };\n}\n}\n\nexport function setCalendar(calendar) {\n    return {\n      type: 'SET_CALENDAR',\n      calendar\n     };\n}\n\n\nexport function loadTimeSlots(pickedDate = null){\n  let date\n      if (!pickedDate) {\n        date = new Date()\n        var firstDay = UtilsService.getIsosDate (0)\n        var secondDay = UtilsService.getIsosDate (1)\n        var thirdDay = UtilsService.getIsosDate (2)\n      } else {\n      // get day after and day before\n      // firstDay = UtilsService.getIsosDate (-1, pickedDate)\n      // secondDay = UtilsService.getIsosDate (0,  pickedDate)\n      // thirdDay = UtilsService.getIsosDate (1, pickedDate )\n      date = pickedDate\n        firstDay = UtilsService.getIsosDate (0, pickedDate)\n        secondDay = UtilsService.getIsosDate (1, pickedDate)\n        thirdDay = UtilsService.getIsosDate (2, pickedDate )\n      } \n      // check for saturday (unwroking day), if it was, sending the correction to skip that day\n        if (!firstDay) {\n          firstDay = UtilsService.getIsosDate (1, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!secondDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!thirdDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (1, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n         }     \n  return async dispatch => {\n    try {\n      const timeSlots = {\n        // 30M means the min block time range later to scheduale a meeting\n      firstDaySlots: await CalendarService.getAvailbleDailySlots(`${firstDay}T06:00:00`, `${firstDay}T18:00:00`, '1H'),\n      secondDaySlots: await CalendarService.getAvailbleDailySlots(`${secondDay}T06:00:00`, `${secondDay}T18:00:00`, '1H'),\n      thirdDaySlots : await CalendarService.getAvailbleDailySlots(`${thirdDay}T06:00:00`, `${thirdDay}T18:00:00`, '1H')\n      }\n      dispatch(setTimeSlots(timeSlots));\n    } catch (err) {\n      console.log('Err getting timeslots', err);\n    }\n  }\n}\n\nexport function setTimeSlots(timeSlots) {\n  return {\n    type: 'SET_TIMESLOTS',\n    timeSlots\n   };\n}\n\n\n\nexport function updateHoursToBlock(slotsRangeToBlock) {\n   return  dispatch => { dispatch(_updateHoursToBlock(slotsRangeToBlock))}\n}\n\n\n\nexport function _updateHoursToBlock(slotsRangeToBlock) {\n    return {\n      type: 'UPDATE_HOURS_TO_BLOCK',\n      slotsRangeToBlock\n     };\n}\n\n\nexport function updateSlotToBlock(slotToBlock) {\n   return  dispatch => { dispatch(_updateSlotToBlock(slotToBlock))}\n}\n\n\n\nexport function _updateSlotToBlock(slotToBlock) {\n    return {\n      type: 'UPDATE_SLOT_TO_BLOCK',\n      slotToBlock\n     };\n}\n\n\nexport function updateIsDayFullyAvailable(isDayFullyAvailable) {\n   return  dispatch => { dispatch(_updateIsDayFullyAvailable(isDayFullyAvailable))}\n}\n\n\n\nexport function _updateIsDayFullyAvailable(isDayFullyAvailable) {\n    return {\n      type: 'UPDATE_IS_DAY_FULLY_AVAILABLE',\n      isDayFullyAvailable\n     };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport { TimeslotList } from '../../cmps/TimeslotList/TimeslotList';\nimport { loadTimeSlots } from '../../actions/calendarActions.js';\nimport UtilsService from '../../services/UtilsService';\nimport { Swipeable } from 'react-swipeable'\nimport StoreService from '../../services/StoreService';\nimport { StepperApp } from '../../cmps/StepperApp/StepperApp.jsx';\nimport './CalendarApp.scss';\n\n\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\nexport function _CalendarApp(props) {\n\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [loader, setLoader] = useState(false);\n    const [calendarTitle, seTcalendarTitle] = useState('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n    const [pickerRedTitle, setPickerRedTitle] = useState('date-picker-title');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { loadTimeSlots } = props\n    useEffect(() => {\n        loadTimeSlots()\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }, [loadTimeSlots]);\n\n\n    async function handleChange(date) {\n        setLoader(true)\n        handleDateChange(date)\n        await props.loadTimeSlots(date)\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }\n\n    function disableDay(date) {\n        return  (date.getDay() === 6);\n    }\n\n\n    function onSwipeDirection(direction) {\n        if(props.timeSlots&&!loader){\n            const dateCopy = (new Date(selectedDate.setDate(selectedDate.getDate())))\n        //need to change to normal way\n        if ((direction === 'Left')&& (selectedDate.getTime()) > (new Date().getTime())) {\n              // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() - 1 === -1) || (dateCopy.getDay() - 2 === -1) || (dateCopy.getDay() - 3 === -1)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 3)));\n            }\n        }\n        else if (direction === 'Right') {\n            // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() + 1 === 6) || (dateCopy.getDay() + 2 === 6) || (dateCopy.getDay() + 3 === 6)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 3)));\n            }\n        }\n        else {\n            if ((direction !== 'Up') && (direction !== 'Down')) {\n                seTcalendarTitle('לא ניתן לבחור תאריך שעבר')\n                setPickerRedTitle('picker-red-title')\n                setTimeout(() => {\n                    seTcalendarTitle('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n                    setPickerRedTitle('date-picker-title')\n                }, 3000);\n            }\n        }\n    }\n    }\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n                <div className=\"header-calendar-app flex justifiy-center align-center space-between\" >\n                    <div className=\"weekly-dates-container weekly-dates-container-calendar-app flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                        <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                        <div className=\"dates-range-text\">{UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(0,selectedDate))}<br />\n                        {\n                            // check for saturday case\n                             ((UtilsService.getIsosDate(2,selectedDate)) !== '')?\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(2,selectedDate))\n                             :\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(3,selectedDate))\n                        }\n                        </div>\n                    </div>\n                    <div id=\"text2\" onClick={navToHomePage} >Tori<i className=\"fas fa-tasks\"></i></div>\n                </div>\n                <StepperApp className=\"calendar-app-stepper\"/>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\" }}\n            >\n                <div className=\"calendar-picker-container\">\n                    <div className={`${pickerRedTitle}`}>\n                        {calendarTitle}\n                    </div> \n                    </div>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                    <ThemeProvider theme={materialTheme}>\n                        <DatePicker\n                            disablePast={true}\n                            shouldDisableDate={disableDay}\n                            variant=\"dialog\"\n                            okLabel=\"אישור\"\n                            cancelLabel=\"ביטול\"\n                            open={isOpen}\n                            onOpen={() => setIsOpen(true)}\n                            onClose={() => setIsOpen(false)}\n                            format=\"MM/dd/yyyy\"\n                            id=\"date-picker-inline\"\n                            disableToolbar\n                            value={selectedDate}\n                            onChange={handleChange}\n                            InputProps={{\n                                disableUnderline: true,\n                                style: { width: '0' }\n                            }}\n                            keyboardbuttonprops={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </ThemeProvider>\n                </MuiPickersUtilsProvider>\n\n        \n                <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                    <div className=\"time-slot-lists-container\">\n                        {(props.timeSlots && !loader) ? <TimeslotList date={selectedDate} timeSlots={props.timeSlots} duration={props.duration} />\n                            : <div className=\"loaderContainer flex  justify-center\"><LoaderApp /></div>}\n                    </div>\n                </Swipeable>\n            </motion.div>\n            <NavBtns />\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        timeSlots: state.CalendarReducer.timeSlots,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTimeSlots\n}\n\nexport const CalendarApp = connect(mapStateProps, mapDispatchToProps)(_CalendarApp)\n","export function updateIsModalOpen(isModalOpen) {\n    return async dispatch => {\n      try {\n        dispatch(_updateIsModalOpen(isModalOpen));\n      } catch (err) {\n        console.log('modalAction: err in updateIsModalOpen', err);\n      };\n    }\n  }\n  \n  export function _updateIsModalOpen(isModalOpen) {\n    return {\n      type: 'UPDATE_IS_MODAL_OPEN',\n      isModalOpen\n    };\n  }","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport StoreService from '../../services/StoreService';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport './Modal.scss';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function _Modal(props) {\n    const location = useLocation()\n\n    const handleClose = () => {\n        props.updateIsModalOpen(false)\n        if(location.pathname === '/form'||location.pathname === '/cancelAppointment') StoreService.initApp()\n        if(location.pathname === '/form')  props.history.push('/treatments')\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={props.isModalOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n          >\n                {props.modalTitle && <DialogTitle id=\"alert-dialog-slide-title\">{props.modalTitle}</DialogTitle>}\n                <DialogContent\n                    style={{width:'300px', textAlign:'center'}}\n                >\n                    {props.modalContent && <DialogContentText id=\"alert-dialog-slide-description\">\n                        {props.modalContent}\n                    </DialogContentText>}\n                </DialogContent>\n                <DialogActions>\n                    {/* <Button onClick={handleClose} color=\"primary\">\n                        ביטול\n              </Button> */}\n                    <Button onClick={handleClose} color=\"primary\">\n                        אישור\n             </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        isModalOpen: state.ModalReducer.isModalOpen\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Modal = withRouter(connect(mapStateProps, mapDispatchToProps)(_Modal))\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport StoreService from '../../services/StoreService';\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport TreatmentService from \"../../services/TreatmentService\";\nimport './SubmitForm.scss';\n\n\n\nexport function _SubmitForm(props) {\n    const location = useLocation()\n    const [markedTreatmetns, setMarkedTreatmetns] = React.useState('');\n    const dateIsraeliDisplay = UtilsService.convertDateToIsraelisDisplay(props.treatment.date)\n    const endTime = UtilsService.calculateEndTime(props.treatment.time, props.duration)\n    const { name, phone, email } = props.userToSchedule\n    useEffect(() => {\n        setMarkedTreatmetns(TreatmentService.getMarkedTreatmentsStr(props.treatments))\n    }, [props.treatments])\n\n    const handleOpen = () => {\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    };\n\n    function init() {\n        StoreService.initApp()\n        props.history.push('/treatments')\n    }\n\n    async function setAppointment() {\n        await CalendarService.setAppointment(markedTreatmetns, props.duration, phone, email, name, props.treatment)\n    }\n\n    let isCalendarAdminForm = (location.pathname === '/calendarAdmin/form')\n\n    return (\n        <div className=\"submit-form flex column  align-center\">\n          {!isCalendarAdminForm&&  <button className=\"reset-btn\" onClick={init}> איפוס <i className=\"fas fa-redo-alt\"></i></button>}\n            <div className={`user-details ${isCalendarAdminForm ?'user-details-in-modal':''}`}>\n                <div>שם : {name}</div>\n                <div>טלפון : {phone}</div>\n                <div>אימייל : {email}</div>\n            </div>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isCalendarAdminForm)? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isCalendarAdminForm)? MotionService.getMotionStyle('pageTransition') : ''}\n                style={{ textAlign: 'center', width: '100%' }}\n            >\n                <div className=\"appointment-details\">\n                    <div className=\"table-cell\">סוג הטיפול : {TreatmentService.getMarkedTreatmentsStr(props.treatments)}</div>\n                    <div className=\"table-cell\">תאריך : {UtilsService.convertDateToIsraelisDisplay(props.treatment.date)}</div>\n                    <div className=\"last-cell\">בין השעות : {UtilsService.calculateEndTime(props.treatment.time, props.duration)} - {props.treatment.time}</div>\n                </div>\n                <Modal modalContent={<div>\n                    <h2>התור נקבע בהצלחה</h2>\n                    <div className=\"form-modal-content flex column space-aruond\">\n                        <div className=\"margin-bottom-5\"> נקבע לך תור ל{markedTreatmetns}  </div>\n                        <div className=\"margin-bottom-5\"> בתאריך: {dateIsraeliDisplay}</div>\n                        <div> בין השעות: {endTime} - {props.treatment.time}</div>\n                    </div>\n                </div>}\n                />\n            </motion.div>\n            {!isCalendarAdminForm && <NavBtns handleOpen={handleOpen} setAppointment={setAppointment} />}\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        duration: state.TreatmentReducer.duration,\n        userToSchedule: state.UserReducer.userToSchedule,\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const SubmitForm = withRouter(connect(mapStateProps, mapDispatchToProps)(_SubmitForm))\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {updateIsModalOpen} from '../../actions/modalAction.js';\nimport {Modal} from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport EmailService from '../../services/EmailService';\nimport StorageService from \"../../services/StorageService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './CancelAppointment.scss';\n\nexport function _CancelAppointment(props) {\n    useEffect(() => {\n        getEventsByPhone()\n    }, []);\n\n    const [loader, setLoader] = React.useState(<LoaderApp />);\n    setTimeout(() => {\n        setLoader('')\n    }, 2000);\n\n    const [phone, setPhone] = React.useState((props.clickedUser)? props.clickedUser.phone:StorageService.loadFromStorage('tori-user').phone);\n\n    const [eventsToCancel, setEventsToCancel] = useState(null)\n\n    const [pageCount, setPageCount] = useState(0)\n\n    function getEventsByPhone() {\n        EventService.getEventByPhone(phone)\n            .then(events => {\n                if (!events[0]) return\n                const filteredEvents = events.filter(event => {\n                    let year = event.date.slice(0, 4)\n                    let month = event.date.slice(5, 7)\n                    let day = event.date.slice(8, 10)\n                    let hours = +event.startTime.slice(0, 2) + 3\n                    const date = new Date(year, month - 1, day, hours, 0).getTime()\n                    return (date > Date.now())\n                })\n                if (filteredEvents.length) {\n                    setEventsToCancel(UtilsService.getEventReadyForDisplay(filteredEvents))\n                } else {\n                    setEventsToCancel(null)\n                }\n            })\n    }\n\n    async function cancelAppointment(eventId) {\n        const events = await EventService.getEventByPhone(phone)\n        let eventToRmove = events.find(event => event._id === eventId)\n        // delete from Calendar\n        CalendarService.removeEventFromCalendar(eventToRmove.eventId)\n        if (pageCount) {setPageCount(pageCount-1)}\n        EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n        // delete from mongo data base\n        await EventService.removeEventFromDB(eventToRmove._id)\n        getEventsByPhone() \n        //open modal useing store\n        props.updateIsModalOpen(true)\n    }\n\n    return (\n        <div className=\"cancel-appointment flex column align-center space-between \">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n            >\n                {\n                    (loader) ?\n                        <div className=\"cancel-apointment-loader\">{loader}</div>\n                        :\n                        <main >\n                            <div className=\"table-wrapper\">\n                                {(eventsToCancel) ?\n                                    <div className={`cancel-table-container ${(props.clickedUser)?'table-container-in-contacts-modal':''}`}>\n                                        <div className=\"apointment-details\">\n                                            <div className=\"table-cell\"> <span>סוג הטיפול</span> : {eventsToCancel[pageCount].treatments}</div>\n                                            <div className=\"table-cell\"> בתאריך : {eventsToCancel[pageCount].date}</div>\n                                            <div className=\"last-cell\"> בין השעות : {`${eventsToCancel[pageCount].endTime} - ${eventsToCancel[pageCount].startTime}`}</div>\n                                        </div>\n                                        {(eventsToCancel.length > 1) &&\n                                            <div className=\"arrows-container flex space-between\">\n                                                {(eventsToCancel[pageCount - 1]) ? <i onClick={() => setPageCount(pageCount - 1)} className=\"arrow fas fa-angle-right\"></i>\n                                                    : <i className=\"arrow-disabled fas fa-angle-right\"></i>\n                                                }\n                                                {eventsToCancel[pageCount + 1] ? <i onClick={() => setPageCount(pageCount + 1)} className=\"arrow fas fa-angle-left\"></i>\n                                                    : <i className=\"arrow-disabled fas fa-angle-left\"></i>\n                                                }\n                                            </div>\n                                        }\n                                        <button onClick={() => cancelAppointment(eventsToCancel[pageCount].id)} className={`${(props.clickedUser)?'contacts-modal-btn':''} trash-btn`} > בטל תור <i className=\"fas fa-trash\" ></i></button>\n                                    </div>\n                                    :\n                                    <div className=\"no-apointments\">\n                                        לא נמצאו תורים\n                                    </div>\n                                }\n                            </div>\n                            <Modal modalContent={'התור בוטל'} />\n                        </main>\n                }\n            </motion.div>\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const CancelAppointment = withRouter(connect(mapStateProps, mapDispatchToProps)(_CancelAppointment))\n\n\n","import React from \"react\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './SignupOrLogin.scss';\nimport { Link } from 'react-router-dom'\n\nexport function SignupOrLogin(props) {\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n        >\n            <main className=\"signup-or-login-container flex align-center justify-center column\">\n                <div className=\"square top-square\">\n                    <Link className=\"signUp-link flex align-center justify-center \" to=\"/signup\">\n                       <div>הרשמ/י</div> \n            </Link>\n                </div>\n                <div className=\"square bottom-square\">\n                    <Link className=\"login-link flex align-center justify-center\" to=\"/login\">\n                       <div>התחבר/י</div> \n            </Link>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UserService from \"../../services/UserService\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport './Login.scss';\n\n\nconst ownerPassword = '1234'\n\n  function _Login(props) {\n    const [phone, setPhone] = React.useState('')\n    const [password, setPassword] = useState('');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [phoneIsValid, setPhoneIsValid] = useState(false);\n\n    useEffect(() => {\n        checkValidation()\n    }, [phone])\n\n    // hide text validation if text is valid\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'phone':\n                setPhone(value)\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        setPhoneIsValid((phone.length > 8) && (phone.length < 11))\n    }\n\n    function toggleValidations() {\n        if (!phoneIsValid) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        const userFromDb = await UserService.getUser(phone)\n        //validation of owner phone number\n        if (userFromDb) {\n            if (!userFromDb.isAdmin) {\n                //need to bring from mongo\n                const { name, email, phone} = userFromDb\n                StorageService.saveToStorage('tori-user',{name, email, phone})\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/treatments')\n            }\n            else {\n                handleClickOpen()\n            }\n        } else {\n            handleModalClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = async (close) => {\n        const userFromDb = await UserService.getUser(phone)\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                const { name, email, phone} = userFromDb\n                StorageService.saveToStorage('tori-user',{name, email, phone})\n                props.updateLoggedInUser(userFromDb) \n                props.history.push('/calendarAdmin')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleModalClickOpen = () => {\n        setOpenModal(true);\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n        >\n            <main className=\"main-login-container flex align-center justify-center column\">\n                <div className=\"login-title\">\n                    אנא הכניסו מספר טלפון לזיהוי\n                </div>\n                <form className=\"main-form flex align-center column\">\n\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n\n                </form>\n\n                <span className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!phoneIsValid}>התחבר</button></span>\n\n                <div>\n                    <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                הכנס סיסמה\n          </DialogContentText>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"סיסמה\"\n                                type=\"email\"\n                                fullWidth\n                                value={password}\n                                onChange={handleChange}\n                                name=\"password\"\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => handleClose('close')} color=\"primary\">\n                                בטל\n          </Button>\n                            <Button onClick={handleClose} color=\"primary\">\n                                אשר\n          </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n\n                {/* modal dialog */}\n                <div>\n                    <Dialog\n                        open={openModal}\n                        onClose={handleModalClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description row\">\n                                <div>\n                                    <div>\n                                        המספר שהוקש אינו קיים במערכת.\n                                    </div>\n                                    <div className=\"flex\">\n                                        <div>להרשמה לחץ</div>\n                                        <Link className=\"login-link flex align-center justify-center\" to=\"/signup\">\n                                             כאן\n                                       </Link>\n                                    </div>\n                                </div>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleModalClose} color=\"primary\" autoFocus>\n                                ביטול\n                         </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const Login = connect(mapStateProps, mapDispatchToProps)(_Login)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport {updateUserPhoneInContactSignup,updateUserToSchedule} from '../../actions/userAction.js';\nimport { useLocation } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from 'react-router-dom'\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from \"../../services/UserService\";\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './Signup.scss';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function _Signup(props) {\n    const location = useLocation()\n    const [credentials, setCredentials] = React.useState({ name: '', phone: '', email: '' })\n    const { name, phone, email } = credentials\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n    function navToContacts(){\n        props.history.push('/calendarAdmin/contacts')\n    }\n\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n    \n    async function setUser() {\n        const user = await UserService.getUser(phone)\n        if (user) {\n            handleClickOpen()\n        } else {\n          if(!isContactsPath)  props.updateLoggedInUser(credentials)\n          await  UserService.addUser(credentials, isContactsPath)\n            if (!isContactsPath) {\n                if (phone !== '123456789') props.history.push('/treatments')\n                else props.history.push('/calendarAdmin')\n            } else {\n               await props.updateUserPhoneInContactSignup(credentials.phone)\n               props.updateUserToSchedule(credentials)\n                navToContacts()\n            }\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={(!isContactsPath)? MotionService.getMotionStyle('pageVariants') :''}\n            transition={(!isContactsPath)? MotionService.getMotionStyle('pageTransition') :''}\n        >\n            <main className=\"main-login-container flex align-center justify-center column\">\n            {isContactsPath&& <header className=\"header-in-signup-modal\">\n                    {isContactsPath&&<div className=\"back-arrow\" onClick={navToContacts}><i class=\"fas fa-arrow-right\"></i></div>}\n                 </header>}\n                <div className={`login-title ${isContactsPath? 'login-title-display-none' : ''}`}>\n                    אנא מלאו את השדות הבאים ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className={`main-form flex align-center justify-center column ${isContactsPath?'main-form-in-contact-path' :''}`}>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <input autoFocus={true} className=\"name\" name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <input className=\"email\" name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                    </div>\n                </form>\n\n                <span className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className={`save-btn ${isContactsPath?'save-btn-in-contact-path' :''}`} onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></span>\n                <div>\n                    <Dialog\n                        open={open}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-slide-description\">\n                                <div>\n                                    <div>\n                                        המספר שהוקש כבר קיים במערכת.\n                                    </div>\n                                    {(!isContactsPath) &&\n                                        <div className=\"flex\">\n                                            <div>להתחברות לחץ</div>\n                                            <Link className=\"login-link flex align-center justify-center\" to=\"/login\">\n                                                כאן\n                                       </Link>\n                                        </div>\n                                    }\n                                </div>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                ביטול\n                       </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </main>\n        </motion.div>\n    );\n}\n\n\n\n\nfunction mapStateProps(state) {\n    return {\n       \n    }\n}\n\nconst mapDispatchToProps = {\n    updateUserPhoneInContactSignup,\n    updateUserToSchedule,\n    updateLoggedInUser\n}\n\nexport const Signup = connect(mapStateProps, mapDispatchToProps)(_Signup)","import HttpService from './HttpService'\n\nexport default {\n    getAd,\n    updateAd,\n    toggleAdMode,\n    createAd\n}\n\n// MONGO DB - GOES THREW BACKEND\n\n function getAd() {\n    return HttpService.get('advertise')\n}\n\nfunction updateAd(content) {\n    return HttpService.put('advertise', content)\n}\n\nfunction toggleAdMode(isAdMoneOn){\n    return HttpService.put('advertise/mode',isAdMoneOn)\n}\n\n function createAd() {\n    return  HttpService.post('advertise')\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateIsAdShown} from '../../actions/userAction';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport './HomePage.scss';\n\nexport function _HomePage(props) {\n    const [isAdModalOpen, setIsAdModalOpen] = React.useState(false);\n\n    function closeAdModal() {\n        setModalInClass('')\n        setTimeout(() => {\n            setIsAdModalOpen(false)\n        }, 1100);\n    }\n\n    function changeRoute(route) {\n        (props.loggedInUser) ? props.history.push(route) : props.history.push('/signupOrLogin')\n    }\n\n    const [advertise, setAdvertise] = useState();\n    const [modalInClass, setModalInClass] = useState('');\n    const wazeUrl = 'https://www.waze.com/ul?ll=32.07757250%2C34.82430500&navigate=yes'\n    const facebook = 'bokeresh'\n    const instagram = 'restylebar'\n\n    useEffect(() => {\n        (async () => {\n                let ad = await AdvertiseService.getAd()\n                ad = ad[0]\n                if (props.loggedInUser&&(!props.loggedInUser.isAdmin)) {\n                    if (ad && ad.content && ad.isAdModeOn) {\n                        if (!props.isAdShown) {\n                            setAdvertise(ad.content)\n                            setIsAdModalOpen(true)\n                            setTimeout(() => {\n                                setModalInClass('ad-modal-in')\n                            }, 1000);\n\n                            props.updateIsAdShown(true)\n                        }\n                    }\n                } else {\n                    if (ad) return\n                    else {\n                        AdvertiseService.createAd()\n                    }\n                }\n        })()\n    }, [props.loggedInUser]);\n\n\n    return (\n        <div className=\"home-page-wrapper\">\n            <main className=\"home-page\">\n                <img className=\"cover-photo\" src={require('../../styles/img/oo.png')} />\n                {(props.loggedInUser) ?\n                    <div className=\"login-container\" onClick={() => props.history.push('/editUser')}>\n                        <div className=\"admin-logo\"> <i className=\"fas fa-user-tie\"></i></div>\n                        <div>{props.loggedInUser.name}</div>\n                    </div>\n                    :\n                    <div className=\"login-container\" onClick={() => props.history.push('/signupOrLogin')}>\n                        <div className=\"user-logo\">  <i className=\"fas fa-user-tie\"></i></div>\n                        <div>הרשם/</div>\n                        <div>התחבר</div>\n                    </div>\n                }\n                <div className=\"profile-container\">\n                    <div className=\"profile-img\"></div>\n                    <div className=\"profile-text-container\">\n                        <div id=\"profile-title\" className=\"profile-title\">Dee Nail Salon</div>\n                        <div className=\"profile-sub-title\">מכון לבניית ציפורניים</div>\n                    </div>\n                </div>\n                <div className=\"icons-container flex column align-center justify-center\">\n                {((props.loggedInUser ) && !props.loggedInUser.isAdmin)\n                        ?\n                        < div className=\"bottom-icons-container flex space-around\">\n                            <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                    קביעת תור\n                    </div>\n                            <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                    ביטול תור\n                    </div>\n                            <a className=\"phone\" href=\"tel:0538281511\">\n                                <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                         חייגו אלינו\n                    </a>\n                        </div>\n                        :\n                        props.loggedInUser\n                            ?\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/calendarAdmin')}>\n                                    <div className=\"circle\"><i class=\"far fa-calendar-alt\"></i></div>\n                     יומן\n                       </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/adminContacts')}>\n                                    <div className=\"circle\"><i class=\"fas fa-users\"></i> </div>\n                    לקוחות\n                      </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/advertise')}>\n                                    <div className=\"circle\"><i class=\"far fa-comment-alt\"></i></div>\n                    פרסומים\n                      </div>\n                            </div>\n                            :\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                        קביעת תור\n                         </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                       ביטול תור\n                         </div>\n                                <a className=\"phone\" href=\"tel:0538281511\">\n                                    <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                        חייגו אלינו\n                          </a>\n                            </div>\n                    }\n                    <div className=\"top-icons-container flex space-around\">\n                        <a className=\"facebook-container\" href={`https://www.facebook.com/${facebook}/`} >\n                            <div className=\"circle\"><i class=\"fab fa-facebook-f\"></i> </div>\n                       פייסבוק\n                        </a>\n                        <a className=\"instagram-container\" href={`https://www.instagram.com/${instagram}/`}>\n                            <div className=\"circle\"><i class=\"fab fa-instagram\"></i></div>\n                           אינסטגרם\n                        </a>\n                        <a className=\"waze-container\" href={wazeUrl}>\n                            <div className=\"circle\"> <i className=\"fab fa-waze\"></i></div>\n                        נווטו אלינו\n                        </a>\n                    </div>\n                   \n                </div>\n                {isAdModalOpen &&\n                    <>\n                        <div className=\"ad-modal-screen\" onClick={closeAdModal}> </div>\n                        <div className={`ad-modal ${modalInClass}`}>\n                            <div className=\"advertise-content\"> {advertise}</div>\n                            <button className=\"ad-modal-btn\" onClick={closeAdModal}> אישור</button>\n                        </div>\n\n                    </>\n                }\n            </main>\n        </div >\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        isAdShown: state.UserReducer.isAdShown,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsAdShown,\n}\n\nexport const HomePage = connect(mapStateProps, mapDispatchToProps)(_HomePage)","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from '../../services/UserService';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './EditUser.scss';\n\nconst ownerPassword = '1234'\n\nexport function _EditUser(props) {\n    const [credentials, setCredentials] = React.useState(props.loggedInUser)\n    const { name, phone, email } = credentials\n    const [password, setPassword] = useState('');\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                // checkPhoneValidation()\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                // checkEmailValidation()\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        //validation of owner phone number\n        if (!props.loggedInUser.isAdmin) {\n            UserService.updateUser(credentials)\n            props.history.push('/')\n        }\n        else {\n            handleClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (close) => {\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                UserService.updateUser(credentials)\n                props.history.push('/')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n\n    const [isNameEditing, setIsNameEditing] = useState(false);\n    const [isNameDisabled, setIsNameDisabled] = useState(true);\n    const [nameBorderBottom, setNameBorderBottom] = useState('thin-border-bottom');\n    const nameFocus = useRef(null);\n    useEffect(() => {\n        if (isNameEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            nameFocus.current.focus();\n        }\n    }, [isNameEditing]);\n\n    const [isPhoneEditing, setIsPhoneEditing] = useState(false);\n    const [isPhoneDisabled, setIsPhoneDisabled] = useState(true);\n    const [phoneBorderBottom, setPhoneBorderBottom] = useState('thin-border-bottom');\n    const phoneFocus = useRef(null);\n    useEffect(() => {\n        if (isPhoneEditing) {\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            phoneFocus.current.focus();\n        }\n    }, [isPhoneEditing]);\n\n    const [isEmailEditing, setIsEmailEditing] = useState(false);\n    const [isEmailDisabled, setIsEmailDisabled] = useState(true);\n    const [emailBorderBottom, setEmailBorderBottom] = useState('thin-border-bottom');\n    const emailFocus = useRef(null);\n    useEffect(() => {\n        if (isEmailEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            emailFocus.current.focus();\n        }\n    }, [isEmailEditing]);\n\n\n    const toggleEditing = (value) => {\n        if (value === 'name') {\n            setIsNameEditing(!isNameEditing);\n            setIsNameDisabled(!isNameDisabled)\n            if (nameBorderBottom === 'thick-border-bottom') {\n                setNameBorderBottom('thin-border-bottom')\n            } else {\n                setNameBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'phone') {\n            setIsPhoneEditing(!isPhoneEditing);\n            setIsPhoneDisabled(!isPhoneDisabled)\n            if (phoneBorderBottom === 'thick-border-bottom') {\n                setPhoneBorderBottom('thin-border-bottom')\n            } else {\n                setPhoneBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'email') {\n            setIsEmailEditing(!isEmailEditing);\n            setIsEmailDisabled(!isEmailDisabled)\n            if (emailBorderBottom === 'thick-border-bottom') {\n                setEmailBorderBottom('thin-border-bottom')\n            } else {\n                setEmailBorderBottom('thick-border-bottom')\n            }\n        }\n    };\n\n\n    function signOut() {\n        StorageService.removeFromStorage('tori-user')\n        props.updateLoggedInUser(null)\n        props.history.push('/')\n    }\n\n    return (\n        <motion.div\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n            style={{ width: \"100%\", height: \"100%\" }}\n        >\n            <main className=\"main-edit-container flex align-center justify-center column\">\n                <div className=\"sign-out flex align-center justify-center space-between\" onClick={signOut}>\n                    <i class=\"fas fa-sign-out-alt\"></i>\n                    <div>התנתק</div>\n                </div>\n                <div className=\"login-title\">\n                    לשינוי לחצו על סמל העריכה ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className=\"main-form flex align-center justify-center column\">\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <div className={`input-edit-container ${nameBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page name\" disabled={isNameDisabled} ref={nameFocus} name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                            {\n                                (isNameEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('name')}></i>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <div className={`input-edit-container ${phoneBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page phone\" disabled={isPhoneDisabled} ref={phoneFocus} name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                            {\n                                (isPhoneEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <div className={`input-edit-container ${emailBorderBottom} flex justify-center align-center`}>\n                            <input className=\"input-edit-page email\" disabled={isEmailDisabled} ref={emailFocus} name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                            {\n                                (isEmailEditing) ?\n                                    <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                    :\n                                    <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('email')}></i>\n                            }\n                        </div>\n                    </div>\n                </form>\n\n                <span className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></span>\n\n                <div>\n                    <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                הכנס סיסמה\n          </DialogContentText>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"סיסמה\"\n                                type=\"email\"\n                                fullWidth\n                                value={password}\n                                onChange={handleChange}\n                                name=\"password\"\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => handleClose('close')} color=\"primary\">\n                                בטל\n          </Button>\n                            <Button onClick={handleClose} color=\"primary\">\n                                אשר\n          </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n\n            </main>\n        </motion.div>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const EditUser = connect(mapStateProps, mapDispatchToProps)(_EditUser)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport {Modal} from '../../cmps/Modal/Modal';\nimport {updateIsModalOpen} from '../../actions/modalAction.js';\nimport './Advertise.scss';\n\nexport function _Advertise(props) {\n\n    const [advertiseContent, setAdvertiseContent] = useState('')\n    // boolean shows if the returned ad should be shown and make the opposite to backend if btn clicked\n    const [isAdModeOn, setIsAdModeOn] = useState('')\n\n    useEffect(() => {\n        (async () => {\n            let ad = await AdvertiseService.getAd()\n            setIsAdModeOn(ad[0].isAdModeOn)\n            setAdvertiseContent(ad[0].content)\n        })()\n    }, []);\n\n\n    function handleChange({ target }) {\n        setAdvertiseContent(target.value)\n    }\n\n    function updateAdContent() {\n        AdvertiseService.updateAd({ advertiseContent })\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    }\n    \n    function toggleAdMode() {\n        AdvertiseService.toggleAdMode({isAdModeOn:!isAdModeOn})\n        setIsAdModeOn(!isAdModeOn)\n    }\n\n    return (\n        <main className=\"main-ad-container\">\n            {\n                <div className=\"ad-title\">ערכו את המודעה ולחצו 'שמור טקסט'</div>\n            }\n            {\n                isAdModeOn?\n                <div className=\"ad-title ad-sub-title\">לעצירת הפרסום לחצו 'הפסק פרסום'</div>:\n                <div className=\"ad-title ad-sub-title\">לחצו 'המשך פרסום' כדי להפעילה</div>\n            }\n                <div className=\"textarea-container\">\n                    <textarea className=\"ad-textarea\" cols=\"30\" rows=\"10\" value={advertiseContent} onChange={handleChange} ></textarea>\n                    <div className=\"ad-btn-container flex column\">\n                        {\n                            isAdModeOn?\n                            <button className=\"ad-btn stop-ad-btn\" onClick={toggleAdMode}> הפסק פרסום</button>\n                            :\n                            <button className=\"ad-btn run-ad-btn\" onClick={toggleAdMode}> המשך פרסום</button>\n                        }\n                    </div>\n                </div>\n            <button className=\"ad-content-btn\" onClick={updateAdContent}>שמור טקסט</button>\n            <Modal modalContent={'הטקסט נשמר'} />\n        </main>\n\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Advertise = connect(mapStateProps, mapDispatchToProps)(_Advertise)\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule } from '../../actions/userAction.js';\nimport { CancelAppointment } from '../CancelAppointment/CancelAppointment';\nimport './AdminContacts.scss';\nexport function _AdminContacts(props) {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [clickedUser, setClickedUser] = useState('')\n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = useState(false);\n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n    }\n    function saveClickedUser(user) {\n        setClickedUser(user)\n        setAppointmentsModalIsOpen(true)\n    }\n    return (\n        <main className=\"admin-contacts\">\n                   {appointmentsModalIsOpen &&\n                    <>\n                        <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                        </div>\n                        <div className=\"apointments-modal\">\n                             <header className=\"header-admin-contacts-modal\">\n                                <div className=\"space-div-for-flex\"></div>\n                                <div className=\"admin-contacts-title-in-modal\">\n                                 התורים של {clickedUser.name}\n                                </div>\n                                <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n                             </header>\n                            <CancelAppointment clickedUser={clickedUser}/>\n                        </div>\n                    </>\n                }\n            <div className=\"search-input-wrapper flex align-center\">\n                <input className=\"search-input-admin-contacts\" placeholder=\"חפשו לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                <i className=\"fas fa-search\"></i>\n                <div onClick={() => props.history.push('/')} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></div>\n            </div>\n            <div className=\"admin-contacts-modal-title\">\n                ניתן להתקשר, לשלוח ווצאפ, לראות תורים שנקבעו\n                <div>  ואף למחוק אותם, ע״י לחיצה על האייקון המתאים.</div>\n            </div>\n            <div className=\"contacts-users-container-warpper\">\n                <div className=\"contacts-users-container\">\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container flex align-center justify-center`}  key={idx}>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-icons-container flex \">\n                                        <div className=\"user-que user-attr\" onClick={() => saveClickedUser(user)}><i class=\"far fa-calendar-check\"></i></div>\n                                        <a className=\"user-whatsapp user-attr\" href={`https://api.whatsapp.com/send?phone=+972${user.phone.slice(1,user.phone.length)}`}>\n                                            <div><i class=\"fa fa-whatsapp\"></i></div>\n                                        </a>\n                                        <a className=\"user-phone user-attr\"  href={`tel:${user.phone}`}>\n                                             <div ><i class=\"fas fa-phone-alt\"></i></div>\n                                        </a>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule\n}\nexport const AdminContacts = connect(mapStateProps, mapDispatchToProps)(_AdminContacts)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule,updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport './Contacts.scss';\n\nexport function _Contacts(props) {\n    const [searchTerm, setSearchTerm] = React.useState('')\n   \n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function markClickedUser(clickedUser) {\n        let users = props.users.slice()\n        if (clickedUser.isMarked) {\n            users = users.map(user => {\n                user.isMarked = false\n                props.updateUserToSchedule(null)\n                return user\n            })\n        } else {\n            users = users.map(user => {\n                if (user._id === clickedUser._id) {\n                    user.isMarked = true\n                    props.updateUserToSchedule(user)\n                    return user\n                } else {\n                    user.isMarked = false\n                    return user\n                }\n            })\n        }\n        props.updateUsers(users)\n    }\n\n    function transferTosignup() {\n        props.history.push('/calendarAdmin/contacts/signup')\n    }\n\n    return (\n        <main className=\"contacts-main-container\">\n            <div className=\"search-input-container flex align-center\">\n                <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"search-wrapper flex align-center\">\n                    <input className=\"search-input\" placeholder=\"חפש לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                    <i className=\"fas fa-search\"></i>\n                </div>\n                <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n            </div>\n            <div className=\"users-container-warpper\">\n                <div className=\"users-container\">\n                    <div className=\"create-user flex align-center\" onClick={transferTosignup} >\n                       <div className=\"create-user-title\">לקוח חדש  <span className=\"create-user-title-span\">+</span></div>\n                    </div>\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container ${(user.isMarked) ? 'user-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(user)} key={idx}>\n                                    <div className=\"check-mark-container flex align-center\">\n                                        {\n                                            (user.isMarked) && <i class=\"fas fa-check\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-phone user-attr\">{user.phone}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userPhoneInContactSignup: state.UserReducer.userPhoneInContactSignup\n    }\n}\n\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule,\n    updateUserPhoneInContactSignup\n}\n\nexport const Contacts = connect(mapStateProps, mapDispatchToProps)(_Contacts)","import React from \"react\";\nimport { connect } from 'react-redux';\nimport './AppointmentOrBlock.scss';\n\nexport function _AppointmentOrBlock(props) {\n\n    return (\n        <>\n            <main className=\"main-appointment-or-block-container flex justify-center align-center column\">\n            <header className=\"header-in-apointment-or-block-modal\">\n                <div className=\"space-div-for-flex\"></div>\n                <div className=\"appointment-or-block-title-modal\">בחרו בפעולה הרצויה</div>\n                <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n            </header>\n                <div className=\"routes-btn-container flex column space-around\">\n                    <div className=\"contacts-route-btn flex justify-center align-center\" onClick={() => props.history.push('/calendarAdmin/contacts')}>\n                        <div>קביעת תור ללקוח</div>\n                    </div >\n                    <div className=\"block-route-btn flex justify-center align-center\" onClick={() => props.history.push('/calendarAdmin/blockHours')}>\n                        <div>סגירת חלונות זמנים</div>\n                    </div>\n                </div>\n            <footer className=\"footer-in-apointment-or-block-modal\"></footer>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const AppointmentOrBlock = connect(mapStateProps, mapDispatchToProps)(_AppointmentOrBlock)\n","import React  from \"react\";\nimport { connect } from 'react-redux';\nimport { updateHoursToBlock, updateSlotToBlock } from '../../actions/calendarActions';\nimport './BlockHours.scss';\n\nexport function _BlockHours(props) {\n\n    function markClickedUser(clickedSlotRange) {\n        let slotsRange = props.slotsRangeToBlock.slice()\n        if (clickedSlotRange.isMarked) {\n            slotsRange = slotsRange.map(slotRange => {\n                slotRange.isMarked = false\n                props.updateSlotToBlock(null)\n                return slotRange\n            })\n        } else {\n            slotsRange = props.slotsRangeToBlock.map(slotRange => {\n                if (slotRange.end === clickedSlotRange.end) {\n                    slotRange.isMarked = true\n                    props.updateSlotToBlock(slotRange)\n                    return slotRange\n                } else {\n                    slotRange.isMarked = false\n                    return slotRange\n                }\n            })\n        }\n        props.updateHoursToBlock(slotsRange)\n    }\n\n    return (\n        <main className=\"hours-main-container\">\n                <header className=\"header-in-block-hours-modal flex align-center\">\n                     <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    <div className=\"block-hours-title-in-modal\">בחרו חלון זמנים ולחצו 'אישור' </div>\n                    <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n                </header>\n            <div className=\"hours-container-warpper\">\n                <div className=\"hours-container\">\n                    {\n                        (props.slotsRangeToBlock) &&\n                        props.slotsRangeToBlock.map((slotRange, idx) => {\n                            return (\n                                (props.isDayFullyAvailable && (idx === 0))\n                                    ?\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div>סגירת יום שלם</div>\n                                    </div>\n                                    :\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div className=\"hour-end user-attr\">{slotRange.end}</div>\n                                        <div className=\"hours-dash\">-</div>\n                                        <div className=\"hour-start user-attr\">{slotRange.start}</div>\n                                    </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        isDayFullyAvailable: state.CalendarReducer.isDayFullyAvailable\n    }\n}\n\nconst mapDispatchToProps = {\n    updateHoursToBlock,\n    updateSlotToBlock\n}\n\nexport const BlockHours = connect(mapStateProps, mapDispatchToProps)(_BlockHours)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport UtilsService from \"../../services/UtilsService\";\nimport './BlockConfermation.scss';\n\nexport function _BlockConfermation(props) {\n  return (\n    <>\n      <header className=\"header-in-block-confermation-modal flex space-between\">\n        <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/blockHours')}><i  class=\"fas fa-arrow-right\"></i></div>\n        <div className=\"block-confirmation-title-in-modal\">\n          לסגירת החלון שנבחר לחצו 'אישור'\n        </div>\n        <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n      </header>\n      <main className=\"main-confermation-container flex align-center justify-center\">\n        <div className=\"block-confermation-details\">\n          <div className=\"table-cell1\">חלון הזמנים שנבחר :</div>\n          <div className=\"table-cell2\">בתאריך : {UtilsService.convertDateToIsraelisDisplay(props.slotToBlock.date)}</div>\n          <div className=\"table-cell3\">בין השעות : {props.slotToBlock.end} - {props.slotToBlock.start}</div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nfunction mapStateProps(state) {\n  return {\n    slotToBlock: state.CalendarReducer.slotToBlock\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const BlockConfermation = connect(mapStateProps, mapDispatchToProps)(_BlockConfermation)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './ModalButton.scss';\n\nfunction _ModalButton(props) {\n    const location = useLocation()\n    function checkBtnValidation() {\n        const path = location.pathname\n        let isValid = true\n        switch (path) {\n            case '/calendarAdmin/contacts':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/treatments':\n                isValid = (!props.pickedTreatmentsCount) || (!(props.duration <= props.availableDuration))\n                break;\n            case '/calendarAdmin/form':\n                isValid = false\n                break;\n            case '/calendarAdmin/blockHours':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/blockConfermation':\n                isValid = false\n                break;\n            case '/calendarAdmin/appointmentOrBlock':\n                isValid = true\n                break;\n            default:\n                console.log('Err updating button modal validation')\n        }\n        return isValid\n    }\n    return (\n        <button className=\"calendar-admin-modal-btn\" onClick={() => props.handleModalRoute(props.duration)}\n            disabled={checkBtnValidation()}>\n            {\n                (location.pathname === '/calendarAdmin/contacts') ?\n                    'בחרו לקוח ולחצו כאן להמשך'\n                    :\n                    (location.pathname === '/calendarAdmin/treatments')\n                        ?\n                        'לחצו כאן להמשך'\n                        :\n                        (location.pathname === '/calendarAdmin/blockHours')\n                            ?\n                            'אישור'\n                            :\n                            (location.pathname === '/calendarAdmin/appointmentOrBlock')\n                                ?\n                                ''\n                                :\n                                'אישור'\n            }\n        </button>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const ModalButton = connect(mapStateProps, mapDispatchToProps)(_ModalButton)","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { Swipeable } from 'react-swipeable'\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme, Hidden } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { updateAvailbleDuration, setTreatment } from '../../actions/treatmentActions.js';\nimport { updateHoursToBlock, updateIsDayFullyAvailable } from '../../actions/calendarActions';\nimport {updateUserPhoneInContactSignup} from '../../actions/userAction.js';\nimport TreatmentService from \"../../services/TreatmentService\";\nimport UtilsService from '../../services/UtilsService';\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport StoreService from '../../services/StoreService';\nimport { TreatmentApp } from '../TreatmentApp/TreatmentApp'\nimport { Contacts } from '../../pages/Contacts/Contacts.jsx'\nimport { AppointmentOrBlock } from '../../pages/AppointmentOrBlock/AppointmentOrBlock.jsx'\nimport { BlockHours } from '../../pages/BlockHours/BlockHours.jsx'\nimport { BlockConfermation } from '../../pages/BlockConfermation/BlockConfermation.jsx'\nimport { SubmitForm } from '../../pages/SubmitForm/SubmitForm.jsx'\nimport { ModalButton } from '../../cmps/ModalButton/ModalButton.jsx'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport './CalendarAdmin.scss';\nimport { Signup } from \"../Signup/Signup\";\n\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide timeout={5000} direction=\"down\" ref={ref} {...props} />;\n});\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\n\nexport function _CalendarAdmin(props) {\n    //the date is irrelevant, its only for the formated function the hours wiil be given by the owner.\n    const location = useLocation()\n\n    const constrains = {\n        start: \"2020-10-12T06:00:00Z\",\n        end: \"2020-10-12T18:00:00Z\"\n    }\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [weeklyDates, setWeeklyDates] = useState([]);\n    const [tableModel, setTableModel] = useState([]);\n    const [timeSlots, setWorkingTimeSlots] = useState(getWorkingTimeSlots());\n    const [isClicked, setIsClicked] = useState(true);\n    const [tableCells, setTableCells] = useState([]);\n    const [month, setMonth] = useState(UtilsService.getMonthByIdx(new Date().getMonth() + 1));\n    const [eventsToDisplay, setEventsToDisplay] = useState(async () => {\n        return await getWeeklyEvents()\n    });\n    const [daysForDisplay, setDaysForDisplay] = useState(() => {\n        return getDailyDates(selectedDate)\n    });\n    const [loader, setLoader] = useState(true);\n    let table = []\n    let eventsIds = []\n\n    useEffect(() => {\n        (async () => {\n            let weeklyEvents = await eventsToDisplay\n            if (weeklyEvents) setLoader(false)\n            if (weeklyEvents && timeSlots) {\n                table = CalendarService.buildWeeklyModel(timeSlots, weeklyEvents)\n                return setTableCells(\n                    timeSlots.map((ts, tsIdx) => {\n                        if (tsIdx === timeSlots.length - 1) return\n                        return <tr key={tsIdx}>\n                            <td className=\"td-hours\">{UtilsService.timeToDisplay(ts)}</td>\n                            {\n                                weeklyEvents.map((dailyEvents, dailyIdx) => {\n\n                                    let counter = 0\n                                    if (dailyEvents.length) {\n                                        let cellIsRendered = false\n                                        return dailyEvents.map((ev, eventIdx) => {\n                                            let evenOrOdd = (dailyIdx % 2 === 0) ? 'even-event' : 'odd-event'\n                                            if (counter > 2) counter = 0\n                                            const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                                            if (range.occupied) {\n                                                cellIsRendered = true\n                                                if (!eventsIds.includes(ev.id)) {\n                                                    eventsIds.push(ev.id)\n                                                    return <td className={`occupied-cell ${(ev.name === 'block - block') ? 'blocked-cell' : ''} ${evenOrOdd}-${(counter)}`} key={eventIdx} onClick={() => handleClickOpen(ev)} rowSpan={range.rowspan}>\n                                                        <div className=\"occupied-cell-content\">\n                                                            <div className=\"event-time-wrapper\">\n                                                            <div className=\"event-time\">{UtilsService.timeToDisplay((ev.start).slice(11, 16))}-{UtilsService.timeToDisplay((ev.end).slice(11, 16))}</div>\n                                                            </div>\n                                                            {(ev.name === 'block - block')\n                                                                ?\n                                                                <div>\n                                                                    סגור\n                                                                </div>\n                                                                :\n                                                                <div className=\"event-desc\">{ev.name}</div>\n                                                            }\n                                                        </div>\n                                                    </td>\n         \n                                                } else return ''\n                                            }\n                                            else if ((dailyEvents.length === eventIdx + 1) && (!cellIsRendered)) {\n                                                return <td className=\"available-cell\" key={eventIdx} onClick={() => openAppointmentsModal({ tsIdx, dailyIdx }, ts)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                            }\n                                            counter++\n                                        })\n                                    } else {\n                                        //all day available no event at this day\n                                        return <td key={dailyIdx} className=\"available-cell\" onClick={() => openAppointmentsModal({ tsIdx, dailyIdx }, ts, true)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                    }\n                                })\n                            }\n                        </tr>\n                    })\n                )\n            }\n        })()\n    }, [eventsToDisplay]);\n\n    useEffect(() => {\n        checkIfClicked()\n    }, [props.users, props.slotsRangeToBlock]);\n\n\n    function checkIfClicked() {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            setIsClicked(!(props.users.find(user => user.isMarked)))\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            setIsClicked(!(props.slotsRangeToBlock.find(sr => sr.isMarked)))\n        }\n    }\n\n    function handleModalRoute(duration) {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            props.history.push('/calendarAdmin/treatments')\n            setIsClicked(true)\n        }\n        if (location.pathname === '/calendarAdmin/treatments') {\n            props.history.push('/calendarAdmin/form')\n        }\n        if (location.pathname === '/calendarAdmin/form') {\n            setAppointment(duration)\n            closeAppointmentsModal()\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/blockConfermation') {\n            blockSlotRange()\n            closeAppointmentsModal()\n        }\n    }\n\n    function getDailyDates(date) {\n        const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n        setWeeklyDates(days)\n        return days.map(day => {\n            return day.start.slice(8, 10)\n        })\n    }\n\n    function cancelAppiontment() {\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n        CalendarService.removeEventFromCalendar(eventToRmoveId.calendar)\n        // delete from mongo data base\n        EventService.removeEventFromDB(eventToRmoveId.mongo)\n        // EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n    }\n\n    function getDatesWeeklyRange(date) {\n            const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n            const firstDay = UtilsService.convertDateToIsraelisDisplay(days[0].start.slice(0, 10))\n            const lastDay = UtilsService.convertDateToIsraelisDisplay(days[days.length - 1].start.slice(0, 10))\n            return { lastDay, firstDay }\n\n    }\n\n    function getWorkingTimeSlots() {\n        return UtilsService.getDailySlotsForPreview([constrains], 15)\n    }\n\n    async function getWeeklyEvents(date = new Date()) {\n        return await Promise.all((UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)).map(async isosDate => {\n            return await CalendarService.getEventsFromCalendar(isosDate)\n        }))\n    }\n\n    async function handleChange(date) {\n        setDaysForDisplay(getDailyDates(date))\n        setMonth(UtilsService.getMonthByIdx(date.getMonth() + 1))\n        eventsIds = []\n        setLoader(true)\n        const weeklyEvents = await getWeeklyEvents(date)\n        if (weeklyEvents) {\n            setLoader(false)\n        }\n        setEventsToDisplay(weeklyEvents)\n        handleDateChange(date)\n    }\n    function onSwipeDirection(direction) {\n        if (!loader) {\n            //need to change to normal way\n            if ((direction === 'Left') && (selectedDate.getTime()) > (new Date().getTime())) {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 7)));\n            }\n            else if (direction === 'Right') {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 7)));\n            }\n            // else {\n            //     if ((direction !== 'Up') && (direction !== 'Down')) {\n            //         seTcalendarTitle('לא ניתן לבחור תאריך שעבר')\n            //         setPickerRedTitle('picker-red-title')\n            //         setTimeout(() => {\n            //             seTcalendarTitle('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n            //             setPickerRedTitle('date-picker-title')\n            //         }, 3000);\n            //     }\n            // }\n        }\n    }\n    const [isOpen, setIsOpen] = useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [eventToRmoveId, setEventToRmove] = React.useState({});\n    const [modalSubJect, setModalSubJect] = React.useState({});\n\n    const handleClickOpen = async (ev) => {\n        if (ev.name === 'block - block') setModalSubJect(true)\n        else setModalSubJect(false)\n        const mongoEvent = await EventService.getMongoEventByEventCalendarId(ev.id)\n        setEventToRmove({ mongo: mongoEvent._id, calendar: ev.id })\n        setOpen(true);\n    };\n\n    const handleClose = (isApproved) => {\n        setOpen(false);\n        if (isApproved) cancelAppiontment()\n    };\n\n\n    async function setAppointment(duration) {\n        const markedTreatmetns = TreatmentService.getMarkedTreatmentsStr(props.treatments)\n        const { phone, email, name } = props.userToSchedule\n        await CalendarService.setAppointment(markedTreatmetns, duration, phone, email, name, props.treatment)\n        setEventsToDisplay(await getWeeklyEvents(selectedDate))\n    }\n\n    async function blockSlotRange() {\n        await CalendarService.blockSlotRange(props.slotToBlock)\n        setEventsToDisplay(await getWeeklyEvents(selectedDate))\n    }\n\n    let weeklyRange = getDatesWeeklyRange(selectedDate)\n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = React.useState(false);\n\n    function openAppointmentsModal(cellPos, ts, isDayFullyAvailable = false) {\n        props.updateIsDayFullyAvailable(isDayFullyAvailable)\n        const dateToScheduale = weeklyDates[cellPos.dailyIdx].start\n        props.setTreatment({\n            time: ts,\n            date: dateToScheduale.slice(0, 10)\n        })\n        const availableDuration = CalendarService.getAvailbleDuration(table, cellPos)\n        props.updateAvailbleDuration(availableDuration)\n        props.updateHoursToBlock(CalendarService.getHoursToBlock(timeSlots, ts, availableDuration, dateToScheduale.slice(0, 10), isDayFullyAvailable))\n        setAppointmentsModalIsOpen(true)\n        props.history.push('/calendarAdmin/appointmentOrBlock')\n    }\n\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n        // chagne semantics, because it represents the opposite - making sure btn will be disable after modal closed and reopen\n        setIsClicked(true)\n        props.updateUserPhoneInContactSignup('')\n        StoreService.initApp()\n        props.history.push('/calendarAdmin')\n    }\n    let isCalendarAdminForm = (location.pathname === '/calendarAdmin/form')\n\n    function disableDay(date) {\n\n        return  (date.getDay() === 6);\n      }\n\n    return (\n        <>\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n        <ThemeProvider theme={materialTheme}>\n            <DatePicker\n                disablePast={true}\n                shouldDisableDate={disableDay}\n                variant=\"dialog\"\n                okLabel=\"אישור\"\n                cancelLabel=\"ביטול\"\n                open={isOpen}\n                onOpen={() => setIsOpen(true)}\n                onClose={() => setIsOpen(false)}\n                format=\"MM/dd/yyyy\"\n                id=\"date-picker-inline\"\n                disableToolbar\n                value={selectedDate}\n                onChange={handleChange}\n                InputProps={{\n                    disableUnderline: true,\n                    style: { width: '0', height: '0px' }\n                }}\n                keyboardbuttonprops={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </ThemeProvider>\n    </MuiPickersUtilsProvider>\n        <motion.div\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n            style={{ width: \"100%\", height: \"100%\" }}\n        >\n            <main className=\"calendar-admin-container\">\n                <div className=\"header-app flex justifiy-center align-center space-between\" >\n                    <div className=\"weekly-dates-container flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                        <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                        <div className=\"weekly-dates-text\">{weeklyRange.firstDay}<br />{weeklyRange.lastDay} </div>\n                    </div>\n                    <div id=\"text2\" onClick={() => props.history.push('/')} >Tori<i className=\"fas fa-tasks\"></i></div>\n                </div>\n                <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                    <header className=\"days-header-container flex space-between\">\n                        <div className=\"days-name-container month-container\" >\n                            <div className=\"month-name\">{month}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">ראשון</div>\n                            <div className=\"daily-num\"> {daysForDisplay[0]}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">שני</div>\n                            <div className=\"daily-num\"> {daysForDisplay[1]}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">שלישי</div>\n                            <div className=\"daily-num\"> {daysForDisplay[2]}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">רביעי</div>\n                            <div className=\"daily-num\"> {daysForDisplay[3]}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">חמישי</div>\n                            <div className=\"daily-num\"> {daysForDisplay[4]}</div>\n                        </div>\n                        <div className=\"days-name-container\">\n                            <div className=\"daily-name\">שישי</div>\n                            <div className=\"daily-num\"> {daysForDisplay[5]}</div>\n                        </div>\n                    </header>\n                    <div>\n                        {\n                            !loader ?\n                                <div className=\"table-container\">\n                                    <table>\n                                        <tbody>\n                                            {\n                                                (tableCells.length) &&\n                                                tableCells\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <footer className=\"calendar-footer flex align-center justify-center\">\n                                        <div className=\"footer-hours\">20:00</div>\n                                    </footer>\n                                </div>\n                                :\n                                <div className=\"loader-container flex justify-center align-center space-around\">\n                                    <LoaderApp />\n                                </div>\n                        }\n                    </div>\n                </Swipeable>\n               \n\n\n                <div>\n                    <Dialog\n                        open={open}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={() => handleClose(false)}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\">{modalSubJect ? 'מחיקת סגירה' : 'מחיקת תור'}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-slide-description\">\n                                {\n                                    modalSubJect ?\n                                        'להסרת החסימה לחצו אישור'\n                                        : ' למחיקת התור לחצו אישור'\n                                }\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => handleClose(false)} color=\"primary\">\n                                ביטול\n               </Button>\n                            <Button onClick={() => handleClose(true)} color=\"primary\">\n                                אישור\n               </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n                {appointmentsModalIsOpen &&\n                    <>\n                        <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                        </div>\n                        <div className=\"apointments-modal\">\n                            {isCalendarAdminForm &&\n                                <header className=\"header-in-form-modal flex align-center space-between\">\n                                     <div className=\"back-arrow\" onClick={()=> props.history.push('/calendarAdmin/treatments')}><i  class=\"fas fa-arrow-right\"></i></div>\n                                     <div> \n                                        לקביעת התור לחצו 'אישור'\n                                    </div> \n                                    <div className={'modal-header-cls-btn'}><i class=\"fas fa-times\"></i></div>\n                                </header>\n                            }\n                            <Router>\n                                <Route path=\"/calendarAdmin/contacts\" exact component={Contacts} />\n                                <Route path=\"/calendarAdmin/contacts/signup\" component={Signup} />\n                                <Route path=\"/calendarAdmin/treatments\" component={TreatmentApp} />\n                                <Route path=\"/calendarAdmin/form\" component={SubmitForm} />\n                                <Route path=\"/calendarAdmin/appointmentOrBlock\" component={AppointmentOrBlock} />\n                                <Route path=\"/calendarAdmin/blockHours\" component={BlockHours} />\n                                <Route path=\"/calendarAdmin/blockConfermation\" component={BlockConfermation} />\n                            </Router>\n                            {((location.pathname !== '/calendarAdmin/appointmentOrBlock')&&(location.pathname !== '/calendarAdmin/contacts/signup')) && <ModalButton handleModalRoute={handleModalRoute} isClicked={isClicked} />}\n                        </div>\n                    </>\n                }\n            </main>\n        </motion.div>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userToSchedule: state.UserReducer.userToSchedule,\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        slotToBlock: state.CalendarReducer.slotToBlock\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAvailbleDuration,\n    setTreatment,\n    updateHoursToBlock,\n    updateIsDayFullyAvailable,\n    updateUserPhoneInContactSignup\n}\n\nexport const CalendarAdmin = connect(mapStateProps, mapDispatchToProps)(_CalendarAdmin)\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { TreatmentApp } from './pages/TreatmentApp/TreatmentApp.jsx'\nimport { CalendarApp } from './pages/CalendarApp/CalendarApp.jsx'\nimport { SubmitForm } from './pages/SubmitForm/SubmitForm.jsx'\nimport { CancelAppointment } from './pages/CancelAppointment/CancelAppointment.jsx'\nimport { SignupOrLogin } from './pages/SignupOrLogin/SignupOrLogin.jsx'\nimport { Login } from './pages/Login/Login.jsx'\nimport { Signup } from './pages/Signup/Signup.jsx'\nimport { HomePage } from './pages/HomePage/HomePage.jsx'\nimport { EditUser } from './pages/EditUser/EditUser.jsx'\nimport { Advertise } from './pages/Advertise/Advertise.jsx'\nimport { AdminContacts } from './pages/AdminContacts/AdminContacts.jsx'\nimport { CalendarAdmin } from './pages/CalendarAdmin/CalendarAdmin.jsx'\nimport { HashRouter as Router } from 'react-router-dom';\nimport { updateLoggedInUser } from './actions/userAction.js';\nimport StorageService from './services/StorageService';\nimport UserService from './services/UserService';\n\nexport function _App(props) {\n\n  useEffect(() => {\n    (async () => {\n    let user = await StorageService.loadFromStorage('tori-user')\n    if (user&&!props.loggedInUser) {\n     await props.updateLoggedInUser(await UserService.getUser(user.phone))\n    }\n  })()\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch >\n          <Route path=\"/calendar\" component={CalendarApp} />\n          <Route path=\"/cancelAppointment\" component={CancelAppointment} />\n          <Route path=\"/form\" component={SubmitForm} />\n          <Route path=\"/treatments\" component={TreatmentApp} />\n          <Route path=\"/signupOrLogin\" component={SignupOrLogin} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/editUser\" component={EditUser} />\n          <Route path=\"/calendarAdmin\" component={CalendarAdmin} />\n          <Route path=\"/advertise\" component={Advertise} />\n          <Route path=\"/adminContacts\" component={AdminContacts} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    loggedInUser: state.UserReducer.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  updateLoggedInUser\n}\n\nexport const App = connect(mapStateProps, mapDispatchToProps)(_App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}