{"version":3,"sources":["styles/img/oo.png","reducers/TreatmentReducer.js","reducers/ModalReducers.js","reducers/StepperReducer.js","reducers/CalendarReducer.js","history.js","services/HttpService.js","services/StorageService.js","services/UserService.js","reducers/UserReducer.js","store.js","services/StoreService.js","cmps/TabsApp/TabsApp.jsx","cmps/StepperApp/StepperApp.jsx","cmps/AppHeader/AppHeader.jsx","services/UtilsService.js","services/TreatmentService.js","actions/treatmentActions.js","actions/userAction.js","cmps/SwitchApp/SwitchApp.jsx","cmps/TreatmentPreview/TreatmentPreview.jsx","cmps/TreatmentList/TreatmentList.jsx","cmps/TreatmentTitle/TreatmentTitle.jsx","actions/stepperActions.js","cmps/NavBtns/NavBtns.jsx","services/MotionService.js","cmps/LoaderApp/LoaderApp.jsx","pages/TreatmentApp/TreatmentApp.jsx","cmps/EditTreatmentPreview/EditTreatmentPreview.jsx","cmps/EditTreatmentList/EditTreatmentList.jsx","pages/EditTreatments/EditTreatments.jsx","pages/TreatmentToEdit/TreatmentToEdit.jsx","cmps/DailySlots/DailySlots.jsx","cmps/TimeslotList/TimeslotList.jsx","services/EventService.js","services/EmailService.js","services/CalendarService.js","actions/calendarActions.js","pages/CalendarApp/CalendarApp.jsx","actions/modalAction.js","cmps/Modal/Modal.jsx","pages/SubmitForm/SubmitForm.jsx","pages/CancelAppointment/CancelAppointment.jsx","pages/SignupOrLogin/SignupOrLogin.jsx","pages/Login/Login.jsx","cmps/EditButton/EditButton.jsx","pages/Signup/Signup.jsx","services/AdvertiseService.js","pages/HomePage/HomePage.jsx","pages/EditUser/EditUser.jsx","pages/Advertise/Advertise.jsx","pages/AdminContacts/AdminContacts.jsx","pages/Contacts/Contacts.jsx","pages/AppointmentOrBlock/AppointmentOrBlock.jsx","pages/AppointmentFreq/AppointmentFreq.jsx","pages/BlockHours/BlockHours.jsx","pages/BlockConfermation/BlockConfermation.jsx","cmps/ModalButton/ModalButton.jsx","pages/CalendarAdmin/CalendarAdmin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","treatment","treatments","duration","availableDuration","pickedTreatmentsCount","isModalOpen","step","steps","calendar","timeSlots","hoursToBlock","slotToBlock","confirmedEventId","isDayFullyAvailable","tableModel","recurrence","isRecurrence","freq","count","history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","saveToStorage","key","value","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","removeFromStorage","removeItem","getUsers","getUser","phone","HttpService","addUser","removeUser","updateUser","user","oldPhone","StorageService","unshiftCellByPhoneNumber","users","idx","findIndex","splicedCell","splice","isMarked","copySplicedCell","unshift","_sortUsers","sort","b","name","localeCompare","isCreateadByAdmin","isAdmin","_id","loggedInUser","userToSchedule","isAdShown","userPhoneInContactSignup","rootReducer","combineReducers","TreatmentReducer","state","action","type","filter","treatmentId","CalendarReducer","slotsRangeToBlock","StepperReducer","UserReducer","UserService","ModalReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","initApp","dispatch","TabsApp","withRouter","props","React","useState","setValue","location","useLocation","useEffect","pathname","style","width","boxShadow","color","AppBar","position","Tabs","onChange","event","newValue","className","Tab","label","onClick","StoreService","id","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","StepperApp","connect","activeStep","classes","Stepper","map","index","labelProps","Step","StepLabel","AppHeader","headerConstrains","setHeaderConstrains","initWithFalse","isHeader","noHeaderMargin","isStepper","isTabs","englishToHebrew","word","convertedWord","getIsosDate","getTimeSlotsForPreview","getDailySlotsForPreview","changeTimeForDisplay","idGen","Math","random","toString","substr","calculateEndTime","time","hours","slice","minutes","floor","checkDigitsAndAddZerosIfNeeded","arrayToString","pickedTreatments","treatmentsType","forEach","tr","length","convertDateToIsraelisDisplay","convertDateTo4DigitsDisplay","date","dateParts","split","getDayByHebrewWord","getEventReadyForDisplay","filteredEvents","startTime","gUtcDiff","endTime","email","convertNumberToWords","validateEmail","test","String","toLowerCase","getWeekIsosDatesForCalendar","dayByNum","weeklyDates","getDay","Date","getTime","i","isosDate","start","end","checkIfTsInRange","tsToCompare","tsToCompareWithAddedHours","timeRangeBySlots","occupied","includes","rowspan","getMonthByIdx","timeToDisplay","getSplitedEventDesc","desc","splitedDesc","convertDurationToApiStr","calculateDuration","startHours","startMinutes","endHours","endMinutes","dateToDisplay","getArray","num","priceOrDuration","arr","daysAfterOrBefore","recurrenceAvailbilityCheck","dateCopy","setDate","getDate","toISOString","slotsRanges","timeslotsByConstraints","sr","concat","apply","timeslot","slotsToRender","year","month","day","min","nextTimeSlot","getHours","getMinutes","slotToRender","diff","digit","getTreatments","getById","remove","update","updateTreatments","updatedTreatment","getMarkedTreatmentsStr","marked","UtilsService","loadTreatments","TreatmentService","setTreatments","setTreatment","_setTreatment","_updateTreatmentsCount","_updateTreatments","_updateDuration","_updateAvailbleDuration","loadUsers","setUsers","updateUsers","_updateUsers","err","updateLoggedInUser","_updateLoggedInUser","updateUserToSchedule","_updateUserToSchedule","updateUserPhoneInContactSignup","_updateUserPhoneInContactSignup","direction","jss","plugins","jssPreset","rtl","SwitchApp","checked","setChecked","StylesProvider","ThemeProvider","Switch","updateDuration","updatePickedTreatments","target","inputProps","_TreatmentPreview","treatmentsToUpdate","setState","updateTreatmentsCount","this","price","UtilService","Component","mapDispatchToProps","TreatmentPreview","TreatmentList","getTreatmentsToUpdate","TreatmentTitle","isCalendarAdmin","isDurationValid","class","isClicked","updateActiveStep","_updateActiveStep","NavBtns","activeBtn","setActiveBtn","isNextBtnDisable","changeStep","setAppointment","handleOpen","updateTitleProp","disabled","getMotionStyle","in","opacity","x","out","stiffness","textAlign","LoaderApp","height","timeout","setUserToSchedule","_setUserToSchedule","TreatmentApp","setIsClicked","div","initial","exit","animate","variants","MotionService","transition","_EditTreatmentPreview","pickedTreatment","EditTreatmentPreview","EditTreatmentList","EditTreatments","TreatmentToEdit","arr2","amount","credentials","setCredentials","minSelected","setMinSelected","handleChange","field","ar","selected","size","DailySlots","ts","onAppointmentChoice","TimeslotList","Object","keys","isDateFullyBooked","slotsForPreview","saveConfirmedEvent","getMongoEventByEventCalendarId","evId","getEventByPhone","removeEventFromDB","sendEmail","isConfirmation","businessName","bodyText","emailObj","getCalendar","getAvailbleDailySlots","addEventToCalendar","addRecurrenceToCalendar","removeEventFromCalendar","getEventsFromCalendar","buildWeeklyModel","weeklyEvents","tableCellsModel","tsIdx","dailyEvents","dailyIdx","isCellInUsed","ev","eventIdx","getAvailbleDuration","table","cellPos","slotSize","durationAvalability","getHoursToBlock","timeSlot","availableSlots","pop","blockSlotRange","getDatesWeeklyRange","days","firstDay","lastDay","timeRange","eventName","creatorName","creatorEmail","eventId","endtTime","dailySlots","confirmedEvent","EventService","EmailService","checkRecurrenceAvailbility","fullDate","firstTime","occupiedDates","time1","time2","setTimeSlots","updateHoursToBlock","_updateHoursToBlock","materialTheme","overrides","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersDay","daySelected","dayDisabled","current","loadTimeSlots","pickedDate","secondDay","thirdDay","CalendarService","firstDaySlots","secondDaySlots","thirdDaySlots","CalendarApp","selectedDate","handleDateChange","loader","setLoader","calendarTitle","seTcalendarTitle","pickerRedTitle","setPickerRedTitle","isOpen","setIsOpen","utils","DateFnsUtils","locale","heLocale","DatePicker","disablePast","shouldDisableDate","variant","okLabel","cancelLabel","open","onOpen","onClose","format","disableToolbar","InputProps","disableUnderline","keyboardbuttonprops","onSwiped","eventData","setTimeout","onSwipeDirection","updateIsModalOpen","_updateIsModalOpen","Modal","modalClass","setModalClass","isAdminContacts","handleClose","modalContent","SubmitForm","markedTreatmetns","setMarkedTreatmetns","dateIsraeliDisplay","isCalendarAdminForm","CancelAppointment","getEventsByPhone","clickedUser","eventsToCancel","setEventsToCancel","pageCount","setPageCount","then","events","now","eventToRmove","find","cancelAppointment","SignupOrLogin","to","Login","setPhone","password","setPassword","togglePhoneValidation","setTogglePhoneValidation","phoneIsValid","setPhoneIsValid","userFromDb","handleClickOpen","handleModalClickOpen","setOpen","dialogTitle","setDialogTitle","close","openModal","setOpenModal","handleModalClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","Button","aria-describedby","EditButton","isContactsPath","toggleValidations","setUser","isValid","Transition","forwardRef","ref","Slide","Signup","toggleNameValidation","setToggleNameValidation","toggleEmailValidation","setToggleEmailValidation","setIsValid","navToContacts","emailIsValid","checkValidation","maxlength","TransitionComponent","keepMounted","getAd","updateAd","content","toggleAdMode","isAdMoneOn","createAd","updateIsAdShown","_updateIsAdShown","HomePage","changeRoute","route","advertise","setAdvertise","AdvertiseService","ad","isAdModeOn","src","require","href","EditUser","isNameEditing","setIsNameEditing","isNameDisabled","setIsNameDisabled","nameBorderBottom","setNameBorderBottom","nameFocus","useRef","setIsPhoneEditing","setIsPhoneDisabled","setPhoneBorderBottom","setIsEmailEditing","setIsEmailDisabled","setEmailBorderBottom","focus","isPhoneEditing","isPhoneDisabled","phoneBorderBottom","phoneFocus","isEmailEditing","isEmailDisabled","emailBorderBottom","emailFocus","toggleEditing","Advertise","advertiseContent","setAdvertiseContent","setIsAdModeOn","cols","rows","AdminContacts","searchTerm","setSearchTerm","setClickedUser","appointmentsModalIsOpen","setAppointmentsModalIsOpen","placeholder","saveClickedUser","Contacts","markClickedUser","AppointmentOrBlock","updateRecurrence","_updateRecurrence","AppointmentFreq","freqOrCount","recurrenceCopy","for","updateSlotToBlock","_updateSlotToBlock","BlockHours","clickedSlotRange","slotsRange","slotRange","BlockConfermation","ModalButton","handleModalRoute","checkBtnValidation","updateAvailbleDuration","updateIsDayFullyAvailable","_updateIsDayFullyAvailable","updateTableModel","_updateTableModel","CalendarAdmin","constrains","tempEventToRmoveId","setTempEventToRmoveId","eventToRmoveId","setEventToRmove","prevEventsToDisplay","setPrevEventsToDisplay","modalSubJect","setModalSubJect","isTempModeOn","setIsTempModeOn","setWeeklyDates","tableCells","setTableCells","occDates","setOccupiedDates","getMonth","setMonth","getWeeklyEvents","eventsToDisplay","setEventsToDisplay","getDailyDates","daysForDisplay","setDaysForDisplay","eventsIds","weeklyRange","openAppointmentsModal","dateToScheduale","eventsToDisplayCopy","isTemp","isCancelApp","confirmedDeletedEvent","mongo","Promise","all","counter","cellIsRendered","evenOrOdd","range","rowSpan","checkIfClicked","mongoEvent","isApproved","cancelAppiontment","tempEvent","startTimeTs","startTimeTsIdx","endTimeTs","endTimeTsIdx","isCellOccupied","j","prevEvents","confirmedBlockOrOccDates","Array","isArray","closeAppointmentsModal","d","path","exact","component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da81b159.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oo.bb4ea92a.png\";","const INITIAL_STATE = {\n    treatment: null,\n    treatments: null,\n    duration:0,\n    availableDuration:0,\n    pickedTreatmentsCount:0\n}\n\nexport function TreatmentReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n\n        case 'SET_TREATMENTS':\n            return {\n                ...state,\n                treatments: action.treatments\n            }            \n        case 'SET_TREATMENT':\n            return {\n                ...state,\n                treatment: action.treatment\n            }    \n        case 'REMOVE_TREATMENT':\n        return {\n          ...state,\n          treatments: state.treatments.filter(treatment => treatment._id !== action.treatmentId)\n        };     \n        case 'UPDATE_TREATMENTS':\n        return {\n          ...state,\n          treatments:action.treatments \n        };   \n        \n        case 'UPDATE_PICKED_TREATMENTS_COUNT' :\n        return {\n          ...state,\n          pickedTreatmentsCount: state.pickedTreatmentsCount+(action.count)\n        };              \n        case 'UPDATE_DURATION':\n        return {\n          ...state,\n          duration: state.duration+(action.duration)\n        };                 \n        case 'UPDATE_AVAILBLE_DURATION':\n        return {\n          ...state,\n          availableDuration: state.availableDuration+(action.availableDuration)\n        };                 \n        case 'INIT_DURATION':\n        return {\n          ...state,\n          duration:0,\n          availableDuration:0\n        };           \n        case 'INIT_PICKED_TREATMENTS_COUNT':\n        return {\n          ...state,\n          pickedTreatmentsCount:0\n        };           \n      \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    isModalOpen:false\n}\n\nexport function ModalReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'UPDATE_IS_MODAL_OPEN':\n            return {\n                ...state,\n                isModalOpen: action.isModalOpen\n            }\n        default:\n            return state;\n    }\n}\n","const INITIAL_STATE = {\n  step:0,\n  steps:['בחירת טיפולים ', ' בחירת תור', 'אישור']\n}\n\nexport function StepperReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'UPDATE_ACTIVE_STEP':\n            return {\n                ...state,\n                step:action.step\n            }       \n       \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    calendar: null,\n    timeSlots: null,\n    hoursToBlock:null,\n    slotToBlock:null,\n    confirmedEventId:null,\n    isDayFullyAvailable:false,\n    tableModel:[],\n    recurrence: {isRecurrence:false, freq:'DAILY', count: 1}\n}\n\nexport function CalendarReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'SET_CALENDAR':\n            return {\n                ...state,\n                calendar: action.calendar\n            }          \n        case 'SET_TIMESLOTS':\n            return {\n                ...state,\n                timeSlots: action.timeSlots\n            }          \n        case 'UPDATE_HOURS_TO_BLOCK':\n            return {\n                ...state,\n                slotsRangeToBlock: action.slotsRangeToBlock\n            }          \n        case 'UPDATE_SLOT_TO_BLOCK':\n            return {\n                ...state,\n                slotToBlock: action.slotToBlock\n            }          \n        case 'UPDATE_IS_DAY_FULLY_AVAILABLE':\n            return {\n                ...state,\n                isDayFullyAvailable: action.isDayFullyAvailable\n            }          \n        case 'UPDATE_RECURRENCE':\n            return {\n                ...state,\n                recurrence: action.recurrence\n            }          \n        case 'UPDATE_TABLE_MODEL':\n\n            return {\n                ...state,\n                tableModel : action.tableModel\n            }          \n\n        default:\n            return state;\n    }\n}\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nexport default history;","import history from '../history';\nimport Axios from 'axios';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\n\nexport default {\n    get(endpoint, data){\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data){\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data){\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data){\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\n\nasync function ajax(endpoint, method='get', data=null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n          history.push('/login');\n        }\n        throw err;\n    }\n}","export default {\n    saveToStorage,\n    loadFromStorage,\n    removeFromStorage\n}\n\nfunction saveToStorage(key, value) {\n    var str = JSON.stringify(value);\n    localStorage.setItem(key, str);\n}\nfunction removeFromStorage(key) {\n    localStorage.removeItem(key);\n}\n\nfunction loadFromStorage(key) {\n    var str = localStorage.getItem(key)\n    return JSON.parse(str)\n}","import HttpService from './HttpService'\nimport StorageService from \"../services/StorageService\";\n\nexport default {\n    getUsers,\n    getUser,\n    addUser,\n    removeUser,\n    updateUser,\n    unshiftCellByPhoneNumber\n}\n\nfunction _sortUsers(users) {\n    return users.sort((a, b) => a.name.localeCompare(b.name))\n}\n\nasync function getUsers() {\n    const users = await HttpService.get('user')\n    return _sortUsers(users)\n}\n\nfunction getUser(phone) {\n    return HttpService.get(`user/${phone}`)\n}\n\nfunction updateUser(user) {\n    user.oldPhone = StorageService.loadFromStorage('tori-user').phone\n    StorageService.saveToStorage('tori-user', user)\n    return HttpService.put(`user/`, user)\n}\n\nasync function addUser(user, isCreateadByAdmin) {\n    user.isMarked = false\n    if (!isCreateadByAdmin) StorageService.saveToStorage('tori-user', user)\n    //need to come from backend env\n    if (user.phone === '123456789') user.isAdmin = true\n    else user.isAdmin = false\n    return await HttpService.post('user', user)\n}\n\nasync function removeUser(_id) {\n    StorageService.saveToStorage('tori-user', '')\n    return HttpService.delete(`user/${_id}`)\n}\n\n\nfunction unshiftCellByPhoneNumber(users, phone) {\n    const idx = users.findIndex(user => user.phone === phone)\n    let splicedCell = users.splice(idx, 1)[0]\n    splicedCell.isMarked = true\n    let copySplicedCell = { ...splicedCell }\n    users.unshift(copySplicedCell)\n    return users\n}\n","import UserService from '../services/UserService';\n\nconst INITIAL_STATE = {\n    users: [],\n    loggedInUser:null,\n    userToSchedule: null,\n    isAdShown: false,\n    userPhoneInContactSignup: ''\n}\n\nexport function UserReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                   users: (state.userPhoneInContactSignup) ? UserService.unshiftCellByPhoneNumber(action.users, state.userPhoneInContactSignup) : action.users\n            }\n        case 'UPDATE_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'UPDATE_LOGEDIN_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n        case 'SET_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_IS_AD_SHOWN':\n            return {\n                ...state,\n                isAdShown: action.isAdShown\n            }\n        case 'UPDATE_NUMBER_IN_CONTACT_SIGNUP':\n            return {\n                ...state,\n                userPhoneInContactSignup: action.userPhoneInContactSignup\n            }\n\n        default:\n            return state;\n    }\n}\n","import { TreatmentReducer } from './reducers/TreatmentReducer';\nimport { ModalReducer } from './reducers/ModalReducers';\nimport { StepperReducer } from './reducers/StepperReducer';\nimport { CalendarReducer } from './reducers/CalendarReducer';\nimport { UserReducer } from './reducers/UserReducer';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    TreatmentReducer,\n    CalendarReducer,\n    StepperReducer,\n    UserReducer,\n    ModalReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import {store} from \"../store.js\";\n\nexport default {\n    initApp\n}\n\nfunction initApp() {\n    store.dispatch({type: 'UPDATE_ACTIVE_STEP',step:0})\n    store.dispatch({type: 'SET_TREATMENT', treatment:null})\n    store.dispatch({type: 'SET_TREATMENTS', treatments:null})\n    store.dispatch({type: 'SET_TIMESLOTS',timeSlots:null})\n    store.dispatch({type: 'INIT_DURATION'})\n    store.dispatch({type: 'INIT_PICKED_TREATMENTS_COUNT'})\n}\n\n","import React, {useEffect} from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StoreService from '../../services/StoreService';\nimport './TabsApp.scss';\n\nexport function _TabsApp(props) {\n  const [value, setValue] = React.useState(0);\n  const location = useLocation()\n  useEffect(() => {(location.pathname !== '/cancelAppointment')? setValue(0): setValue(1)},[value,location]);\n\n  // tabs style\n  const style = {\n    width:'28%',\n    boxShadow:'none',\n    color:'white'\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue === 1) {\n      props.history.push('/cancelAppointment')\n    } else {\n      props.history.push('/treatments')\n    }\n  };\n\n  function navToHomePage() {\n    StoreService.initApp()\n    props.history.push('/')\n}\n\n  return (\n\n    <AppBar position=\"static\" style={{boxShadow:'none'}} >\n      <Tabs value={value} onChange={handleChange} className=\"tabs flex space-between\">\n        <Tab label=\"זימון תור\" style={style}/>\n        <Tab label=\"התורים שלי\" style={style}/>\n        <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i  className=\"fas fa-tasks\"></i></h2>\n      </Tabs>\n    </AppBar>\n  );\n}\n\nexport const TabsApp = withRouter(_TabsApp)","import React from 'react';\nimport { connect } from 'react-redux';\nimport {MuiThemeProvider,createMuiTheme,makeStyles} from \"@material-ui/core/styles\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport './StepperApp.scss'\n\n// StepperApp style\nconst theme = createMuiTheme({\n// add margin left from the circules\n  palette: {\n    primary: {\n      main: '#273650'\n    }\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  }\n}));\n\n\nexport function _StepperApp(props) {\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n\n  <MuiThemeProvider theme={theme}>\n      <Stepper activeStep={props.activeStep}>\n        {props.steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step  key={label} {...stepProps}>\n              <StepLabel  {...labelProps}>{label}  </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    steps: state.StepperReducer.steps,\n    activeStep:state.StepperReducer.step\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const StepperApp = connect(mapStateProps, mapDispatchToProps)(_StepperApp)","import React, { useState, useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { TabsApp } from '../TabsApp/TabsApp.jsx';\nimport { StepperApp } from '../StepperApp/StepperApp.jsx';\nimport StoreService from '../../services/StoreService';\nimport './AppHeader.scss';\n\n\nfunction _AppHeader(props) {\n\n    const location = useLocation()\n\n    const [headerConstrains, setHeaderConstrains] = useState(false)\n\n    useEffect(() => {\n        let initWithFalse = { isHeader: false, noHeaderMargin: false, isStepper: false, isTabs: false }\n        switch (location.pathname) {\n            case '/':\n                setHeaderConstrains(false)\n                break;\n            case '/calendarAdmin/':\n                setHeaderConstrains(false)\n                break;\n            case '/advertise':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/signupOrLogin':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/signup':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/login':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/treatments':\n                setHeaderConstrains({ ...initWithFalse, isStepper: true, isTabs: true })\n                break;\n            case '/calendar':\n                setHeaderConstrains({ ...initWithFalse, isStepper: true, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/form':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, isStepper: true })\n                break;\n            case '/cancelAppointment':\n                setHeaderConstrains({ ...initWithFalse, isTabs: true })\n                break;\n            case '/editUser':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            default:\n                setHeaderConstrains(false)\n        }\n    }, [location.pathname]);\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n            {\n                (headerConstrains) &&\n                <div className={`${(headerConstrains.noHeaderMargin) ? 'app-header-no-margin' : 'app-header'}`}>\n                    {\n                        (headerConstrains.isHeader) ?\n                            <header className=\"flex upper-header align-center\">\n                                <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></h2>\n                            </header>\n                            :\n                            ''\n                    }\n                    {\n                        (headerConstrains.isTabs) ?\n                            <TabsApp />\n                            :\n                            ''\n                    }\n                    {\n                        (headerConstrains.isStepper) ?\n                            <StepperApp />\n                            :\n                            ''\n                    }\n                </div>\n            }\n        </>\n    )\n}\n\nexport const AppHeader = withRouter(_AppHeader)\n\n\n\n","\n\nexport default {\n  englishToHebrew,\n  getIsosDate,\n  getTimeSlotsForPreview,\n  getDailySlotsForPreview,\n  changeTimeForDisplay,\n  idGen,\n  calculateEndTime,\n  arrayToString,\n  convertDateToIsraelisDisplay,\n  convertDateTo4DigitsDisplay,\n  getDayByHebrewWord,\n  getEventReadyForDisplay,\n  convertNumberToWords,\n  validateEmail,\n  getWeekIsosDatesForCalendar,\n  checkIfTsInRange,\n  getMonthByIdx,\n  timeToDisplay,\n  getSplitedEventDesc,\n  convertDurationToApiStr,\n  calculateDuration,\n  dateToDisplay,\n  getArray\n}\n\nvar gUtcDiff = 2\n\n// for half an hour slots = 2. 15 min slots will be 4 etc...\nvar gDividedHour = 2\n\nfunction englishToHebrew(word) {\n  let convertedWord\n  switch (word) {\n    case ('minutes'):\n      convertedWord = 'דק׳';\n      break;\n    case ('build'):\n      convertedWord = 'בנייה';\n      break;\n    case ('filling'):\n      convertedWord = 'מילוי';\n      break;\n    case ('medical-manicure'):\n      convertedWord = 'מניקור רפואי';\n      break;\n    case ('gel'):\n      convertedWord = 'לק ג׳ל';\n      break;\n    case ('medical-pedicure'):\n      convertedWord = 'פדיקור';\n      break;\n    case ('medical-pedicure-gel'):\n      convertedWord = 'פדיקור רפואי עם לק ג׳ל';\n      break;\n    case ('half-pedicure'):\n      convertedWord = 'חצי פדיקור';\n      break;\n    case ('half-pedicure-gel'):\n      convertedWord = 'חצי פדיקור עם ג׳ל';\n      break;\n    case ('eyebrows-mustache'):\n      convertedWord = 'גבות ושפם';\n      break;\n    default:\n      convertedWord = \"ברירת מחדל\"\n  }\n\n  return ' ' + convertedWord\n}\n//get a date and how many days before/after and returns only the date part by isos convention\nfunction getIsosDate(daysAfterOrBefore, date = new Date(), recurrenceAvailbilityCheck = false) {\n  let dateCopy = new Date(date.getTime())\n  dateCopy.setDate(dateCopy.getDate() + daysAfterOrBefore)\n  if ((dateCopy.getDay() === 6) && (!recurrenceAvailbilityCheck)) {\n    return ''\n  }\n  dateCopy = dateCopy.toISOString().slice(0, 10)\n  return dateCopy\n}\n\nfunction getWeekIsosDatesForCalendar(dayByNum, date) {\n  let weeklyDates = []\n  if (date.getDay() === 6) {\n    date = new Date(date.getTime() + (1000 * 60 * 60 * 24));\n    dayByNum = 1\n  }\n  switch (dayByNum) {\n    case 1:\n      for (var i = 0; i < 6; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 2:\n      for (var i = -1; i < 5; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 3:\n      for (var i = -2; i < 4; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 4:\n      for (var i = -3; i < 3; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 5:\n      for (var i = -4; i < 2; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 6:\n      for (var i = -5; i < 1; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    default:\n      console.log('Err with getting week dates')\n  }\n  return weeklyDates.map(isosDate => {\n    return { start: `${isosDate}T06:00:00Z`, end: `${isosDate}T18:00:00Z` }\n  })\n}\n\nfunction convertDurationToApiStr(duration) {\n  return duration / 60 + 'H'\n}\n\nfunction timeToDisplay(time) {\n  if (time.slice(0, 1) === '0') { time = time.slice(1, 5) }\n  return time\n}\n\nfunction dateToDisplay(date) {\n  if (date.slice(0, 1) === '0') { date = date.slice(1, 10) }\n  return date\n}\n\nfunction getDailySlotsForPreview(slotsRanges, duration) {\n  const timeslotsByConstraints = slotsRanges.map(sr => getTimeSlotsForPreview(sr, duration))\n  const mergedTimeSlotsToRender = [].concat.apply([], timeslotsByConstraints);\n  return mergedTimeSlotsToRender\n}\n\nfunction getTimeSlotsForPreview(timeslot, duration) {\n  let slotsToRender = [];\n  let year = timeslot.start.slice(0, 4)\n  let month = timeslot.start.slice(5, 7)\n  let day = timeslot.start.slice(8, 10)\n  let hours = +timeslot.start.slice(11, 13)\n  let min = timeslot.start.slice(14, 16)\n  const startTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  year = timeslot.end.slice(0, 4)\n  month = timeslot.end.slice(5, 7)\n  day = timeslot.end.slice(8, 10)\n  hours = +timeslot.end.slice(11, 13)\n  min = timeslot.end.slice(14, 16)\n  const endTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  let nextTimeSlot = startTime//maby need copy\n  hours = nextTimeSlot.getHours()\n  min = nextTimeSlot.getMinutes()\n  let slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n  if ((nextTimeSlot.getTime() + (duration * 60 * 1000)) <= endTime.getTime()) { slotsToRender.push(slotToRender) }\n  while ((nextTimeSlot.getTime() + (duration * 60 * 1000)) < endTime.getTime()) {\n    nextTimeSlot = new Date(nextTimeSlot.getTime() + ((60 * 60 * 1000) / gDividedHour));//adding half an hour\n    hours = nextTimeSlot.getHours()\n    min = nextTimeSlot.getMinutes()\n    slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n    slotsToRender.push(slotToRender)\n  }\n  return slotsToRender\n}\n\n//get an hour and returns full isos date (including the time) reducing the diff from the hours\nfunction changeTimeForDisplay(time, diff) {\n  let hours = +time.slice(0, 2) - diff\n  let minutes = time.slice(3, 5)\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + (minutes)\n}\n\n\nfunction calculateEndTime(time, duration) {\n  let hours = +time.slice(0, 2)\n  let minutes = time.slice(3, 5)\n\n  if (duration % 60 === 30) {\n    if (+minutes === 30) {\n      hours += Math.floor(duration / 60) + 1\n      minutes = '00'\n    }\n    else {\n      hours += Math.floor(duration / 60)\n      minutes = '30'\n    }\n  }\n  else {\n    hours += (duration / 60)\n  }\n\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + minutes\n}\n\nfunction checkDigitsAndAddZerosIfNeeded(digit) {\n  digit = (digit < 10) ? '0' + digit : digit\n  return digit\n}\n\nfunction calculateDuration(start, end) {\n  let startHours = +start.slice(0, 2) * 60\n  let startMinutes = +start.slice(3, 5)\n  let endHours = +end.slice(0, 2) * 60\n  let endMinutes = +end.slice(3, 5)\n  const duration = (endHours - startHours + endMinutes - startMinutes)\n  return duration\n}\n\n\nfunction idGen() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\n\nfunction arrayToString(pickedTreatments) {\n  let treatmentsType = ''\n  pickedTreatments.forEach((tr, idx) => {\n    if (pickedTreatments.length !== idx + 1) treatmentsType += tr.name + ', '\n    else treatmentsType += tr.name\n  })\n  return treatmentsType\n}\n\nfunction convertDateToIsraelisDisplay(date) {\n  const dateParts = (date).split('-')\n  return `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`\n}\n\nfunction convertDateTo4DigitsDisplay(date) {\n  const dateParts = (date).split('-')\n  if (dateParts[2].slice(0, 1) === '0') { return `${dateParts[2].slice(1, 2)}.${dateParts[1]}` }\n  else { return `${dateParts[2].slice(0, 2)}.${dateParts[1]}` }\n}\n\nfunction getDayByHebrewWord(idx) {\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  return days[idx]\n}\n\n\nfunction getEventReadyForDisplay(filteredEvents) {\n  return filteredEvents.map(event => {\n    return {\n      id: event._id,\n      treatments: event.treatments,\n      startTime: changeTimeForDisplay(event.startTime, gUtcDiff * -1),\n      endTime: changeTimeForDisplay(event.endTime, gUtcDiff * -1),\n      date: convertDateToIsraelisDisplay(event.date),\n      email: event.email,\n      name: event.name,\n    }\n  })\n}\n//returns an object with boolean if time slot match the range and the amount of time slots\nfunction checkIfTsInRange(tsToCompare, startTime, endTime, duration) {\n\n  //adding 3 hours to match the time differnce\n  const tsToCompareWithAddedHours = changeTimeForDisplay(tsToCompare, gUtcDiff * -1)\n  const timeRangeBySlots = getDailySlotsForPreview([{ start: startTime, end: endTime }], duration)\n  if (timeRangeBySlots.length) {\n    return { occupied: timeRangeBySlots.includes(tsToCompareWithAddedHours), rowspan: timeRangeBySlots.length }\n  }\n  else {\n    if (startTime.slice(11, 16) === tsToCompare) {\n      return { occupied: true, rowspan: 1 }\n    } else {\n      return { occupied: false, rowspan: 1 }\n    }\n  }\n}\n\nfunction convertNumberToWords(idx) {\n  const words = ['אחד', 'שני', 'שלושה', 'ארבעה', 'חמשה', 'ששה', 'שבעה', 'שמונה', 'תשעה', 'עשרה', 'אחד עשר', 'שתיים עשר', 'שלושה עשר', 'ארבע עשר', 'חמישה עשר', 'ששה עשר']\n  return words[idx - 1]\n}\n\nfunction getMonthByIdx(idx) {\n  const months = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\n  return months[idx - 1]\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction getSplitedEventDesc(desc) {\n  let splitedDesc = desc.split(' - ')\n  return { name: splitedDesc[0], treatment: splitedDesc[1] }\n}\n\nfunction getArray(num, priceOrDuration) {\n  let arr = []\n  if (priceOrDuration) arr[0] = priceOrDuration\n  for (var i = 0; i < num; i++) {\n    arr.push(i)\n  }\n  return arr\n}","import HttpService from './HttpService'\nimport UtilsService from \"../services/UtilsService\";\n\nexport default {\n    getTreatments,\n    getById,\n    remove,\n    update,\n    updateTreatments,\n    getMarkedTreatmentsStr\n}\n\n// update only the store not mongo DB\nfunction updateTreatments(treatments, updatedTreatment){\n    const idx = treatments.findIndex(tr => tr._id === updatedTreatment._id)\n    treatments[idx] = updatedTreatment\nreturn treatments\n}\n\nfunction getMarkedTreatmentsStr(treatments) {\n    treatments = (treatments.filter(tr => tr.marked))\n    return UtilsService.arrayToString(treatments)\n}\n\n// comunicate with backend\nfunction getTreatments() {\n    return HttpService.get('treatment')\n}\n\nfunction getById(treatmentId) {\n    return HttpService.get(`treatment/${treatmentId}`)\n}\nfunction remove(treatmentId) {\n    return HttpService.delete(`treatment/${treatmentId}`)\n}\n\nfunction update(treatment) {\n    return HttpService.put(`treatment/${treatment._id}`, treatment)\n}","import TreatmentService from '../services/TreatmentService';\n\n\nexport function loadTreatments() {\n  \n  return async dispatch => {\n    try {\n      const treatments = await TreatmentService.getTreatments();\n      dispatch(setTreatments(treatments));\n   \n    } catch (err) {\n      console.log('TreatmentActions: err in loadTreatments', err);\n    };\n  }\n}\n\nexport function setTreatments(treatments) {\n  return {\n    type: 'SET_TREATMENTS',\n    treatments\n  };\n}\n\nexport function setTreatment(treatment) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_setTreatment(treatment)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\nexport function _setTreatment(treatment) {\n  return {\n    type: 'SET_TREATMENT',\n    treatment\n  };\n}\n\n\nexport function updateTreatmentsCount(count) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_updateTreatmentsCount(count)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\n\nexport function _updateTreatmentsCount(count) {\n  return {\n    type: 'UPDATE_PICKED_TREATMENTS_COUNT',\n    count\n  };\n}\n\n\n\nexport function removeTreatment(treatmentId) {\n  return async dispatch => {\n    try {\n      await TreatmentService.remove(treatmentId);\n      dispatch(_removeTreatment(treatmentId));\n    } catch (err) {\n      console.log('TreatmentActions: err in removeTreatment', err);\n    }\n  };\n}\n\nfunction _removeTreatment(treatmentId) {\n  return {\n    type: 'REMOVE_TREATMENT',\n    treatmentId\n  };\n}\n\nexport function updateTreatments(treatments) {\n  console.log(treatments)\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateTreatments(treatments));\n    } catch (err) {\n      console.log('TreatmentActions: err in updateTreatments', err);\n    }\n  };\n}\n\nexport function _updateTreatments(treatments) {\n  return {\n    type: 'UPDATE_TREATMENTS',\n    treatments\n  };\n}\n\n\n\nexport function updateDuration(duration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateDuration(duration));\n    } catch (err) {\n      console.log('TreatmentActions: err in addDuration', err);\n    }\n  };\n}\n\nexport function _updateDuration(duration) {\n    return {\n      type: 'UPDATE_DURATION',\n      duration\n    };\n}\n\nexport function initDuration() {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_initDuration());\n    } catch (err) {\n      console.log('ERR WITH initDuration', err);\n    }\n  };\n}\n\nfunction _initDuration() {\n  return {\n    type: 'INIT_DURATION'\n  };\n}\n\n\nexport function updateAvailbleDuration(availableDuration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateAvailbleDuration(availableDuration));\n    } catch (err) {\n      console.log('ERR WITH updateAvailbleDuration', err);\n    }\n  };\n}\n\nfunction _updateAvailbleDuration(availableDuration) {\n  return {\n    type: 'UPDATE_AVAILBLE_DURATION',\n    availableDuration\n  };\n}\n","import UserService from '../services/UserService';\nimport StorageService from '../services/StorageService';\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      const users = await UserService.getUsers();\n      dispatch(setUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users\n  };\n}\n\nexport function updateUsers(users) {\n  return async dispatch => {\n    try {\n      dispatch(_updateUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function _updateUsers(users) {\n  return {\n    type: 'UPDATE_USERS',\n    users\n  };\n}\n\n\nexport function updateLoggedInUser(loggedInUser) {\n  return async dispatch => {\n    try {\n      dispatch(_updateLoggedInUser(loggedInUser));\n    } catch (err) {\n      console.log('userActions: err in updateUser', err);\n    };\n  }\n}\n\nexport function _updateLoggedInUser(loggedInUser) {\n  return {\n    type: 'UPDATE_LOGEDIN_USER',\n    loggedInUser\n  };\n}\n\n\nexport function setUserToSchedule() {\n  return dispatch => {\n    const userToSchedule = StorageService.loadFromStorage('tori-user');\n    dispatch(_setUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _setUserToSchedule(userToSchedule) {\n  return {\n    type: 'SET_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\n\nexport function updateUserToSchedule(userToSchedule) {\n  return dispatch => {\n    dispatch(_updateUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _updateUserToSchedule(userToSchedule) {\n  return {\n    type: 'UPDATE_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\nexport function updateIsAdShown(isAdShown) {\n  return dispatch => {\n    dispatch(_updateIsAdShown(isAdShown));\n  }\n}\n\nexport function _updateIsAdShown(isAdShown) {\n  return {\n    type: 'UPDATE_IS_AD_SHOWN',\n    isAdShown\n  };\n}\n\n\n\nexport function updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return dispatch => {\n    dispatch(_updateUserPhoneInContactSignup(userPhoneInContactSignup));\n  }\n}\n\nexport function _updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return {\n    type: 'UPDATE_NUMBER_IN_CONTACT_SIGNUP',\n    userPhoneInContactSignup\n  };\n}\n\n","import React, { useState } from 'react';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset,createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport './SwitchApp.scss'\n\nconst theme = createMuiTheme({\n  direction: 'rtl',\n});\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nexport function SwitchApp(props) {\n\n  const [checked, setChecked] = useState(props.marked);\n\n  const handleChange = (event) => {\n    if (!checked) {\n      props.updateDuration(true)\n      props.updatePickedTreatments(true)\n    }\n    else {\n      // props.setIsActive(false)\n      props.updateDuration(false)\n      props.updatePickedTreatments(false)\n    }\n    setChecked(event.target.checked)\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <Switch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checked\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateDuration,updateTreatments,updateTreatmentsCount} from '../../actions/treatmentActions';\nimport { SwitchApp } from '../SwitchApp/SwitchApp';\nimport UtilService from '../../services/UtilsService'\nimport TreatmentService from '../../services/TreatmentService';\nimport './TreatmentPreview.scss';\n\nclass _TreatmentPreview extends Component {\n    state = {\n        updatedTreatment: this.props.treatment,\n        treatmentsToUpdate: this.props.treatments\n    }\n\n    updateDuration = (isMarked) => {\n        if (isMarked) {\n            this.props.updateDuration(+this.props.treatment.duration)\n        } else {\n            this.props.updateDuration((+this.props.treatment.duration) * -1)\n        }\n    }\n\n    // mark the treatment\n   updatePickedTreatments = (isMarked) => {\n            this.setState({updatedTreatment:{...this.state.updatedTreatment,marked:isMarked}}, ()=>{\n                if(isMarked){\n                    this.props.updateTreatmentsCount(1)\n                }\n                else{\n                  this.props.updateTreatmentsCount(-1)\n                }\n            const treatments = TreatmentService.updateTreatments(this.state.treatmentsToUpdate,this.state.updatedTreatment)\n            this.setState({treatmentsToUpdate:treatments})\n        })\n    }\n\n    render() {\n        const {updatedTreatment} = this.state\n        return (\n            <div className={`treatment-preview ${(updatedTreatment.marked)?'marked-by-switch':\"\"}`}>\n                {updatedTreatment &&\n                    <div className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {updatedTreatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + updatedTreatment.price}</div>\n                        <div className=\"align-col\">{updatedTreatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                        <SwitchApp className=\"align-col\" marked={updatedTreatment.marked} updateDuration={this.updateDuration} updatePickedTreatments={this.updatePickedTreatments} />\n                    </div>\n                }\n            </div>\n        )\n      }\n}\n    \nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    updateDuration,\n    updateTreatments,\n    updateTreatmentsCount\n}\n\nexport const TreatmentPreview = connect(mapStateProps, mapDispatchToProps)(_TreatmentPreview)","import React from 'react';\nimport { TreatmentPreview } from '../TreatmentPreview/TreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentList.scss';\n\nexport function TreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <TreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation,withRouter } from 'react-router-dom';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentTitle.scss';\n\n\nfunction _TreatmentTitle(props) {\n    const location = useLocation()\n    let isCalendarAdmin=( location.pathname === '/calendarAdmin/treatments')\n    let isDurationValid=(props.duration>props.availableDuration)\n    return (\n        <div className={`treatment-title ${isCalendarAdmin?'treatment-title-in-modal':''} \n         ${isCalendarAdmin&&isDurationValid?'pink-title-treatments-modal':''}`}>\n                {\n                    isCalendarAdmin?\n                    <div className=\"back-arrow\" onClick={()=> props.history.push('/calendarAdmin/contacts')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    :\n                    ''\n                }\n            {\n                <div className=\"treatment-title-text\">{\n               (isDurationValid&&isCalendarAdmin) ?\n                  'משך זמן הטיפולים ארוך מידי ! '\n                :\n                (props.pickedTreatmentsCount) ?\n\n                (props.pickedTreatmentsCount===1)?\n                `נבחר טיפול  ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)}     `\n                :\n                   `נבחרו ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)} טיפולים `\n\n                    :\n                    (props.isClicked)?\n                     <span className=\"red-title\">לא נבחרו טיפולים!</span>\n                    :\n                    isCalendarAdmin\n                    ?\n                    \"בחרו סוג טיפול אחד או יותר\"\n                    : \n                    \"  בחרו  סוג  טיפול  אחד  או  יותר  ולחצו  'הבא'\"\n                    }\n                </div>\n                }\n                 <div className=\"modal-header-cls-btn-space\"></div>\n        </div>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentTitle = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentTitle))","\n\nexport function updateActiveStep(step) {\n    return async dispatch => {\n      try {\n        await \n        dispatch(_updateActiveStep(step));\n      } catch (err) {\n        console.log('StepperActions: err in updateActiveStep', err);\n      }\n    };\n  }\n  \n  export function _updateActiveStep(step) {\n      return {\n        type: 'UPDATE_ACTIVE_STEP',\n        step\n        }\n  };\n\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport './NavBtns.scss';\nfunction _NavBtns(props) {\n\n    const location = useLocation()\n    const [activeBtn, setActiveBtn] = useState('');\n\n    useEffect(() => { toggleBtnsStyle() });\n\n    function toggleBtnsStyle() {\n        if ((props.activeStep === 2 && !props.treatment) || (props.duration)) {\n            setActiveBtn('active-btn')\n        } else { setActiveBtn('') }\n    }\n\n    function isNextBtnDisable() {\n        if (!props.duration) return true\n        if (props.activeStep === 2 && !props.treatment) return true\n    }\n\n    function changeStep(diff) {\n\n        if (props.activeStep + diff === 3) {\n            props.setAppointment()\n            props.handleOpen()\n        }\n        props.updateActiveStep(props.activeStep + diff)\n        if (!props.activeStep && diff > 0) {\n            props.history.push('/calendar')\n        }\n        else if (props.activeStep === 1 && diff > 0) props.history.push('/form')\n        else if (props.activeStep === 2 && diff < 0) props.history.push('/calendar')\n        else if (props.activeStep === 1 && diff < 0) props.history.push('/treatments')\n    }\n\n    function noPickedItemTitle(){\n        if (!props.duration){\n            props.updateTitleProp()\n        }\n    }\n\n    return (\n\n        <div className={`nav-btns-container`}>\n            {\n                (location.pathname === '/treatments') ?\n                    <div className=\"nav-btn-wrapper-next\" onClick={noPickedItemTitle}>\n                            <button className=\"nav-btn-next\" onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                הבא\n                             </button>\n                    </div>\n                    :\n                    (location.pathname !== '/form') ?\n                        <div className=\"nav-btn-wrapper\">\n                            <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                חזור\n                </button>\n                        </div>\n                        :\n                        <div className=\"flex btns-wrraper\">\n                            <div className=\"nav-btn-wrapper\">\n                                <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                    חזור\n                    </button>\n                            </div>\n                            <div className={`nav-btn-wrapper`}>\n                                <button className={`nav-btn ${activeBtn}`} onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                    אשר\n                </button>\n                            </div>\n                        </div>\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        steps: state.StepperReducer.steps,\n        activeStep: state.StepperReducer.step,\n        duration: state.TreatmentReducer.duration,\n        treatment: state.TreatmentReducer.treatment,\n\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep\n}\n\nexport const NavBtns = withRouter(connect(mapStateProps, mapDispatchToProps)(_NavBtns))\n","export default {\n    getMotionStyle\n}\n\n// textAlign: 'center'\n\nfunction getMotionStyle(style) {\n    // style motion div\n    const pageVariants = {\n        in: {\n            opacity: 1,\n            x: \"0\"\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n    const pageVariantsWithTextAlign = {\n        in: {\n            opacity: 1,\n            x: \"0\",\n            textAlign: 'center'\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n\n    const pageTransition = {\n        duration: 0.5,\n        type: \"spring\",\n        stiffness: 50\n    }\n    if (style === 'pageVariants') return pageVariants\n    else if(style === 'pageTransition') return pageTransition\n    else return pageVariantsWithTextAlign\n}","import React from 'react';\nimport Loader from 'react-loader-spinner'\nexport class LoaderApp extends React.Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Oval\"\n        color=\"#273650\"\n        height={75}\n        width={75}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { setUserToSchedule, updateUserToSchedule } from '../../actions/userAction.js';\nimport { TreatmentList } from '../../cmps/TreatmentList/TreatmentList';\nimport { TreatmentTitle } from '../../cmps/TreatmentTitle/TreatmentTitle';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './TreatmentApp.scss';\nimport '../../styles/style.scss';\n\nexport function _TreatmentApp(props) {\n    const location = useLocation()\n    const { loadTreatments, treatments, setUserToSchedule, userToSchedule } = props\n    useEffect(() => {\n        if (!treatments) loadTreatments()\n    }, [loadTreatments, treatments]);\n\n    useEffect(() => {\n        (async () => {\n        if (!userToSchedule && !props.loggedInUser.isAdmin) setUserToSchedule()\n    })()\n    }, [setUserToSchedule, userToSchedule]);\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    function updateTitleProp() {\n        setIsClicked(true)\n    }\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n            {\n                (location.pathname !== '/calendarAdmin/treatments')\n                    ?\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </motion.div>\n                    :\n                    <div>\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </div>\n            }\n            {\n                (location.pathname !== '/calendarAdmin/treatments') &&\n                <NavBtns updateTitleProp={updateTitleProp} />\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        userToSchedule: state.UserReducer.userToSchedule,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments,\n    setUserToSchedule,\n    updateUserToSchedule\n}\n\nexport const TreatmentApp = connect(mapStateProps, mapDispatchToProps)(_TreatmentApp)\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setTreatment } from '../../actions/treatmentActions';\nimport UtilService from '../../services/UtilsService'\nimport './EditTreatmentPreview.scss';\n\nclass _EditTreatmentPreview extends Component {\n    state = {\n        treatment: this.props.treatment,\n    }\n\n    pickedTreatment = () => {\n        this.props.setTreatment(this.props.treatment)\n        this.props.history.push('/treatmentToEdit')\n    }\n\n    render() {\n        const { treatment } = this.state\n        return (\n            <div className={`treatment-preview ${(treatment.marked) ? 'marked-by-switch' : \"\"}`}>\n                {treatment &&\n                    <div onClick={this.pickedTreatment} className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {treatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + treatment.price}</div>\n                        <div className=\"align-col\">{treatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment\n}\n\nexport const EditTreatmentPreview = withRouter(connect(mapStateProps, mapDispatchToProps)(_EditTreatmentPreview))","import React from 'react';\nimport { EditTreatmentPreview } from '../EditTreatmentPreview/EditTreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './EditTreatmentList.scss';\n\nexport function EditTreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <EditTreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { EditTreatmentList } from '../../cmps/EditTreatmentList/EditTreatmentList';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './EditTreatments.scss';\nimport '../../styles/style.scss';\n\nexport function _EditTreatments(props) {\n    const { loadTreatments, treatments} = props\n    useEffect(() => {\n        if (!treatments) loadTreatments()\n    }, [loadTreatments, treatments]);\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <EditTreatmentList treatments={treatments} />\n                    </motion.div>\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments\n}\n\nexport const EditTreatments = connect(mapStateProps, mapDispatchToProps)(_EditTreatments)\n\n\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport UtilsService from \"../../services/UtilsService\";\nimport './TreatmentToEdit.scss';\n\nfunction _TreatmentToEdit(props) {\n    const [arr, setArr] = React.useState(UtilsService.getArray(1003, props.treatment.price))\n    const [arr2, setArr2] = React.useState(UtilsService.getArray(10, props.treatment.duration))\n    const [credentials, setCredentials] = React.useState({ name:props.treatment.name , min: '', amount: '' })\n    const [minSelected, setMinSelected] = React.useState(0)\n   \n  \n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        console.log(field,'field');\n        console.log(value,'value');\n        switch (field) {\n            case 'min':\n                    setCredentials({ ...credentials, min: (value === 0) ? arr2[0] : (value) * 30})\n                    setMinSelected(value)\n                break;\n            case 'amount':\n                setCredentials({ ...credentials, amount: value})\n                break;\n            case 'name':\n                setCredentials({ ...credentials, name: value})\n                break;\n            default:\n                console.log('Err updating name/amount/min')\n        }\n    }\n\n    function printThat(){\n        console.log(credentials);\n    }\n\n    return (\n        <div>\n            <div>\n                <div>סוג טיפול</div>\n                <input name=\"name\" value={credentials.name} onChange={handleChange} />\n            </div>\n            <div>\n                <div>משך זמן הטיפול</div>\n                <select name=\"min\" onChange={handleChange}>\n                    {\n                        arr2.map((ar, index) => {\n                            let id = UtilsService.idGen()\n                            return (\n                                <option name=\"min\" key={id} selected={(minSelected===index)?true :false} value={ (index)} >{(index === 0) ? arr2[0] : (index) * 30} דקות</option>\n                            )\n                        })\n                    }\n                </select>\n            </div>\n\n            <div>\n                <div>מחיר הטיפול</div>\n                <select name=\"amount\" size=\"1\" onChange={handleChange}>\n                    {\n                        arr.map((ar, index) => {\n                            let id = UtilsService.idGen()\n                            return (\n                                <option name=\"amount\" key={id} value={(index === 0) ? arr[0] : index}  >{(index === 0) ? arr[0] : index} ₪</option>\n                            )\n                        })\n                    }\n                </select>\n            </div>\n            <button onClick={printThat}>press</button>\n        </div>\n    )\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentToEdit = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentToEdit))","import './DailySlots.scss';\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {setTreatment} from '../../actions/treatmentActions';\nimport {updateActiveStep} from '../../actions/stepperActions';\nimport UtilsService from '../../services/UtilsService';\n\n function _DailySlots(props) {\n\n    function onAppointmentChoice(ts, date, diff) {\n        props.updateActiveStep(props.activeStep + diff)\n        let treatment = {\n            time: ts,\n            date\n        }\n        props.setTreatment(treatment)\n        props.history.push('/form')\n    }\n\n    return (\n        <div id='idForScrollBar' className=\"daily-slots flex column align-center space-between\">\n            {props.timeSlots.map(ts => <button onClick={() => onAppointmentChoice(ts, props.date, 1)}\n            className=\"timeslot-btn\" key={UtilsService.idGen()}>{UtilsService.timeToDisplay(ts)}</button>)}\n        </div>\n    )\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment,\n        activeStep: state.StepperReducer.step\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment,\n    updateActiveStep\n}\n\nexport const DailySlots = withRouter(connect(mapStateProps, mapDispatchToProps)(_DailySlots))\n","import React, {useEffect} from \"react\";\nimport { DailySlots } from '../DailySlots/DailySlots';\nimport UtilsService from '../../services/UtilsService';\nimport './TimeslotList.scss';\n\nexport function TimeslotList(props) {\n\n    useEffect(() => {\n        }, []);\n\n    return (\n        <div className=\"timeslot-list flex\">\n            {\n                Object.keys(props.timeSlots).map(day => {\n                    const isDateFullyBooked = (typeof props.timeSlots[day] == 'string') ? true : false\n                    const date = isDateFullyBooked ? props.timeSlots[day].slice(0, 10) : (props.timeSlots[day])[0].start.slice(0, 10)\n                    // running on each day\n                    const slotsForPreview = isDateFullyBooked ? [] : UtilsService.getDailySlotsForPreview(props.timeSlots[day], props.duration)\n                    return (\n                        <div key={UtilsService.idGen()}>\n                            <div className=\"date-container\">\n                                {\n                                isDateFullyBooked?     \n                                <div className=\"fully-booked\">\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                    <br/>\n                                    <div className=\"fully-booked-title\">אין תור פנוי</div>\n                                </div>\n                                :\n                                <div>\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                </div>\n                                }\n                            </div>\n                            <DailySlots timeSlots={slotsForPreview} date={date} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import HttpService from './HttpService'\n\nexport default {\n    saveConfirmedEvent,\n    getMongoEventByEventCalendarId,\n    getEventByPhone,\n    removeEventFromDB\n}\n\n// MONGO DB - GOES THREW BACKEND\n\nfunction saveConfirmedEvent(event){\n    return HttpService.post('event',event)\n}\n\nfunction getEventByPhone (phone) {\n    return HttpService.get(`event/${phone}`)\n}\n\n\nfunction getMongoEventByEventCalendarId(evId) {\n    return HttpService.get(`event/${evId}`)\n}\n\nfunction removeEventFromDB (_id) {\n    return HttpService.delete(`event/${_id}`)\n}","import HttpService from './HttpService'\n\nexport default {\n    sendEmail\n}\n\nfunction sendEmail(name, date, email='', isConfirmation, phone='', duration='', time='', treatments='') {\n    const businessName='נייל סלון'\n    let bodyText = ''\n    if (isConfirmation) {\n        bodyText =`        שלום ${name} ,\n\n        שמחים שבחרת ${businessName} !\n        נקבע לך תור ל${treatments}  \n        בתאריך ${date}\n        בשעה ${time}\n        משך זמן הטיפול מוערך כ- ${duration} דקות\n        הטלפון שהתקבל ליצירת קשר הוא - ${phone}\n        \n        תודה`\n    } else {\n        bodyText = `\n        שלום,\n         ${name}\n        התור שנקבע לתאריך ${date} בוטל \n        תודה על העדכון `\n    }\n    let emailObj = {\n        email,\n        bodyText\n    }\n    return HttpService.post('email',emailObj)\n}","import HttpService from './HttpService'\nimport EventService from './EventService'\nimport UtilsService from \"../services/UtilsService\";\nimport EmailService from '../services/EmailService';\n\nexport default {\n    getCalendar,\n    getAvailbleDailySlots,\n    addEventToCalendar,\n    addRecurrenceToCalendar,\n    removeEventFromCalendar,\n    setAppointment,\n    getEventsFromCalendar,\n    buildWeeklyModel,\n    getAvailbleDuration,\n    getHoursToBlock,\n    blockSlotRange,\n    getDatesWeeklyRange\n}\n\nvar gUtcDiff = 2\n\n// get the first calendar connected to this TOKEN (usually only 1 should be there)\nfunction getCalendar() {\n    return HttpService.get('calendar')\n}\n\n\nasync function getEventsFromCalendar(timeRange) {\n    return await HttpService.get(`calendar/${timeRange.start}/${timeRange.end}`)\n}\n\nfunction addEventToCalendar(startTime, endTime, eventName, creatorName = 'block', creatorEmail) {\n    const event = { eventName, creatorName, creatorEmail, startTime, endTime }\n    return HttpService.post('calendar', event)\n}\n\n// adding Recurrence event/block\nasync function addRecurrenceToCalendar(startTime, endTime, eventName, creatorName = 'block', recurrence) {\n    const event = { eventName, creatorName, startTime, endTime, recurrence}\n    return HttpService.post('calendar/recurrence', event)\n}\n\nasync function removeEventFromCalendar(eventId) {\n    const res = await HttpService.delete('calendar', { eventId })\n    console.log(res);\n    return res\n}\n\nasync function getAvailbleDailySlots(startTime, endtTime, duration) {\n    const dailySlots = { startTime, endtTime, duration }\n    return await HttpService.post('calendar/slots', dailySlots)\n}\n\n// MAKING SOME CALCULATIONS AND THAN CALLING OTHER FUNCTIONS TO ADD THE EVENT TO CALENDAR + MONGO DB\nasync function setAppointment(treatments, duration, phone, email, name, treatment) {\n    // in case of recurrence => (treatments, duration, phone, email, name, treatment, recurrence)\n    let time = UtilsService.changeTimeForDisplay(treatment.time, gUtcDiff)\n    let firstTime = time\n    const startTime = `${treatment.date}T${time}:00Z`\n    time = UtilsService.calculateEndTime(time, duration)\n    const endTime = `${treatment.date}T${time}:00Z`\n    let confirmedEvent\n    // if (!recurrence.isRecurrence){\n        confirmedEvent = await addEventToCalendar(startTime, endTime, treatments, name, 'ayal@gmail.com')\n    // } else {\n        // checking if recurrence is possible during all the chosen dates\n    //     const occupiedDates = await checkRecurrenceAvailbility (new Date(`${treatment.date}T02:00:00Z`), firstTime, time, duration, recurrence)\n    //     if (!occupiedDates.length) {\n    //     confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, treatments, name, recurrence)\n    //     } else {\n    //         console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n    //         return\n    //     }\n    // }\n    const event = {\n        name,\n        email,\n        phone,\n        eventId: confirmedEvent.id,\n        treatments,\n        duration,\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n    EmailService.sendEmail(name, treatment.date, email, true, phone, duration, treatment.time, treatments)\n    return confirmedEvent\n}\n\n// freq should get DAILY or WEEKLY depends - representing day or week diff. count - for how many times to repeat \nasync function checkRecurrenceAvailbility (fullDate, firstTime, time, duration, recurrence) {\n    let occupiedDates = []\n    let startTime\n    let endTime\n    let isosDate = UtilsService.getIsosDate(0, fullDate)\n    let freq = (recurrence.freq === 'DAILY')? 1 : 7\n    let recurrenceAvailbilityCheck = true\n    duration = UtilsService.convertDurationToApiStr(duration)\n\n    for (var i=0; i < recurrence.count; i++){\n    startTime = `${isosDate}T${firstTime}:00Z`\n    endTime = `${isosDate}T${time}:00Z`\n    const availbleSlots = await getAvailbleDailySlots(startTime, endTime, duration)\n    // if the time is already occupied the day isnt avaiblle\n    if (typeof availbleSlots === 'string'){\n        occupiedDates.push(isosDate)\n    }\n    isosDate = UtilsService.getIsosDate(i+freq, fullDate, recurrenceAvailbilityCheck) \n    }\n    console.log(occupiedDates)\n    return occupiedDates\n}\n\n\nasync function blockSlotRange(slotToBlock, name = 'block', recurrence) {\n    let time1 = UtilsService.changeTimeForDisplay(slotToBlock.start, gUtcDiff)\n    let time2 = UtilsService.changeTimeForDisplay(slotToBlock.end, gUtcDiff)\n    const startTime = `${slotToBlock.date}T${time1}:00Z`\n    const endTime = `${slotToBlock.date}T${time2}:00Z`\n    const duration = UtilsService.calculateDuration (time1, time2)\n\n    let confirmedEvent \n    if (!recurrence.isRecurrence) {\n        confirmedEvent = await addEventToCalendar(startTime, endTime, name)\n    } else {\n        // checking if recurrence is possible during all the chosen dates\n\n        const occupiedDates = await checkRecurrenceAvailbility (new Date(`${slotToBlock.date}T02:00:00Z`), time1, time2, duration, recurrence)\n        if (!occupiedDates.length) {\n             confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, name, 'block', recurrence)\n        } else {\n            console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n            return occupiedDates\n        }\n    }\n    console.log('adsasd', confirmedEvent)\n    const event = {\n        name,\n        email: '',\n        phone: '',\n        eventId: confirmedEvent.id,\n        treatments: '',\n        duration: '',\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10)\n    }\n    EventService.saveConfirmedEvent(event)\n    return confirmedEvent\n}\n\n\n/////////////////////calendarAdmin:\n\nfunction buildWeeklyModel(timeSlots, weeklyEvents) {\n    let tableCellsModel = []\n    for (var i = 0; i < timeSlots.length; i++) {\n        tableCellsModel.push([])\n    }\n    timeSlots.map((ts, tsIdx) => {\n        weeklyEvents.map((dailyEvents, dailyIdx) => {\n            if (dailyEvents.length) {\n                let isCellInUsed = false\n                return dailyEvents.map((ev, eventIdx) => {\n                    const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                    if (range.occupied) {\n                        isCellInUsed = true\n                        tableCellsModel[dailyIdx, tsIdx].push(false)\n                        // tableCellsModel[dailyIdx, tsIdx].push({name:ev.name,id:ev.id,start:ev.start,end:ev.end})\n                    }\n                    else if ((dailyEvents.length === eventIdx + 1) && (!isCellInUsed)) {\n                        tableCellsModel[dailyIdx, tsIdx].push(true)\n                    }\n                })\n            } else {\n                tableCellsModel[dailyIdx, tsIdx].push(true)\n            }\n        })\n    })\n    return tableCellsModel\n}\n\nfunction getAvailbleDuration(table, cellPos, slotSize = 30) {\n    let durationAvalability = 0\n    let i = cellPos.tsIdx\n    while (table[i][cellPos.dailyIdx] && i < table.length - 1) {\n        durationAvalability += slotSize\n        i++\n    }\n    if (!durationAvalability) return slotSize\n    return durationAvalability\n}\n\nfunction getHoursToBlock(timeSlots, ts, availableDuration, date, isDayFullyAvailable, slotSize = 30) {\n    let hoursToBlock = []\n    const tsIdx = timeSlots.findIndex(timeSlot => timeSlot === ts)\n    const availableSlots = availableDuration / slotSize\n    for (let i = tsIdx; i < (tsIdx + availableSlots); i++) {\n        hoursToBlock.push(\n            {\n                date,\n                start: ts,\n                end: timeSlots[i + 1],\n                isMarked: false\n            }\n        )\n    }\n    if (isDayFullyAvailable) {\n        hoursToBlock.unshift(\n            {\n                date,\n                start: timeSlots[0],\n                end: timeSlots[timeSlots.length - 1],\n                isMarked: false\n            }\n        )\n        if (ts === timeSlots[0]) hoursToBlock.pop()\n    }\n    return hoursToBlock\n}\n\nfunction getDatesWeeklyRange(date) {\n    const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n    const firstDay = UtilsService.convertDateToIsraelisDisplay(days[0].start.slice(0, 10))\n    const lastDay = UtilsService.convertDateToIsraelisDisplay(days[days.length - 1].start.slice(0, 10))\n    return { lastDay, firstDay }\n\n}","import CalendarService from '../services/CalendarService';\nimport UtilsService from '../services/UtilsService';\n\n// THUNK\nexport function loadCalendar() {\n  \n  return async dispatch => {\n    try {\n      const calendar = await CalendarService.getCalendar();\n      dispatch(setCalendar(calendar));\n    } catch (err) {\n      console.log('calendarActions: err in loadCalendars', err);\n  };\n}\n}\n\nexport function setCalendar(calendar) {\n    return {\n      type: 'SET_CALENDAR',\n      calendar\n     };\n}\n\n\nexport function loadTimeSlots(pickedDate = null){\n  let date\n      if (!pickedDate) {\n        date = new Date()\n        var firstDay = UtilsService.getIsosDate (0)\n        var secondDay = UtilsService.getIsosDate (1)\n        var thirdDay = UtilsService.getIsosDate (2)\n      } else {\n      // get day after and day before\n      // firstDay = UtilsService.getIsosDate (-1, pickedDate)\n      // secondDay = UtilsService.getIsosDate (0,  pickedDate)\n      // thirdDay = UtilsService.getIsosDate (1, pickedDate )\n      date = pickedDate\n        firstDay = UtilsService.getIsosDate (0, pickedDate)\n        secondDay = UtilsService.getIsosDate (1, pickedDate)\n        thirdDay = UtilsService.getIsosDate (2, pickedDate )\n      } \n      // check for saturday (unwroking day), if it was, sending the correction to skip that day\n        if (!firstDay) {\n          firstDay = UtilsService.getIsosDate (1, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!secondDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!thirdDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (1, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n         }     \n  return async dispatch => {\n    try {\n      const timeSlots = {\n        // 1H means the min block time range later to scheduale a meeting\n      firstDaySlots: await CalendarService.getAvailbleDailySlots(`${firstDay}T06:00:00`, `${firstDay}T18:00:00`, '1H'),\n      secondDaySlots: await CalendarService.getAvailbleDailySlots(`${secondDay}T06:00:00`, `${secondDay}T18:00:00`, '1H'),\n      thirdDaySlots : await CalendarService.getAvailbleDailySlots(`${thirdDay}T06:00:00`, `${thirdDay}T18:00:00`, '1H')\n      }\n      dispatch(setTimeSlots(timeSlots));\n    } catch (err) {\n      console.log('Err getting timeslots', err);\n    }\n  }\n}\n\nexport function setTimeSlots(timeSlots) {\n  return {\n    type: 'SET_TIMESLOTS',\n    timeSlots\n   };\n}\n\n\n\nexport function updateHoursToBlock(slotsRangeToBlock) {\n   return  dispatch => { dispatch(_updateHoursToBlock(slotsRangeToBlock))}\n}\n\n\n\nexport function _updateHoursToBlock(slotsRangeToBlock) {\n    return {\n      type: 'UPDATE_HOURS_TO_BLOCK',\n      slotsRangeToBlock\n     };\n}\n\n\nexport function updateSlotToBlock(slotToBlock) {\n   return  dispatch => { dispatch(_updateSlotToBlock(slotToBlock))}\n}\n\n\n\nexport function _updateSlotToBlock(slotToBlock) {\n    return {\n      type: 'UPDATE_SLOT_TO_BLOCK',\n      slotToBlock\n     };\n}\n\nexport function updateRecurrence(recurrence) {\n  return  dispatch => { dispatch(_updateRecurrence(recurrence))}\n}\n\nexport function _updateRecurrence(recurrence) {\n    return {\n      type: 'UPDATE_RECURRENCE',\n      recurrence\n     };\n}\n\nexport function  updateTableModel (tableModel) {\n  return  dispatch => { dispatch(_updateTableModel(tableModel))}\n}\n\nexport function  _updateTableModel(tableModel) {\n    return {\n      type: 'UPDATE_TABLE_MODEL',\n      tableModel\n     };\n}\n\n\n\nexport function updateIsDayFullyAvailable(isDayFullyAvailable) {\n   return  dispatch => { dispatch(_updateIsDayFullyAvailable(isDayFullyAvailable))}\n}\n\n\n\nexport function _updateIsDayFullyAvailable(isDayFullyAvailable) {\n    return {\n      type: 'UPDATE_IS_DAY_FULLY_AVAILABLE',\n      isDayFullyAvailable\n     };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport { TimeslotList } from '../../cmps/TimeslotList/TimeslotList';\nimport { loadTimeSlots } from '../../actions/calendarActions.js';\nimport UtilsService from '../../services/UtilsService';\nimport { Swipeable } from 'react-swipeable'\nimport StoreService from '../../services/StoreService';\nimport { StepperApp } from '../../cmps/StepperApp/StepperApp.jsx';\nimport './CalendarApp.scss';\n\n\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\nexport function _CalendarApp(props) {\n\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [loader, setLoader] = useState(false);\n    const [calendarTitle, seTcalendarTitle] = useState('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n    const [pickerRedTitle, setPickerRedTitle] = useState('date-picker-title');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { loadTimeSlots } = props\n    useEffect(() => {\n        loadTimeSlots()\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }, [loadTimeSlots]);\n\n\n    async function handleChange(date) {\n        setLoader(true)\n        handleDateChange(date)\n        await props.loadTimeSlots(date)\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }\n\n    function disableDay(date) {\n        return  (date.getDay() === 6);\n    }\n\n\n    function onSwipeDirection(direction) {\n        if(props.timeSlots&&!loader){\n            const dateCopy = (new Date(selectedDate.setDate(selectedDate.getDate())))\n        //need to change to normal way\n        if ((direction === 'Left')&& (selectedDate.getTime()) > (new Date().getTime())) {\n              // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() - 1 === -1) || (dateCopy.getDay() - 2 === -1) || (dateCopy.getDay() - 3 === -1)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 3)));\n            }\n        }\n        else if (direction === 'Right') {\n            // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() + 1 === 6) || (dateCopy.getDay() + 2 === 6) || (dateCopy.getDay() + 3 === 6)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 3)));\n            }\n        }\n        else {\n            if ((direction !== 'Up') && (direction !== 'Down')) {\n                seTcalendarTitle('לא ניתן לבחור תאריך שעבר')\n                setPickerRedTitle('picker-red-title')\n                setTimeout(() => {\n                    seTcalendarTitle('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n                    setPickerRedTitle('date-picker-title')\n                }, 3000);\n            }\n        }\n    }\n    }\n\n    function navToHomePage() {\n        StoreService.initApp()\n        props.history.push('/')\n    }\n\n    return (\n        <>\n                {/* <div className=\"header-calendar-app flex justifiy-center align-center space-between\" > */}\n                    <div className=\"weekly-dates-container weekly-dates-container-calendar-app flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                        <i className=\"calendar-icon-in-calendar fas fa-calendar-week\"></i>\n                        <div className=\"date-range-in-calendar\">{UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(0,selectedDate))}<br />\n                        {\n                            // check for saturday case\n                             ((UtilsService.getIsosDate(2,selectedDate)) !== '')?\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(2,selectedDate))\n                             :\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(3,selectedDate))\n                        }\n                        </div>\n                    </div>\n                    {/* <div id=\"text2\" onClick={navToHomePage} >Tori<i className=\"fas fa-tasks\"></i></div> */}\n                {/* </div> */}\n                {/* <StepperApp className=\"calendar-app-stepper\"/> */}\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\" }}\n            >\n                <div className=\"calendar-picker-container\">\n                    <div className={`${pickerRedTitle}`}>\n                        {calendarTitle}\n                    </div> \n                    </div>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                    <ThemeProvider theme={materialTheme}>\n                        <DatePicker\n                            disablePast={true}\n                            shouldDisableDate={disableDay}\n                            variant=\"dialog\"\n                            okLabel=\"אישור\"\n                            cancelLabel=\"ביטול\"\n                            open={isOpen}\n                            onOpen={() => setIsOpen(true)}\n                            onClose={() => setIsOpen(false)}\n                            format=\"MM/dd/yyyy\"\n                            id=\"date-picker-inline\"\n                            disableToolbar\n                            value={selectedDate}\n                            onChange={handleChange}\n                            InputProps={{\n                                disableUnderline: true,\n                                style: { width: '0' }\n                            }}\n                            keyboardbuttonprops={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </ThemeProvider>\n                </MuiPickersUtilsProvider>\n\n        \n                <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                    <div className=\"time-slot-lists-container\">\n                        {(props.timeSlots && !loader) ? <TimeslotList date={selectedDate} timeSlots={props.timeSlots} duration={props.duration} />\n                            : <div className=\"loaderContainer flex  justify-center\"><LoaderApp /></div>}\n                    </div>\n                </Swipeable>\n            </motion.div>\n            <NavBtns />\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        timeSlots: state.CalendarReducer.timeSlots,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTimeSlots\n}\n\nexport const CalendarApp = connect(mapStateProps, mapDispatchToProps)(_CalendarApp)\n","export function updateIsModalOpen(isModalOpen) {\n    return async dispatch => {\n      try {\n        dispatch(_updateIsModalOpen(isModalOpen));\n      } catch (err) {\n        console.log('modalAction: err in updateIsModalOpen', err);\n      };\n    }\n  }\n  \n  export function _updateIsModalOpen(isModalOpen) {\n    return {\n      type: 'UPDATE_IS_MODAL_OPEN',\n      isModalOpen\n    };\n  }","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport StoreService from '../../services/StoreService';\nimport './Modal.scss';\n\nexport default function _Modal(props) {\n    const location = useLocation()\n    const [modalClass, setModalClass] = useState('');\n    let isAdminContacts = (location.pathname === '/adminContacts')\n    useEffect(() => {\n        if (!isAdminContacts) setModalClass('ad-modal-in')\n        else setModalClass('ad-modal-in-in-admin-contacts')\n    }, []);\n\n    const handleClose = () => {\n        if (!isAdminContacts) setModalClass('ad-modal-out')\n        else setModalClass('ad-modal-out-in-admin-contacts')\n        setTimeout(() => {\n            props.updateIsModalOpen(false)\n            if (!isAdminContacts) setModalClass('ad-modal-in')\n            else setModalClass('ad-modal-in-in-admin-contacts')\n        }, 500);\n        if (location.pathname === '/form' || location.pathname === '/cancelAppointment') StoreService.initApp()\n        if (location.pathname === '/form') props.history.push('/treatments')\n    }\n\n    return (\n        <>\n            {\n                props.isModalOpen &&\n                <div className=\"main-modal-container\">\n                    <div className={`ad-modal-screen ${(isAdminContacts) ? 'modal-screen-admin-contacts' : ''}`} onClick={handleClose}> </div>\n                    <div className={`ad-modal ${modalClass}`}>\n                        <div className=\"advertise-content\">{props.modalContent}</div>\n                        <button className=\"ad-modal-btn\" onClick={handleClose}> אישור</button>\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        isModalOpen: state.ModalReducer.isModalOpen\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Modal = withRouter(connect(mapStateProps, mapDispatchToProps)(_Modal))\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport StoreService from '../../services/StoreService';\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport TreatmentService from \"../../services/TreatmentService\";\nimport './SubmitForm.scss';\n\n\n\nexport function _SubmitForm(props) {\n    const location = useLocation()\n    const [markedTreatmetns, setMarkedTreatmetns] = React.useState('');\n    const dateIsraeliDisplay = UtilsService.convertDateToIsraelisDisplay(props.treatment.date)\n    const endTime = UtilsService.calculateEndTime(props.treatment.time, props.duration)\n    const { name, phone, email } = props.userToSchedule\n    useEffect(() => {\n        setMarkedTreatmetns(TreatmentService.getMarkedTreatmentsStr(props.treatments))\n    }, [props.treatments])\n\n    const handleOpen = () => {\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    };\n\n    function init() {\n        StoreService.initApp()\n        props.history.push('/treatments')\n    }\n\n    async function setAppointment() {\n        await CalendarService.setAppointment(markedTreatmetns, props.duration, phone, email, name, props.treatment)\n    }\n\n    let isCalendarAdminForm = (location.pathname === '/calendarAdmin/form')\n\n    return (\n        <div className=\"submit-form flex column  align-center\">\n            {isCalendarAdminForm && <header className=\"header-in-form-modal flex align-center space-between\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/treatments')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div>\n                    לקביעת התור לחצו 'אישור'\n                                    </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>}\n            {!isCalendarAdminForm && <button className=\"reset-btn\" onClick={init}> איפוס <i className=\"fas fa-redo-alt\"></i></button>}\n            <div className={`user-details ${isCalendarAdminForm ? 'user-details-in-modal' : ''}`}>\n                <div>שם : {name}</div>\n                <div>טלפון : {phone}</div>\n                <div>אימייל : {email}</div>\n            </div>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageTransition') : ''}\n           style={{textAlign:'center', width:'100%'}}\n           >\n                <div className=\"appointment-details\">\n                    <div className=\"table-cell\">סוג הטיפול : {TreatmentService.getMarkedTreatmentsStr(props.treatments)}</div>\n                    <div className=\"table-cell\">תאריך : {UtilsService.convertDateToIsraelisDisplay(props.treatment.date)}</div>\n                    <div className=\"last-cell\">בין השעות : {UtilsService.calculateEndTime(props.treatment.time, props.duration)} - {props.treatment.time}</div>\n                </div>\n            </motion.div>\n            <Modal modalContent={<div className=\"main-modal-in-form flex column justify-center align-center\">\n                    <div className=\"title-modal-in-form\">התור נקבע בהצלחה</div>\n                    <div className=\"form-modal-content flex column space-between\">\n                        <div className=\"margin-bottom-5\"> נקבע לך תור ל{markedTreatmetns}  </div>\n                        <div className=\"margin-bottom-5\"> בתאריך: {dateIsraeliDisplay}</div>\n                        <div> בין השעות: {endTime} - {props.treatment.time}</div>\n                    </div>\n                </div>}\n                />\n            {!isCalendarAdminForm && <NavBtns handleOpen={handleOpen} setAppointment={setAppointment} />}\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        duration: state.TreatmentReducer.duration,\n        userToSchedule: state.UserReducer.userToSchedule,\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const SubmitForm = withRouter(connect(mapStateProps, mapDispatchToProps)(_SubmitForm))\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport EmailService from '../../services/EmailService';\nimport StorageService from \"../../services/StorageService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp';\nimport './CancelAppointment.scss';\n\nexport function _CancelAppointment(props) {\n    useEffect(() => {\n        getEventsByPhone()\n    }, []);\n\n    const [loader, setLoader] = React.useState(<LoaderApp />);\n    setTimeout(() => {\n        setLoader('')\n    }, 2000);\n\n    const [phone, setPhone] = React.useState((props.clickedUser) ? props.clickedUser.phone : StorageService.loadFromStorage('tori-user').phone);\n\n    const [eventsToCancel, setEventsToCancel] = useState(null)\n\n    const [pageCount, setPageCount] = useState(0)\n\n    function getEventsByPhone() {\n        EventService.getEventByPhone(phone)\n            .then(events => {\n                if (!events[0]) return\n                const filteredEvents = events.filter(event => {\n                    let year = event.date.slice(0, 4)\n                    let month = event.date.slice(5, 7)\n                    let day = event.date.slice(8, 10)\n                    let hours = +event.startTime.slice(0, 2) + 3\n                    const date = new Date(year, month - 1, day, hours, 0).getTime()\n                    return (date > Date.now())\n                })\n                if (filteredEvents.length) {\n                    setEventsToCancel(UtilsService.getEventReadyForDisplay(filteredEvents))\n                } else {\n                    setEventsToCancel(null)\n                }\n            })\n    }\n\n    async function cancelAppointment(eventId) {\n        props.updateIsModalOpen(true)\n        const events = await EventService.getEventByPhone(phone)\n        let eventToRmove = events.find(event => event._id === eventId)\n        // delete from Calendar\n        CalendarService.removeEventFromCalendar(eventToRmove.eventId)\n        if (pageCount) { setPageCount(pageCount - 1) }\n        EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n        // delete from mongo data base\n        await EventService.removeEventFromDB(eventToRmove._id)\n        getEventsByPhone()\n        //open modal useing store\n    }\n\n    function checkNextBtnDisabillity(){\n        return  !((eventsToCancel.length > 1) && (pageCount < eventsToCancel.length-1))\n    }\n\n    function checkBackBtnDisabillity(){\n        return  !pageCount > 0\n    }\n\n    return (\n        <div className=\"cancel-appointment flex column align-center space-between \">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n            >\n                {\n                    (loader) ?\n                        <div className=\"cancel-apointment-loader\">{loader}</div>\n                        :\n                        <main className=\"cancel-appointment-wrapper\">\n                            <div className=\"table-wrapper\">\n                                {(eventsToCancel) ?\n                                    <div className={`cancel-table-container ${(props.clickedUser) ? 'table-container-in-contacts-modal' : ''}`}>\n                                        <div className=\"apointment-details\">\n                                            <div className=\"table-cell\"> <span>סוג הטיפול</span> : {eventsToCancel[pageCount].treatments}</div>\n                                            <div className=\"table-cell\"> בתאריך : {eventsToCancel[pageCount].date}</div>\n                                            <div className=\"last-cell\"> בין השעות : {`${eventsToCancel[pageCount].endTime} - ${eventsToCancel[pageCount].startTime}`}</div>\n                                        </div>\n                                        {/* <button onClick={() => cancelAppointment(eventsToCancel[pageCount].id)} className={`${(props.clickedUser)?'contacts-modal-btn':''} trash-btn`} > בטל תור </button> */}\n                                    </div>\n                                    :\n                                    <div className=\"no-apointments\">\n                                        לא נמצאו תורים\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"cancel-appointment-btn flex align-center space-around\" onClick={() => cancelAppointment(eventsToCancel[pageCount].id)}>\n                                    <div className=\"cancel-appointment-btn-text\">בטל תור זה</div>\n                                    <i className=\"fas fa-ban\"></i>\n                            </div>\n                                    <div className=\"cancel-appointment-btns-container flex\">\n                                            <div className=\"nav-btn-wrapper\"  >\n                                                <button className={`nav-btn`} disabled={checkBackBtnDisabillity()} onClick={() => setPageCount(pageCount - 1)}>\n                                                    <i className=\"fas fa-arrow-circle-right\"></i>\n                                                </button>\n                                            </div>\n                                            <div className={`nav-btn-wrapper`} >\n                                                <button className={`nav-btn`} disabled={checkNextBtnDisabillity()} onClick={() => {\n                                                    setPageCount(pageCount + 1)\n                                                    console.log(pageCount)\n                                            } }>\n                                                     <i className=\"fas fa-arrow-circle-left\"></i>\n                                                </button>\n                                            </div>\n                                         </div>\n                        </main>\n                }\n                \n            </motion.div>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{ height: '100%' }}>\n                    <div>התור בוטל</div>\n                </div>} />\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const CancelAppointment = withRouter(connect(mapStateProps, mapDispatchToProps)(_CancelAppointment))\n\n\n","import React from \"react\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './SignupOrLogin.scss';\nimport { Link } from 'react-router-dom'\n\nexport function SignupOrLogin(props) {\n    return (\n        <main className=\"signup-or-login-container flex align-center column\">\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n            style={{ width: \"100%\", height: \"100%\" }}\n       >\n          \n                <div className=\"square top-square\">\n                    <Link className=\"signUp-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/signup\">\n                       <div className=\"signup-or-login-text\">הרשמ/י</div> \n                       <i class=\"fas fa-user-edit\"></i>\n            </Link>\n                </div>\n                <div className=\"square bottom-square\">\n                    <Link className=\"login-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/login\">\n                       <div className=\"signup-or-login-text\">התחבר/י</div> \n                       <i class=\"fas fa-sign-in-alt\"></i>\n            </Link>\n                </div>\n        </motion.div>\n            </main>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UserService from \"../../services/UserService\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport './Login.scss';\n\n\nconst ownerPassword = '1234'\n\nfunction _Login(props) {\n    const [phone, setPhone] = React.useState('')\n    const [password, setPassword] = useState('');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [phoneIsValid, setPhoneIsValid] = useState(false);\n\n    useEffect(() => {\n        checkValidation()\n    }, [phone])\n\n    // hide text validation if text is valid\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'phone':\n                setPhone(value)\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        setPhoneIsValid((phone.length > 8) && (phone.length < 11))\n    }\n\n    function toggleValidations() {\n        if (!phoneIsValid) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        const userFromDb = await UserService.getUser(phone)\n        //validation of owner phone number\n        if (userFromDb) {\n            if (!userFromDb.isAdmin) {\n                //need to bring from mongo\n                const { name, email, phone } = userFromDb\n                StorageService.saveToStorage('tori-user', { name, email, phone })\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/treatments')\n            }\n            else {\n                handleClickOpen()\n            }\n        } else {\n            handleModalClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = async (close) => {\n        const userFromDb = await UserService.getUser(phone)\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                const { name, email, phone } = userFromDb\n                StorageService.saveToStorage('tori-user', { name, email, phone })\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/calendarAdmin')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleModalClickOpen = () => {\n        setOpenModal(true);\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    return (\n        <main className=\"main-login-container log-in-page flex align-center  column\">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n    \n                <div className=\"login-title\">\n                    אנא הכניסו מספר טלפון לזיהוי\n                </div>\n                <form className=\"main-form flex align-center column\">\n\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                    </div>\n                </form>\n            </motion.div>\n            <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        הכנס סיסמה\n          </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"סיסמה\"\n                        type=\"email\"\n                        fullWidth\n                        value={password}\n                        onChange={handleChange}\n                        name=\"password\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose('close')} color=\"primary\">\n                        בטל\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        אשר\n                   </Button>\n                </DialogActions>\n            </Dialog>\n            {/* //second modal */}\n            <Dialog\n                open={openModal}\n                onClose={handleModalClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description row\">\n                        <div>\n                            <div>\n                                המספר שהוקש אינו קיים במערכת.\n                                    </div>\n                            <div className=\"flex\">\n                                <div>להרשמה לחץ</div>\n                                <Link className=\"login-link flex align-center justify-center\" to=\"/signup\">\n                                    כאן\n                                       </Link>\n                            </div>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose} color=\"primary\" autoFocus>\n                        ביטול\n                         </Button>\n                </DialogActions>\n            </Dialog>\n            <div className=\"save-btn-wrapper\" onClick={toggleValidations}> </div>\n            <button className=\"save-btn\" onClick={setUser} disabled={!phoneIsValid}>התחבר</button>\n        </main>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const Login = connect(mapStateProps, mapDispatchToProps)(_Login)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './EditButton.scss';\n\n\n\n\nfunction _EditButton(props) {\n    const location = useLocation()\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n    return (\n        <>\n        <div className=\"save-btn-wrapper\" onClick={() => props.toggleValidations()}> </div>\n            <button className={`save-btn ${isContactsPath?'save-btn-in-contact-path' :''}`} onClick={() => props.setUser()} disabled={!props.isValid.phone || !props.isValid.email || !props.isValid.name}>שמור</button>\n        </>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const EditButton = connect(mapStateProps, mapDispatchToProps)(_EditButton)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateUserPhoneInContactSignup, updateUserToSchedule } from '../../actions/userAction.js';\nimport { useLocation } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from 'react-router-dom'\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from \"../../services/UserService\";\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport { motion } from 'framer-motion'\nimport { EditButton } from '../../cmps/EditButton/EditButton';\nimport MotionService from \"../../services/MotionService\";\nimport './Signup.scss';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function _Signup(props) {\n    const location = useLocation()\n    const [credentials, setCredentials] = React.useState({ name: '', phone: '', email: '' })\n    const { name, phone, email } = credentials\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n    function navToContacts() {\n        props.history.push('/calendarAdmin/contacts')\n    }\n\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n\n    async function setUser() {\n        const user = await UserService.getUser(phone)\n        if (user) {\n            handleClickOpen()\n        } else {\n            if (!isContactsPath) props.updateLoggedInUser(credentials)\n            await UserService.addUser(credentials, isContactsPath)\n            if (!isContactsPath) {\n                if (phone !== '123456789') props.history.push('/treatments')\n                else props.history.push('/calendarAdmin')\n            } else {\n                await props.updateUserPhoneInContactSignup(credentials.phone)\n                props.updateUserToSchedule(credentials)\n                navToContacts()\n            }\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <main className=\"main-login-container flex align-center column\">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isContactsPath) ? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isContactsPath) ? MotionService.getMotionStyle('pageTransition') : ''}\n                style={{ width: \"100%\", height: \"100%\" }}\n         >\n\n                {isContactsPath && <header className=\"header-in-signup-modal\">\n                    {isContactsPath && <div className=\"back-arrow\" onClick={navToContacts}><i class=\"fas fa-arrow-right\"></i></div>}\n                </header>}\n                <div className={`login-title ${isContactsPath ? 'login-title-display-none' : ''}`}>\n                    אנא מלאו את השדות הבאים ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className={`main-form flex align-center justify-center column ${isContactsPath ? 'main-form-in-contact-path' : ''}`}>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <input maxlength=\"18\" autoFocus={true} className=\"name\" name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <input className=\"email\" name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                    </div>\n                </form>\n            </motion.div>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        <div>\n                            <div>\n                                המספר שהוקש כבר קיים במערכת.\n                                    </div>\n                            {(!isContactsPath) &&\n                                <div className=\"flex\">\n                                    <div>להתחברות לחץ</div>\n                                    <Link className=\"login-link flex align-center justify-center\" to=\"/login\">\n                                        כאן\n                                       </Link>\n                                </div>\n                            }\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        ביטול\n                       </Button>\n                </DialogActions>\n            </Dialog>\n            <EditButton toggleValidations={toggleValidations} setUser={setUser} isValid={isValid} />\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n    updateUserPhoneInContactSignup,\n    updateUserToSchedule,\n    updateLoggedInUser\n}\n\nexport const Signup = connect(mapStateProps, mapDispatchToProps)(_Signup)","import HttpService from './HttpService'\n\nexport default {\n    getAd,\n    updateAd,\n    toggleAdMode,\n    createAd\n}\n\n// MONGO DB - GOES THREW BACKEND\n\n function getAd() {\n    return HttpService.get('advertise')\n}\n\nfunction updateAd(content) {\n    return HttpService.put('advertise', content)\n}\n\nfunction toggleAdMode(isAdMoneOn){\n    return HttpService.put('advertise/mode',isAdMoneOn)\n}\n\n function createAd() {\n    return  HttpService.post('advertise')\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateIsAdShown} from '../../actions/userAction';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport './HomePage.scss';\n\nexport function _HomePage(props) {\n    function changeRoute(route) {\n        (props.loggedInUser) ? props.history.push(route) : props.history.push('/signupOrLogin')\n    }\n    const [advertise, setAdvertise] = useState();\n    const wazeUrl = 'https://www.waze.com/ul?ll=32.07757250%2C34.82430500&navigate=yes'\n    const facebook = 'bokeresh'\n    const instagram = 'restylebar'\n\n    useEffect(() => {\n        (async () => {\n                let ad = await AdvertiseService.getAd()\n                ad = ad[0]\n                if (props.loggedInUser&&(!props.loggedInUser.isAdmin)) {\n                    if (ad && ad.content && ad.isAdModeOn) {\n                        if (!props.isAdShown) {\n                            setAdvertise(ad.content)\n                            props.updateIsModalOpen(true)\n                            props.updateIsAdShown(true)\n                        }\n                    }\n                } else {\n                    if (ad) return\n                    else {\n                        AdvertiseService.createAd()\n                    }\n                }\n        })()\n    }, [props.loggedInUser]);\n\n\n    return (\n        <div className=\"home-page-wrapper\">\n            <main className=\"home-page\">\n                <img className=\"cover-photo\" src={require('../../styles/img/oo.png')} />\n                {(props.loggedInUser) ?\n                    <div className=\"login-container\" onClick={() => props.history.push('/editUser')}>\n                        <div className=\"admin-logo\"> <i className=\"fas fa-user-tie\"></i></div>\n                        <div>{props.loggedInUser.name}</div>\n                    </div>\n                    :\n                    <div className=\"login-container\" onClick={() => props.history.push('/signupOrLogin')}>\n                        <div className=\"user-logo\">  <i className=\"fas fa-user-tie\"></i></div>\n                        <div>הרשם/</div>\n                        <div>התחבר</div>\n                    </div>\n                }\n                <div className=\"profile-container\">\n                    <div className=\"profile-img\"></div>\n                    <div className=\"profile-text-container\">\n                        <div id=\"profile-title\" className=\"profile-title\">Dee Nail Salon</div>\n                        <div className=\"profile-sub-title\">מכון לבניית ציפורניים</div>\n                    </div>\n                </div>\n                <div className=\"icons-container flex column align-center justify-center\">\n                {((props.loggedInUser ) && !props.loggedInUser.isAdmin)\n                        ?\n                        < div className=\"bottom-icons-container flex space-around\">\n                            <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                    קביעת תור\n                    </div>\n                            <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                    ביטול תור\n                    </div>\n                            <a className=\"phone\" href=\"tel:0538281511\">\n                                <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                         חייגו אלינו\n                    </a>\n                        </div>\n                        :\n                        props.loggedInUser\n                            ?\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/calendarAdmin')}>\n                                    <div className=\"circle\"><i class=\"far fa-calendar-alt\"></i></div>\n                     יומן\n                       </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/adminContacts')}>\n                                    <div className=\"circle\"><i class=\"fas fa-users\"></i> </div>\n                    לקוחות\n                      </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/advertise')}>\n                                    <div className=\"circle\"><i class=\"far fa-comment-alt\"></i></div>\n                    פרסומים\n                      </div>\n                            </div>\n                            :\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                        קביעת תור\n                         </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                       ביטול תור\n                         </div>\n                                <a className=\"phone\" href=\"tel:0538281511\">\n                                    <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                        חייגו אלינו\n                          </a>\n                            </div>\n                    }\n                    <div className=\"top-icons-container flex space-around\">\n                        <a className=\"facebook-container\" href={`https://www.facebook.com/${facebook}/`} >\n                            <div className=\"circle\"><i class=\"fab fa-facebook-f\"></i> </div>\n                       פייסבוק\n                        </a>\n                        <a className=\"instagram-container\" href={`https://www.instagram.com/${instagram}/`}>\n                            <div className=\"circle\"><i class=\"fab fa-instagram\"></i></div>\n                           אינסטגרם\n                        </a>\n                        <a className=\"waze-container\" href={wazeUrl}>\n                            <div className=\"circle\"> <i className=\"fab fa-waze\"></i></div>\n                        נווטו אלינו\n                        </a>\n                    </div>\n                </div>\n                 <Modal modalContent={advertise} />  \n            </main>\n        </div >\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        isAdShown: state.UserReducer.isAdShown,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsAdShown,\n    updateIsModalOpen\n}\n\nexport const HomePage = connect(mapStateProps, mapDispatchToProps)(_HomePage)","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from '../../services/UserService';\nimport { EditButton } from '../../cmps/EditButton/EditButton';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './EditUser.scss';\n\nconst ownerPassword = '1234'\n\nexport function _EditUser(props) {\n    const [credentials, setCredentials] = React.useState(props.loggedInUser)\n    const { name, phone, email } = credentials\n    const [password, setPassword] = useState('');\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                // checkPhoneValidation()\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                // checkEmailValidation()\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        //validation of owner phone number\n        if (!props.loggedInUser.isAdmin) {\n            UserService.updateUser(credentials)\n            props.history.push('/')\n        }\n        else {\n            handleClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (close) => {\n        if (close !== 'close') {\n            //owner password\n            if (password === ownerPassword) {\n                setOpen(false);\n                UserService.updateUser(credentials)\n                props.history.push('/')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n\n    const [isNameEditing, setIsNameEditing] = useState(false);\n    const [isNameDisabled, setIsNameDisabled] = useState(true);\n    const [nameBorderBottom, setNameBorderBottom] = useState('thin-border-bottom');\n    const nameFocus = useRef(null);\n    useEffect(() => {\n        if (isNameEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            nameFocus.current.focus();\n        }\n    }, [isNameEditing]);\n\n    const [isPhoneEditing, setIsPhoneEditing] = useState(false);\n    const [isPhoneDisabled, setIsPhoneDisabled] = useState(true);\n    const [phoneBorderBottom, setPhoneBorderBottom] = useState('thin-border-bottom');\n    const phoneFocus = useRef(null);\n    useEffect(() => {\n        if (isPhoneEditing) {\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            phoneFocus.current.focus();\n        }\n    }, [isPhoneEditing]);\n\n    const [isEmailEditing, setIsEmailEditing] = useState(false);\n    const [isEmailDisabled, setIsEmailDisabled] = useState(true);\n    const [emailBorderBottom, setEmailBorderBottom] = useState('thin-border-bottom');\n    const emailFocus = useRef(null);\n    useEffect(() => {\n        if (isEmailEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            emailFocus.current.focus();\n        }\n    }, [isEmailEditing]);\n\n\n    const toggleEditing = (value) => {\n        if (value === 'name') {\n            setIsNameEditing(!isNameEditing);\n            setIsNameDisabled(!isNameDisabled)\n            if (nameBorderBottom === 'thick-border-bottom') {\n                setNameBorderBottom('thin-border-bottom')\n            } else {\n                setNameBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'phone') {\n            setIsPhoneEditing(!isPhoneEditing);\n            setIsPhoneDisabled(!isPhoneDisabled)\n            if (phoneBorderBottom === 'thick-border-bottom') {\n                setPhoneBorderBottom('thin-border-bottom')\n            } else {\n                setPhoneBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'email') {\n            setIsEmailEditing(!isEmailEditing);\n            setIsEmailDisabled(!isEmailDisabled)\n            if (emailBorderBottom === 'thick-border-bottom') {\n                setEmailBorderBottom('thin-border-bottom')\n            } else {\n                setEmailBorderBottom('thick-border-bottom')\n            }\n        }\n    };\n\n\n    function signOut() {\n        StorageService.removeFromStorage('tori-user')\n        props.updateLoggedInUser(null)\n        props.history.push('/')\n    }\n\n    return (\n        <main className=\"main-edit-container flex column  align-center\">\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n               \n                    <div className=\"sign-out flex align-center justify-center space-between\" onClick={signOut}>\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                        <div>התנתק</div>\n                    </div>\n                    <div className=\"login-title\">\n                        לשינוי לחצו על סמל העריכה ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                    </div>\n                    <form className=\"main-form flex align-center justify-center column\">\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title\">* שם מלא  </div>\n                                <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                            </div>\n                            <div className={`input-edit-container ${nameBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page name\" disabled={isNameDisabled} ref={nameFocus} name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                                {\n                                    (isNameEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title\">* טלפון  </div>\n                                <div className={`validation-text ${togglePhoneValidation}`}>\n                                    {\n                                        (phone) ?\n                                            \"מספר הטלפון שהוקש שגוי\"\n                                            :\n                                            \"זהו שדה חובה, יש להכניס טלפון\"\n                                    }\n                                </div>\n                            </div>\n                            <div className={`input-edit-container ${phoneBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page phone\" disabled={isPhoneDisabled} ref={phoneFocus} name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                                {\n                                    (isPhoneEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title form-title-email\">מייל </div>\n                                <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                            </div>\n                            <div className={`input-edit-container ${emailBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page email\" disabled={isEmailDisabled} ref={emailFocus} name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                                {\n                                    (isEmailEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                }\n                            </div>\n                        </div>\n                    </form>\n\n                    {/* <div className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></div> */}\n\n                \n\n\n           \n            </motion.div>\n            <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        הכנס סיסמה\n</DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"סיסמה\"\n                        type=\"email\"\n                        fullWidth\n                        value={password}\n                        onChange={handleChange}\n                        name=\"password\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose('close')} color=\"primary\">\n                        בטל\n</Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        אשר\n</Button>\n                </DialogActions>\n            </Dialog>\n            <EditButton toggleValidations={toggleValidations} setUser={setUser} isValid={isValid} />\n            </main>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const EditUser = connect(mapStateProps, mapDispatchToProps)(_EditUser)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport {Modal} from '../../cmps/Modal/Modal';\nimport {updateIsModalOpen} from '../../actions/modalAction.js';\nimport './Advertise.scss';\n\nexport function _Advertise(props) {\n\n    const [advertiseContent, setAdvertiseContent] = useState('')\n    // boolean shows if the returned ad should be shown and make the opposite to backend if btn clicked\n    const [isAdModeOn, setIsAdModeOn] = useState('')\n\n    useEffect(() => {\n        (async () => {\n            let ad = await AdvertiseService.getAd()\n            setIsAdModeOn(ad[0].isAdModeOn)\n            setAdvertiseContent(ad[0].content)\n        })()\n    }, []);\n\n\n    function handleChange({ target }) {\n        setAdvertiseContent(target.value)\n    }\n\n    function updateAdContent() {\n        AdvertiseService.updateAd({ advertiseContent })\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    }\n    \n    function toggleAdMode() {\n        AdvertiseService.toggleAdMode({isAdModeOn:!isAdModeOn})\n        setIsAdModeOn(!isAdModeOn)\n    }\n\n    return (\n        <main className=\"main-ad-container\">\n            {\n                <div className=\"ad-title\">ערכו את המודעה ולחצו 'שמור טקסט'</div>\n            }\n            {\n                isAdModeOn?\n                <div className=\"ad-title ad-sub-title\">לעצירת הפרסום לחצו 'הפסק פרסום'</div>:\n                <div className=\"ad-title ad-sub-title\">לחצו 'המשך פרסום' כדי להפעילה</div>\n            }\n                <div className=\"textarea-container\">\n                    <textarea className=\"ad-textarea\" cols=\"30\" rows=\"10\" value={advertiseContent} onChange={handleChange} ></textarea>\n                    <div className=\"ad-btn-container flex column\">\n                        {\n                            isAdModeOn?\n                            <button className=\"ad-btn stop-ad-btn\" onClick={toggleAdMode}> הפסק פרסום</button>\n                            :\n                            <button className=\"ad-btn run-ad-btn\" onClick={toggleAdMode}> המשך פרסום</button>\n                        }\n                    </div>\n                </div>\n            <button className=\"ad-content-btn\" onClick={updateAdContent}>שמור טקסט</button>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{height:'100%'}}>\n                <div>הטקסט נשמר</div>\n                </div>\n                } />\n        </main>\n\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Advertise = connect(mapStateProps, mapDispatchToProps)(_Advertise)\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule } from '../../actions/userAction.js';\nimport { CancelAppointment } from '../CancelAppointment/CancelAppointment';\nimport './AdminContacts.scss';\nexport function _AdminContacts(props) {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [clickedUser, setClickedUser] = useState('')\n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = useState(false);\n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n    }\n    function saveClickedUser(user) {\n        setClickedUser(user)\n        setAppointmentsModalIsOpen(true)\n    }\n    return (\n        <main className=\"admin-contacts\">\n                   {appointmentsModalIsOpen &&\n                    <>\n                        <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                        </div>\n                        <div className=\"apointments-modal\">\n                             <header className=\"header-admin-contacts-modal\">\n                                <div className=\"space-div-for-flex\"></div>\n                                <div className=\"admin-contacts-title-in-modal\">\n                                 התורים של {clickedUser.name}\n                                </div>\n                                <div className={'modal-header-cls-btn-space'}></div>\n                             </header>\n                            <CancelAppointment clickedUser={clickedUser}/>\n                        </div>\n                    </>\n                }\n            <div className=\"search-input-wrapper flex align-center\">\n                <input className=\"search-input-admin-contacts\" placeholder=\"חפשו לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                <i className=\"fas fa-search\"></i>\n                <div onClick={() => props.history.push('/')} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></div>\n            </div>\n            <div className=\"admin-contacts-modal-title\">\n                ניתן להתקשר, לשלוח ווצאפ, לראות תורים שנקבעו\n                <div>  ואף למחוק אותם, ע״י לחיצה על האייקון המתאים.</div>\n            </div>\n            <div className=\"contacts-users-container-warpper\">\n                <div className=\"contacts-users-container\">\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container flex align-center justify-center`}  key={idx}>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-icons-container flex \">\n                                        <div className=\"user-que user-attr\" onClick={() => saveClickedUser(user)}><i class=\"far fa-calendar-check\"></i></div>\n                                        <a className=\"user-whatsapp user-attr\" href={`https://api.whatsapp.com/send?phone=+972${user.phone.slice(1,user.phone.length)}`}>\n                                            <div><i class=\"fa fa-whatsapp\"></i></div>\n                                        </a>\n                                        <a className=\"user-phone user-attr\"  href={`tel:${user.phone}`}>\n                                             <div ><i class=\"fas fa-phone-alt\"></i></div>\n                                        </a>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        loggedInUser: state.UserReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule\n}\nexport const AdminContacts = connect(mapStateProps, mapDispatchToProps)(_AdminContacts)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule,updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport './Contacts.scss';\n\nexport function _Contacts(props) {\n    const [searchTerm, setSearchTerm] = React.useState('')\n   \n    useEffect(() => {\n        props.loadUsers()\n    }, [props.loadUsers]);\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function markClickedUser(clickedUser) {\n        let users = props.users.slice()\n        if (clickedUser.isMarked) {\n            users = users.map(user => {\n                user.isMarked = false\n                props.updateUserToSchedule(null)\n                return user\n            })\n        } else {\n            users = users.map(user => {\n                if (user._id === clickedUser._id) {\n                    user.isMarked = true\n                    props.updateUserToSchedule(user)\n                    return user\n                } else {\n                    user.isMarked = false\n                    return user\n                }\n            })\n        }\n        props.updateUsers(users)\n    }\n\n    function transferTosignup() {\n        props.history.push('/calendarAdmin/contacts/signup')\n    }\n\n    return (\n        <main className=\"contacts-main-container\">\n            <div className=\"search-input-container flex align-center\">\n                <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"search-wrapper flex align-center\">\n                    <input className=\"search-input\" placeholder=\"חפש לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                    <i className=\"fas fa-search\"></i>\n                </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </div>\n            <div className=\"users-container-warpper\">\n                <div className=\"users-container\">\n                     <div className={`user-container  flex align-center justify-center`} onClick={transferTosignup}>\n                                    {/* // just for kepping the space of the text */}\n                                    <div className=\"check-mark-container\"></div>\n                                    <div className=\"user-name user-attr\">לקוח חדש</div>\n                                    <div className=\"user-icon user-attr\"> <i class=\"fas fa-user-plus\"></i></div>\n                                </div>\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container ${(user.isMarked) ? 'user-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(user)} key={idx}>\n                                    <div className=\"check-mark-container flex align-center\">\n                                        {\n                                            (user.isMarked) && <i class=\"fas fa-check\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-phone user-attr\">{user.phone}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userPhoneInContactSignup: state.UserReducer.userPhoneInContactSignup\n    }\n}\n\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule,\n    updateUserPhoneInContactSignup\n}\n\nexport const Contacts = connect(mapStateProps, mapDispatchToProps)(_Contacts)","import React from \"react\";\nimport { connect } from 'react-redux';\nimport './AppointmentOrBlock.scss';\n\nexport function _AppointmentOrBlock(props) {\n\n    return (\n        <>\n            <main className=\"main-appointment-or-block-container flex justify-center align-center column\">\n            <header className=\"header-in-apointment-or-block-modal\">\n                <div className=\"space-div-for-flex\"></div>\n                <div className=\"appointment-or-block-title-modal\">בחרו בפעולה הרצויה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n                <div className=\"routes-btn-container flex column space-around\">\n                    <div className=\"contacts-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/contacts')}>\n                        <div className=\"app-or-block-title\">קביעת תור ללקוח</div>\n                        <i className=\"app-icon fas fa-user-clock\"></i>\n                    </div >\n                    <div className=\"block-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/blockHours')}>\n                        <div className=\"app-or-block-title\">סגירת חלונות זמנים</div>\n                        <i class=\"fas fa-ban\"></i>\n                    </div>\n                </div>\n            <footer className=\"footer-in-apointment-or-block-modal\"></footer>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const AppointmentOrBlock = connect(mapStateProps, mapDispatchToProps)(_AppointmentOrBlock)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { updateRecurrence } from '../../actions/calendarActions';\nimport './AppointmentFreq.scss';\n\nexport function _AppointmentFreq(props) {\n\n    function updateRecurrence(freqOrCount){\n        freqOrCount = freqOrCount.target.value \n        let recurrenceCopy = {...props.recurrence}\n        recurrenceCopy.isRecurrence = true\n        if (freqOrCount.length > 2) {recurrenceCopy.freq = freqOrCount}\n        else  {recurrenceCopy.count = freqOrCount}\n        props.updateRecurrence(recurrenceCopy)\n    }\n\n    return (\n        <>\n            <main className=\"appointment-freq flex justify-center align-center column\">\n            <header className=\"header-in-appointment-freq-modal\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/blockHours')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"appointment-freq-title-modal\">קבעו את תדירות הסגירה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n            <div className=\"appointment-freq-main-contianer\">\n                <div className=\"appointment-freq-exmple-container\">\n                    <br/>\n                    <div className=\"\">בחרו את מספר הסגירות,</div>\n                    <div className=\"\">ואחת לכמה זמן תופיע הסגירה.</div>\n                    <br/>\n                    <div>לדוגמא: </div>\n                    <br/>\n                    <div>נניח שמספר הסגירות הוא שתיים,</div>\n                    <div>ובחרתם סגירות על בסיס שבועי.</div>\n                    <br/>\n                    <div>יקבעו שתי סגירות!</div>\n                    <br/>\n                    <div> הראשונה ביום הנבחר,</div>\n                    <div>והשנייה בדיוק שבוע לאחר מכן.</div>\n                    <br/>\n                    <div className=\"one-time-appointment\">לסגירה רגילה וחד פעמית.</div>\n                    <div className=\"one-time-appointment\">אין צורך לבחור, פשוט לחצו אישור.</div>\n                    <br/>\n                </div>\n                <div className=\"appointment-freq-selects-wrapper\">\n                    <div className=\"count-container flex space-between\">\n                        <div className=\"count-title\" for=\"count\">מספר החזרות הרצוי:</div>\n                            <select className=\"count-select\" id=\"count\" name=\"count\" onChange={updateRecurrence}>\n                                <option value={1} selected={(props.recurrence.count === '1')? true : false }>אחת</option>\n                                <option value={2} selected={(props.recurrence.count === '2')? true : false }>שתיים</option>\n                                <option value={3} selected={(props.recurrence.count === '3')? true : false }>שלוש</option>\n                                <option value={4} selected={(props.recurrence.count === '4')? true : false }>ארבע</option>\n                                <option value={5} selected={(props.recurrence.count === '5')? true : false }>חמש</option>\n                                <option value={6} selected={(props.recurrence.count === '6')? true : false }>שש</option>\n                                <option value={7} selected={(props.recurrence.count === '7')? true : false }>שבע</option>\n                                <option value={8} selected={(props.recurrence.count === '8')? true : false }>שמונה</option>\n                                <option value={9} selected={(props.recurrence.count === '9')? true : false }>תשע</option>\n                                <option value={10} selected={(props.recurrence.count === '10')? true : false }>עשר</option>\n                                <option value={11} selected={(props.recurrence.count === '11')? true : false }>אחת-עשרה</option>\n                                <option value={12} selected={(props.recurrence.count === '12')? true : false }>שתיים-עשרה</option>\n                                <option value={13} selected={(props.recurrence.count === '13')? true : false }>שלוש-עשרה</option>\n                                <option value={14} selected={(props.recurrence.count === '14')? true : false }>ארבע-עשרה</option>\n                                <option value={15} selected={(props.recurrence.count === '15')? true : false }>חמש-עשרה</option>\n                                <option value={16} selected={(props.recurrence.count === '16')? true : false }>שש-עשרה</option>\n                                <option value={17} selected={(props.recurrence.count === '17')? true : false }>שבע-עשרה</option>\n                                <option value={18} selected={(props.recurrence.count === '18')? true : false }>שמונה-עשרה</option>\n                                <option value={19} selected={(props.recurrence.count === '19')? true : false }>תשע-עשרה</option>\n                                <option value={20} selected={(props.recurrence.count === '20')? true : false }>עשרים</option>\n                            </select>\n                    </div>\n                    <br/>\n                            <div className=\"freq-container flex space-between\">\n                                <div className=\"freq-title\" for=\"freq\">חזרתיות על בסיס:</div>\n                                <select className=\"appointment-freq-select\" name=\"freq\" id=\"freq\" onChange={updateRecurrence}>\n                                    <option value=\"DAILY\" selected={(props.recurrence.freq === 'DAILY')? true : false }>יומי</option>\n                                    <option value=\"WEEKLY\" selected={(props.recurrence.freq === 'WEEKLY')? true : false }>שבועי</option>\n                                </select>\n                            </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        recurrence: state.CalendarReducer.recurrence,\n        userToSchedule: state.UserReducer.userToSchedule\n    }\n}\n\nconst mapDispatchToProps = {\n    updateRecurrence\n}\n\nexport const AppointmentFreq = connect(mapStateProps, mapDispatchToProps)(_AppointmentFreq)\n","import React  from \"react\";\nimport { connect } from 'react-redux';\nimport { updateHoursToBlock, updateSlotToBlock } from '../../actions/calendarActions';\nimport './BlockHours.scss';\n\nexport function _BlockHours(props) {\n\n    function markClickedUser(clickedSlotRange) {\n        let slotsRange = props.slotsRangeToBlock.slice()\n        if (clickedSlotRange.isMarked) {\n            slotsRange = slotsRange.map(slotRange => {\n                slotRange.isMarked = false\n                props.updateSlotToBlock(null)\n                return slotRange\n            })\n        } else {\n            slotsRange = props.slotsRangeToBlock.map(slotRange => {\n                if (slotRange.end === clickedSlotRange.end) {\n                    slotRange.isMarked = true\n                    props.updateSlotToBlock(slotRange)\n                    return slotRange\n                } else {\n                    slotRange.isMarked = false\n                    return slotRange\n                }\n            })\n        }\n        props.updateHoursToBlock(slotsRange)\n    }\n\n    return (\n        <main className=\"hours-main-container\">\n                <header className=\"header-in-block-hours-modal flex align-center\">\n                     <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    <div className=\"block-hours-title-in-modal\">בחרו חלון זמנים ולחצו 'אישור' </div>\n                    <div className={'modal-header-cls-btn-space'}></div>\n                </header>\n            <div className=\"hours-container-warpper\">\n                <div className=\"hours-container\">\n                    {\n                        (props.slotsRangeToBlock) &&\n                        props.slotsRangeToBlock.map((slotRange, idx) => {\n                            return (\n                                (props.isDayFullyAvailable && (idx === 0))\n                                    ?\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div>סגירת יום שלם</div>\n                                    </div>\n                                    :\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div className=\"hour-end user-attr\">{slotRange.end}</div>\n                                        <div className=\"hours-dash\">-</div>\n                                        <div className=\"hour-start user-attr\">{slotRange.start}</div>\n                                    </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        isDayFullyAvailable: state.CalendarReducer.isDayFullyAvailable\n    }\n}\n\nconst mapDispatchToProps = {\n    updateHoursToBlock,\n    updateSlotToBlock\n}\n\nexport const BlockHours = connect(mapStateProps, mapDispatchToProps)(_BlockHours)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport UtilsService from \"../../services/UtilsService\";\nimport './BlockConfermation.scss';\n\nexport function _BlockConfermation(props) {\n  return (\n    <>\n      <header className=\"header-in-block-confermation-modal flex space-between\">\n        <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/freq')}><i  class=\"fas fa-arrow-right\"></i></div>\n        <div className=\"block-confirmation-title-in-modal\">\n          לסגירת החלון שנבחר לחצו 'אישור'\n        </div>\n        <div className={'modal-header-cls-btn-space'}></div>\n      </header>\n      <main className=\"main-confermation-container flex align-center justify-center\">\n        <div className=\"block-confermation-details\">\n          <div className=\"table-cell1\">חלון הזמנים שנבחר :</div>\n          <div className=\"table-cell2\">בתאריך : {UtilsService.convertDateToIsraelisDisplay(props.slotToBlock.date)}</div>\n          <div className=\"table-cell3\">בין השעות : {props.slotToBlock.end} - {props.slotToBlock.start}</div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nfunction mapStateProps(state) {\n  return {\n    slotToBlock: state.CalendarReducer.slotToBlock\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const BlockConfermation = connect(mapStateProps, mapDispatchToProps)(_BlockConfermation)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './ModalButton.scss';\n\nfunction _ModalButton(props) {\n    const location = useLocation()\n    function checkBtnValidation() {\n        const path = location.pathname\n        let isValid = true\n        switch (path) {\n            case '/calendarAdmin/contacts':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/treatments':\n                isValid = (!props.pickedTreatmentsCount) || (!(props.duration <= props.availableDuration))\n                break;\n            case '/calendarAdmin/form':\n                isValid = false\n                break;\n            case '/calendarAdmin/freq':\n                isValid = false\n                break;\n            case '/calendarAdmin/blockHours':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/blockConfermation':\n                isValid = false\n                break;\n            case '/calendarAdmin/appointmentOrBlock':\n                isValid = true\n                break;\n            default:\n                console.log('Err updating button modal validation')\n        }\n        return isValid\n    }\n    return (\n        <button className=\"calendar-admin-modal-btn\" onClick={() => props.handleModalRoute(props.duration)}\n            disabled={checkBtnValidation()}>\n            {\n                (location.pathname === '/calendarAdmin/contacts') ?\n                    'בחרו לקוח ולחצו כאן להמשך'\n                    :\n                    (location.pathname === '/calendarAdmin/treatments')\n                        ?\n                        'לחצו כאן להמשך'\n                        :\n                        (location.pathname === '/calendarAdmin/blockHours')\n                            ?\n                            'אישור'\n                            :\n                            (location.pathname === '/calendarAdmin/appointmentOrBlock')\n                                ?\n                                ''\n                                :\n                                'אישור'\n            }\n        </button>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const ModalButton = connect(mapStateProps, mapDispatchToProps)(_ModalButton)","import React, { useEffect, useState } from \"react\";\nimport { useLocation, HashRouter as Router, withRouter, Route } from 'react-router-dom';\nimport { connect} from 'react-redux';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { Swipeable } from 'react-swipeable'\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { updateAvailbleDuration, setTreatment } from '../../actions/treatmentActions.js';\nimport { updateHoursToBlock, updateIsDayFullyAvailable, updateTableModel} from '../../actions/calendarActions';\nimport { updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport TreatmentService from \"../../services/TreatmentService\";\nimport UtilsService from '../../services/UtilsService';\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport StoreService from '../../services/StoreService';\nimport { TreatmentApp } from '../TreatmentApp/TreatmentApp'\nimport { Contacts } from '../../pages/Contacts/Contacts.jsx'\nimport { AppointmentOrBlock } from '../../pages/AppointmentOrBlock/AppointmentOrBlock.jsx'\nimport { AppointmentFreq } from '../../pages/AppointmentFreq/AppointmentFreq.jsx'\nimport { BlockHours } from '../../pages/BlockHours/BlockHours.jsx'\nimport { BlockConfermation } from '../../pages/BlockConfermation/BlockConfermation.jsx'\nimport { SubmitForm } from '../../pages/SubmitForm/SubmitForm.jsx'\nimport { ModalButton } from '../../cmps/ModalButton/ModalButton.jsx'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport './CalendarAdmin.scss';\nimport { Signup } from \"../Signup/Signup\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide timeout={5000} direction=\"down\" ref={ref} {...props} />;\n});\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\n\n\nfunction _CalendarAdmin(props) {\n    //the date is irrelevant, its only for the formated function the hours wiil be given by the owner.\n    const location = useLocation()\n    const constrains = {\n        start: \"2020-10-12T06:00:00Z\",\n        end: \"2020-10-12T18:00:00Z\"\n    }\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [tempEventToRmoveId, setTempEventToRmoveId] = useState('');\n    const [eventToRmoveId, setEventToRmove] = React.useState({});\n    const [prevEventsToDisplay, setPrevEventsToDisplay] = React.useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [modalSubJect, setModalSubJect] = React.useState('');\n    const [isTempModeOn, setIsTempModeOn] = useState(false);\n    const [weeklyDates, setWeeklyDates] = useState([]);\n    const [timeSlots, setWorkingTimeSlots] = useState(getWorkingTimeSlots());\n    const [isClicked, setIsClicked] = useState(true);\n    const [tableCells, setTableCells] = useState([]);\n    const [occDates, setOccupiedDates] = useState([]);\n    const [month, setMonth] = useState(UtilsService.getMonthByIdx(new Date().getMonth() + 1));\n    const [eventsToDisplay, setEventsToDisplay] = useState(async () => {\n        return await getWeeklyEvents()\n    });\n    const [daysForDisplay, setDaysForDisplay] = useState(() => {\n        return getDailyDates(selectedDate)\n    });\n    const [loader, setLoader] = useState(true);\n\n    let eventsIds = []\n\n    let weeklyRange = CalendarService.getDatesWeeklyRange(selectedDate)\n    \n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = React.useState(false);\n\n\n    useEffect(() => {\n        (async () => {\n\n            let weeklyEvents = await eventsToDisplay\n            let isTemp = false\n            weeklyEvents.forEach(dailyEvents => {\n                dailyEvents.forEach(ev => {\n                    if (ev.isTemp) isTemp = true\n                })\n            })\n            if (!isTemp) {\n                setIsTempModeOn(false)\n                setOpen(false)\n            }\n\n            if (!props.tableModel.length) {\n                let table = CalendarService.buildWeeklyModel(timeSlots,await eventsToDisplay)\n                props.updateTableModel(table)\n            }\n\n            if (weeklyEvents) setLoader(false)\n            if (weeklyEvents && timeSlots) {\n                console.log('calendaradmin recreated')\n\n                return setTableCells(\n                    timeSlots.map((ts, tsIdx) => {\n                        if (tsIdx === timeSlots.length - 1) return\n                        return <tr key={tsIdx}>\n                            <td className=\"td-hours\">{UtilsService.timeToDisplay(ts)}</td>\n                            {\n                                weeklyEvents.map((dailyEvents, dailyIdx) => {\n                                    let counter = 0\n                                    if (dailyEvents.length) {\n                                        let cellIsRendered = false\n                                        return dailyEvents.map((ev, eventIdx) => {\n                                            let evenOrOdd = (dailyIdx % 2 === 0) ? 'even-event' : 'odd-event'\n                                            if (counter > 2) counter = 0\n                                            const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                                            if (range.occupied) {\n                                                cellIsRendered = true\n                                                if (!eventsIds.includes(ev.id)) {\n                                                    eventsIds.push(ev.id)\n                                                    return <td className={`occupied-cell ${(ev.name === 'block - block') ? 'blocked-cell' : ''} ${evenOrOdd}-${(counter)} ${(ev.isTemp&&!ev.isCancelApp) ? 'temp-cell' : ''}`} key={eventIdx} onClick={() => handleClickOpen(ev)} rowSpan={range.rowspan}>\n                                                        <div className=\"occupied-cell-content\">\n                                                            <div className=\"event-time-wrapper\">\n                                                                <div className=\"event-time\">{UtilsService.timeToDisplay((ev.start).slice(11, 16))}-{UtilsService.timeToDisplay((ev.end).slice(11, 16))}</div>\n                                                            </div>\n                                                            {(ev.name === 'block - block')\n                                                                ?\n                                                                <div>\n                                                                    סגור\n                                                                </div>\n                                                                :\n                                                                <div className=\"event-desc\">\n                                                                    <div className=\"event-name\">{UtilsService.getSplitedEventDesc(ev.name).name}</div>\n                                                                    <div className=\"event-treatment\">{UtilsService.getSplitedEventDesc(ev.name).treatment}</div>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </td>\n\n                                                } else return ''\n                                            }\n                                            else if ((dailyEvents.length === eventIdx + 1) && (!cellIsRendered)) {\n                                                return <td className=\"available-cell\" key={eventIdx} onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                            }\n                                            counter++\n                                        })\n                                    } else {\n                                        //all day available no event at this day\n                                        return <td key={dailyIdx} className=\"available-cell\" onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts, true)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                    }\n                                })\n                            }\n                        </tr>\n                    })\n                )\n            }\n        })()\n    }, [eventsToDisplay, props.updateTableModel, props.tableModel]);\n\n    useEffect(() => {\n        checkIfClicked()\n    }, [props.users, props.slotsRangeToBlock]);\n\n    useEffect(() => {\n        // events to display\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n                let table = CalendarService.buildWeeklyModel(timeSlots, await eventsToDisplay)\n                props.updateTableModel(table)\n        })()\n    }, [eventsToDisplay]);\n\n    function checkIfClicked() {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            setIsClicked(!(props.users.find(user => user.isMarked)))\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            setIsClicked(!(props.slotsRangeToBlock.find(sr => sr.isMarked)))\n        }\n    }\n\n    function openAppointmentsModal(cellPos, ts, isDayFullyAvailable = false) {\n        props.updateIsDayFullyAvailable(isDayFullyAvailable)\n        const dateToScheduale = weeklyDates[cellPos.dailyIdx].start\n        props.setTreatment({\n            time: ts,\n            date: dateToScheduale.slice(0, 10),\n            dailyIdx: cellPos.dailyIdx\n        })\n        const availableDuration = CalendarService.getAvailbleDuration(props.tableModel, cellPos)\n        props.updateAvailbleDuration(availableDuration)\n        props.updateHoursToBlock(CalendarService.getHoursToBlock(timeSlots, ts, availableDuration, dateToScheduale.slice(0, 10), isDayFullyAvailable))\n        setAppointmentsModalIsOpen(true)\n        props.history.push('/calendarAdmin/appointmentOrBlock')\n    }\n\n\n    function handleModalRoute(duration) {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            props.history.push('/calendarAdmin/treatments')\n            setIsClicked(true)\n        }\n        if (location.pathname === '/calendarAdmin/treatments') {\n            props.history.push('/calendarAdmin/form')\n            // props.history.push('/calendarAdmin/freq')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n        //  if (userToSchedule) {props.history.push('/calendarAdmin/form')}\n        //  else {{props.history.push('/calendarAdmin/blockConfermation')}\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/form') {\n            // setAppointment(duration, props.recurrence)\n            setAppointment(duration)\n            closeAppointmentsModal()\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            props.history.push('/calendarAdmin/freq')\n            // props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/blockConfermation') {\n            blockSlotRange(props.recurrence)\n            closeAppointmentsModal()\n        }\n    }\n\n    function getDailyDates(date) {\n        const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n        setWeeklyDates(days)\n        return days.map(day => {\n            return day.start.slice(8, 10)\n        })\n    }\n\n    async function cancelAppiontment() {\n        setIsTempModeOn(true)\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.filter(ev => ev.id !== tempEventToRmoveId)\n        })\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.map(ev => {\n                ev.isTemp = true\n                ev.isCancelApp = true\n                return ev\n            })\n        })\n\n        setEventsToDisplay(eventsToDisplayCopy)\n        const confirmedDeletedEvent = await CalendarService.removeEventFromCalendar(eventToRmoveId.calendar)\n        console.log(confirmedDeletedEvent)\n        if (!confirmedDeletedEvent) {\n            console.log('problem deleting event')\n            //need to put modal\n            return\n        }\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n        // delete from mongo data base\n        EventService.removeEventFromDB(eventToRmoveId.mongo)\n        // EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n    }\n\n\n\n    function getWorkingTimeSlots() {\n        return UtilsService.getDailySlotsForPreview([constrains], 15)\n    }\n\n    async function getWeeklyEvents(date = new Date()) {\n        return await Promise.all((UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)).map(async isosDate => {\n            return await CalendarService.getEventsFromCalendar(isosDate)\n        }))\n    }\n\n    async function handleChange(date) {\n        setDaysForDisplay(getDailyDates(date))\n        setMonth(UtilsService.getMonthByIdx(date.getMonth() + 1))\n        eventsIds = []\n        setLoader(true)\n        const weeklyEvents = await getWeeklyEvents(date)\n        if (weeklyEvents) {\n            setLoader(false)\n        }\n        setEventsToDisplay(weeklyEvents)\n        handleDateChange(date)\n    }\n\n    function onSwipeDirection(direction) {\n        if (!loader) {\n            //need to change to normal way\n            if ((direction === 'Left') && (selectedDate.getTime()) > (new Date().getTime())) {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 7)));\n            }\n            else if (direction === 'Right') {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 7)));\n            }\n        }\n    }\n\n    const handleClickOpen = async (ev) => {\n        if (ev) {\n            setTempEventToRmoveId(ev.id)\n            if (ev.name === 'block - block') {\n                setModalSubJect('block')\n            } else {\n                 setModalSubJect('appointment')\n            }\n            const mongoEvent = await EventService.getMongoEventByEventCalendarId(ev.id)\n            setEventToRmove({ mongo: mongoEvent._id, calendar: ev.id })\n        }\n        setOpen(true);\n    };\n\n    const handleClose = (isApproved) => {\n        setOpen(false);\n        console.log(prevEventsToDisplay)\n        if (isApproved && !prevEventsToDisplay) cancelAppiontment()\n        if (prevEventsToDisplay) {\n            setEventsToDisplay(prevEventsToDisplay)\n            setPrevEventsToDisplay(null)\n        }\n    };\n\n    async function setAppointment(duration) {\n        setIsTempModeOn(true)\n        const markedTreatmetns = TreatmentService.getMarkedTreatmentsStr(props.treatments)\n        const { phone, email, name } = props.userToSchedule\n        let time = UtilsService.changeTimeForDisplay(props.treatment.time, 0)\n        const startTime = `${props.treatment.date}T${time}:00Z`\n        time = UtilsService.calculateEndTime(time, duration)\n        const endTime = `${props.treatment.date}T${time}:00Z`\n        const tempEvent = {\n            id: UtilsService.idGen(),\n            name: `${name} - ${markedTreatmetns}`,\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        setEventsToDisplay(eventsToDisplayCopy)\n        const confirmedEvent = await CalendarService.setAppointment(markedTreatmetns, duration, phone, email, name, props.treatment)\n        if (!confirmedEvent) {\n            console.log('couldnt schduale appointment')\n            //need to put modal\n            return\n        }\n\n        setEventsToDisplay(await getWeeklyEvents(selectedDate))\n    }\n\n    async function blockSlotRange(recurrence) {\n        setIsTempModeOn(true)\n        let time1 = UtilsService.changeTimeForDisplay(props.slotToBlock.start, 0)\n        let time2 = UtilsService.changeTimeForDisplay(props.slotToBlock.end, 0)\n        let startTime = `${props.slotToBlock.date}T${time1}:00Z`\n        let endTime = `${props.slotToBlock.date}T${time2}:00Z`\n        let tempEvent = {\n            id: UtilsService.idGen(),\n            name: 'block - block',\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n            let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n            eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        \n            let startTimeTs = tempEvent.start.slice(11,16) \n            let startTimeTsIdx = timeSlots.findIndex(ts => ts === startTimeTs)\n            let endTimeTs = tempEvent.end.slice(11,16)\n            let endTimeTsIdx = timeSlots.findIndex(ts => ts === endTimeTs)\n    \n            for (var i=1; i<props.recurrence.count && props.recurrence.freq === 'DAILY'; i++){\n              tempEvent = {...tempEvent}\n              startTime = new Date (new Date(startTime).getTime() + (1000 * 60 * 60 * 24))\n              startTime = startTime.toISOString()\n              endTime = new Date (new Date(endTime).getTime() + (1000 * 60 * 60 * 24))\n              endTime = endTime.toISOString()\n              tempEvent.id = UtilsService.idGen()\n              tempEvent.start = startTime\n              tempEvent.end = endTime\n            //   dailyIdx+i for the next day -- the j is for the ts (where exactly in the next day) => making sure there is not already an event there before pushing temp\n            let isCellOccupied = false\n            for (var j=startTimeTsIdx; j<endTimeTsIdx; j++) { \n                if (!props.tableModel[j][props.treatment.dailyIdx+i]){\n                    isCellOccupied = true\n                    console.log(timeSlots[j], 'is not availble at', props.treatment.dailyIdx+i)\n                }\n            }\n                if (!isCellOccupied) { eventsToDisplayCopy[props.treatment.dailyIdx+i].push(tempEvent)}\n        }\n            let prevEvents = [... await eventsToDisplay]\n            setEventsToDisplay(eventsToDisplayCopy)\n            const confirmedBlockOrOccDates = await CalendarService.blockSlotRange(props.slotToBlock, 'block', recurrence)\n        if (Array.isArray(confirmedBlockOrOccDates)) {\n            setModalSubJect('occupied')\n            setOccupiedDates (confirmedBlockOrOccDates)\n            setPrevEventsToDisplay (prevEvents)\n            setIsTempModeOn(false)\n            setOpen(true)\n            return\n        }\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n    }\n\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n        // chagne semantics, because it represents the opposite - making sure btn will be disable after modal closed and reopen\n        setIsClicked(true)\n        props.updateUserPhoneInContactSignup('')\n        StoreService.initApp()\n        props.history.push('/calendarAdmin')\n    }\n\n    function disableDay(date) {\n        return (date.getDay() === 6);\n    }\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                <ThemeProvider theme={materialTheme}>\n                    <DatePicker\n                        disablePast={true}\n                        shouldDisableDate={disableDay}\n                        variant=\"dialog\"\n                        okLabel=\"אישור\"\n                        cancelLabel=\"ביטול\"\n                        open={isOpen}\n                        onOpen={() => setIsOpen(true)}\n                        onClose={() => setIsOpen(false)}\n                        format=\"MM/dd/yyyy\"\n                        id=\"date-picker-inline\"\n                        disableToolbar\n                        value={selectedDate}\n                        onChange={handleChange}\n                        InputProps={{\n                            disableUnderline: true,\n                            style: { width: '0', height: '0px' }\n                        }}\n                        keyboardbuttonprops={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </ThemeProvider>\n            </MuiPickersUtilsProvider>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n                <main className=\"calendar-admin-container\">\n                    <div className=\"header-app flex justifiy-center align-center space-between\" >\n                        <div className=\"weekly-dates-container flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                            <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                            <div className=\"weekly-dates-text\">{weeklyRange.firstDay}<br />{weeklyRange.lastDay} </div>\n                        </div>\n                        <div id=\"text2\" onClick={() => props.history.push('/')} >Tori<i className=\"fas fa-tasks\"></i></div>\n                    </div>\n                    <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                        <header className=\"days-header-container flex space-between\">\n                            <div className=\"days-name-container month-container\" >\n                                <div className=\"month-name\">{month}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">ראשון</div>\n                                <div className=\"daily-num\"> {daysForDisplay[0]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שני</div>\n                                <div className=\"daily-num\"> {daysForDisplay[1]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שלישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[2]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">רביעי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[3]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">חמישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[4]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[5]}</div>\n                            </div>\n                        </header>\n                        <div>\n                            {\n                                !loader ?\n                                    <div className=\"table-container\">\n                                        <table>\n                                            <tbody>\n                                                {\n                                                    (tableCells.length) &&\n                                                    tableCells\n                                                }\n                                            </tbody>\n                                        </table>\n                                        <footer className=\"calendar-footer flex align-center justify-center\">\n                                            <div className=\"footer-hours\">20:00</div>\n                                        </footer>\n                                    </div>\n                                    :\n                                    <div className=\"loader-container flex justify-center align-center space-around\">\n                                        <LoaderApp />\n                                    </div>\n                            }\n                        </div>\n                    </Swipeable>\n\n\n\n                    <div>\n                        <Dialog\n                            open={open}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={() => handleClose(false)}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\n                                    (isTempModeOn) ?\n                                        'ארעה שגיאה'\n                                        :\n                                        (modalSubJect === 'block')\n                                            ?\n                                            'הסרת חסימה'\n                                            :\n                                            (modalSubJect === 'appointment')?\n                                            'ביטול תור'\n                                            :\n                                                (occDates.length>1)?\n                                                 'התאריכים הנ״ל כבר תפוסים' \n                                                 :\n                                                 (occDates.length===1)?\n                                                 'התאריך הנ״ל כבר תפוס' \n                                                 :\n                                                 ''\n                            \n                                }\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    {\n                                        (isTempModeOn) ?\n                                            'סגרו את המודעה ונסו שנית'\n                                            :\n                                            (modalSubJect === 'block')\n                                                ?\n                                                'להסרת החסימה לחצו אישור'\n                                                :\n                                                (modalSubJect === 'appointment')?\n                                                ' לביטול התור לחצו אישור'\n                                                :\n                                                (occDates.length>1)?\n                                                    `התאריכים - ${occDates.map(d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוסים, הסגירות לא נקבעו!`\n                                                    :\n                                                    (occDates.length===1)?\n                                                    `התאריך ${occDates.map\n                                                    (d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוס, הסגירות לא נקבעו!`\n                                                    :\n                                                    ''\n                                           \n                                        // (isTempModeOn) ?\n                                        //     'סגרו את המודעה ונסו שנית'\n                                        //     :\n                                        //     (modalSubJect === 'block')\n                                        //         ?\n                                        //         'להסרת החסימה לחצו אישור'\n                                        //         :\n                                        //         ' לביטול התור לחצו אישור'\n                                    }\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => handleClose(false)} color=\"primary\">\n                                    ביטול\n                            </Button>\n                                {\n                                    (isTempModeOn)\n                                        ?\n                                        <Button onClick={() => handleClose(false)} color=\"primary\">\n                                            אישור\n                             </Button>\n                                        :\n                                        <Button onClick={() => handleClose(true)} color=\"primary\">\n                                            אישור\n                              </Button>\n                                }\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    {appointmentsModalIsOpen &&\n                        <>\n                            <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                            </div>\n                            <div className=\"apointments-modal\">\n                                <Router>\n                                    <Route path=\"/calendarAdmin/contacts\" exact component={Contacts} />\n                                    <Route path=\"/calendarAdmin/contacts/signup\" component={Signup} />\n                                    <Route path=\"/calendarAdmin/treatments\" component={TreatmentApp} />\n                                    <Route path=\"/calendarAdmin/form\" component={SubmitForm} />\n                                    <Route path=\"/calendarAdmin/freq\" component={AppointmentFreq} />\n                                    <Route path=\"/calendarAdmin/appointmentOrBlock\" component={AppointmentOrBlock} />\n                                    <Route path=\"/calendarAdmin/blockHours\" component={BlockHours} />\n                                    <Route path=\"/calendarAdmin/blockConfermation\" component={BlockConfermation} />\n                                </Router>\n                                {((location.pathname !== '/calendarAdmin/appointmentOrBlock') && (location.pathname !== '/calendarAdmin/contacts/signup')) && <ModalButton handleModalRoute={handleModalRoute} isClicked={isClicked} />}\n                                <div className=\"close-admin-modal-btn\" onClick={closeAppointmentsModal}><i class=\"fas fa-times\"></i></div>\n                            </div>\n                        </>\n                    }\n                </main>\n            </motion.div>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userToSchedule: state.UserReducer.userToSchedule,\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        slotToBlock: state.CalendarReducer.slotToBlock,\n        recurrence: state.CalendarReducer.recurrence,\n        tableModel: state.CalendarReducer.tableModel\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAvailbleDuration,\n    setTreatment,\n    updateHoursToBlock,\n    updateIsDayFullyAvailable,\n    updateUserPhoneInContactSignup,\n    updateTableModel\n}\n\nexport const CalendarAdmin = withRouter(connect(mapStateProps, mapDispatchToProps)(_CalendarAdmin))\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { TreatmentApp } from './pages/TreatmentApp/TreatmentApp.jsx'\nimport { EditTreatments } from './pages/EditTreatments/EditTreatments.jsx'\nimport { TreatmentToEdit } from './pages/TreatmentToEdit/TreatmentToEdit.jsx'\nimport { CalendarApp } from './pages/CalendarApp/CalendarApp.jsx'\nimport { SubmitForm } from './pages/SubmitForm/SubmitForm.jsx'\nimport { CancelAppointment } from './pages/CancelAppointment/CancelAppointment.jsx'\nimport { SignupOrLogin } from './pages/SignupOrLogin/SignupOrLogin.jsx'\nimport { Login } from './pages/Login/Login.jsx'\nimport { Signup } from './pages/Signup/Signup.jsx'\nimport { HomePage } from './pages/HomePage/HomePage.jsx'\nimport { EditUser } from './pages/EditUser/EditUser.jsx'\nimport { Advertise } from './pages/Advertise/Advertise.jsx'\nimport { AdminContacts } from './pages/AdminContacts/AdminContacts.jsx'\nimport { CalendarAdmin } from './pages/CalendarAdmin/CalendarAdmin.jsx'\nimport { HashRouter as Router } from 'react-router-dom';\nimport { updateLoggedInUser } from './actions/userAction.js';\nimport StorageService from './services/StorageService';\nimport UserService from './services/UserService';\n\nexport function _App(props) {\n\n  useEffect(() => {\n    (async () => {\n    let user = await StorageService.loadFromStorage('tori-user')\n    if (user&&!props.loggedInUser) {\n     await props.updateLoggedInUser(await UserService.getUser(user.phone))\n    }\n  })()\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch >\n          <Route path=\"/calendar\" component={CalendarApp} />\n          <Route path=\"/cancelAppointment\" component={CancelAppointment} />\n          <Route path=\"/form\" component={SubmitForm} />\n          <Route path=\"/treatments\" component={TreatmentApp} />\n          <Route path=\"/editTreatments\" component={EditTreatments} />\n          <Route path=\"/treatmentToEdit\" component={TreatmentToEdit} />\n          <Route path=\"/signupOrLogin\" component={SignupOrLogin} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/editUser\" component={EditUser} />\n          <Route path=\"/calendarAdmin\" component={CalendarAdmin} />\n          <Route path=\"/advertise\" component={Advertise} />\n          <Route path=\"/adminContacts\" component={AdminContacts} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    loggedInUser: state.UserReducer.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  updateLoggedInUser\n}\n\nexport const App = connect(mapStateProps, mapDispatchToProps)(_App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}