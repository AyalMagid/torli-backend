{"version":3,"sources":["styles/img/handlight.png","styles/img/hex3.png","styles/img/oo.png","styles/img/ornailsart2.png","reducers/TreatmentReducer.js","reducers/ModalReducers.js","reducers/StepperReducer.js","reducers/CalendarReducer.js","history.js","services/HttpService.js","services/StorageService.js","services/UserService.js","reducers/UserReducer.js","store.js","services/StoreService.js","cmps/TabsApp/TabsApp.jsx","cmps/StepperApp/StepperApp.jsx","cmps/AppHeader/AppHeader.jsx","services/UtilsService.js","services/TreatmentService.js","actions/treatmentActions.js","actions/userAction.js","cmps/SwitchApp/SwitchApp.jsx","cmps/TreatmentPreview/TreatmentPreview.jsx","cmps/TreatmentList/TreatmentList.jsx","cmps/TreatmentTitle/TreatmentTitle.jsx","actions/stepperActions.js","cmps/NavBtns/NavBtns.jsx","services/MotionService.js","cmps/LoaderApp/LoaderApp.jsx","pages/TreatmentApp/TreatmentApp.jsx","cmps/EditTreatmentPreview/EditTreatmentPreview.jsx","cmps/EditTreatmentList/EditTreatmentList.jsx","pages/EditTreatments/EditTreatments.jsx","pages/TreatmentToEdit/TreatmentToEdit.jsx","cmps/DailySlots/DailySlots.jsx","cmps/TimeslotList/TimeslotList.jsx","services/EventService.js","services/EmailService.js","services/CalendarService.js","actions/calendarActions.js","pages/CalendarApp/CalendarApp.jsx","actions/modalAction.js","cmps/Modal/Modal.jsx","pages/SubmitForm/SubmitForm.jsx","pages/CancelAppointment/CancelAppointment.jsx","pages/SignupOrLogin/SignupOrLogin.jsx","pages/Login/Login.jsx","cmps/EditButton/EditButton.jsx","pages/Signup/Signup.jsx","services/AdvertiseService.js","pages/HomePage/HomePage.jsx","pages/EditUser/EditUser.jsx","pages/Advertise/Advertise.jsx","pages/AdminContacts/AdminContacts.jsx","pages/Contacts/Contacts.jsx","pages/AppointmentOrBlock/AppointmentOrBlock.jsx","pages/AppointmentFreq/AppointmentFreq.jsx","pages/BlockHours/BlockHours.jsx","pages/BlockConfermation/BlockConfermation.jsx","cmps/ModalButton/ModalButton.jsx","pages/CalendarAdmin/CalendarAdmin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","treatment","treatments","duration","availableDuration","pickedTreatmentsCount","isModalOpen","step","steps","calendar","timeSlots","hoursToBlock","slotToBlock","confirmedEventId","isDayFullyAvailable","tableModel","recurrence","isRecurrence","freq","count","history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","saveToStorage","key","value","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","removeFromStorage","removeItem","getUsers","getUser","phone","HttpService","addUser","removeUser","updateUser","user","oldPhone","StorageService","unshiftCellByPhoneNumber","users","idx","findIndex","splicedCell","splice","isMarked","copySplicedCell","unshift","getOwner","workPlace","_sortUsers","sort","b","name","localeCompare","isCreateadByAdmin","isAdmin","_id","loggedInUser","userToSchedule","isAdShown","userPhoneInContactSignup","owner","rootReducer","combineReducers","TreatmentReducer","state","action","type","filter","treatmentId","CalendarReducer","slotsRangeToBlock","StepperReducer","UserReducer","UserService","ModalReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","initApp","dispatch","TabsApp","withRouter","connect","props","React","useState","setValue","location","useLocation","useEffect","pathname","style","width","boxShadow","color","AppBar","position","Tabs","onChange","event","newValue","className","Tab","label","onClick","StoreService","id","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","StepperApp","activeStep","classes","Stepper","map","index","labelProps","Step","StepLabel","AppHeader","headerConstrains","setHeaderConstrains","initWithFalse","isHeader","noHeaderMargin","isStepper","isTabs","englishToHebrew","word","convertedWord","getIsosDate","getTimeSlotsForPreview","getDailySlotsForPreview","changeTimeForDisplay","idGen","Math","random","toString","substr","calculateEndTime","time","hours","slice","minutes","floor","checkDigitsAndAddZerosIfNeeded","arrayToString","pickedTreatments","treatmentsType","forEach","tr","length","convertDateToIsraelisDisplay","convertDateTo4DigitsDisplay","date","dateParts","split","getDayByHebrewWord","getEventReadyForDisplay","filteredEvents","startTime","gUtcDiff","endTime","email","convertNumberToWords","validateEmail","test","String","toLowerCase","getWeekIsosDatesForCalendar","dayByNum","weeklyDates","getDay","Date","getTime","i","isosDate","start","end","checkIfTsInRange","tsToCompare","tsToCompareWithAddedHours","timeRangeBySlots","occupied","includes","rowspan","getMonthByIdx","timeToDisplay","getSplitedEventDesc","desc","splitedDesc","convertDurationToApiStr","calculateDuration","startHours","startMinutes","endHours","endMinutes","dateToDisplay","getArray","num","priceOrDuration","arr","daysAfterOrBefore","recurrenceAvailbilityCheck","dateCopy","setDate","getDate","toISOString","slotsRanges","timeslotsByConstraints","sr","concat","apply","timeslot","slotsToRender","year","month","day","min","nextTimeSlot","getHours","getMinutes","slotToRender","diff","digit","getTreatments","getById","remove","update","updateTreatments","updatedTreatment","getMarkedTreatmentsStr","marked","UtilsService","loadTreatments","TreatmentService","setTreatments","setTreatment","_setTreatment","_updateTreatmentsCount","_updateTreatments","_updateDuration","_updateAvailbleDuration","loadUsers","setUsers","updateUsers","_updateUsers","err","_setOwner","updateLoggedInUser","_updateLoggedInUser","updateUserToSchedule","_updateUserToSchedule","updateUserPhoneInContactSignup","_updateUserPhoneInContactSignup","direction","jss","plugins","jssPreset","rtl","SwitchApp","checked","setChecked","StylesProvider","ThemeProvider","Switch","updateDuration","updatePickedTreatments","target","inputProps","_TreatmentPreview","treatmentsToUpdate","setState","updateTreatmentsCount","this","price","UtilService","Component","mapDispatchToProps","TreatmentPreview","TreatmentList","getTreatmentsToUpdate","TreatmentTitle","isCalendarAdmin","isDurationValid","class","isClicked","updateActiveStep","_updateActiveStep","NavBtns","activeBtn","setActiveBtn","isNextBtnDisable","changeStep","setAppointment","handleOpen","updateTitleProp","disabled","getMotionStyle","in","opacity","x","out","stiffness","textAlign","LoaderApp","height","timeout","setUserToSchedule","_setUserToSchedule","TreatmentApp","setIsClicked","div","initial","exit","animate","variants","MotionService","transition","_EditTreatmentPreview","pickedTreatment","EditTreatmentPreview","EditTreatmentList","arr2","amount","credentials","setCredentials","minSelected","setMinSelected","handleChange","field","ar","selected","size","DailySlots","ts","onAppointmentChoice","TimeslotList","Object","keys","isDateFullyBooked","slotsForPreview","saveConfirmedEvent","getMongoEventByEventCalendarId","evId","getReccurenceMongoEventBySubStrId","getEventByPhone","removeEventFromDB","subStrId","sendEmail","isConfirmation","businessName","bodyText","emailObj","getCalendar","getAvailbleDailySlots","addEventToCalendar","addRecurrenceToCalendar","removeEventFromCalendar","getEventsFromCalendar","buildWeeklyModel","weeklyEvents","tableCellsModel","tsIdx","dailyEvents","dailyIdx","isCellInUsed","ev","eventIdx","getAvailbleDuration","table","cellPos","slotSize","durationAvalability","getHoursToBlock","timeSlot","availableSlots","pop","blockSlotRange","getDatesWeeklyRange","days","firstDay","lastDay","timeRange","eventName","creatorName","creatorEmail","token","accountId","endtTime","dailySlots","confirmedEvent","eventId","calendarId","EventService","EmailService","checkRecurrenceAvailbility","fullDate","firstTime","occupiedDates","time1","time2","setTimeSlots","updateHoursToBlock","_updateHoursToBlock","materialTheme","overrides","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersDay","daySelected","dayDisabled","current","loadTimeSlots","pickedDate","secondDay","thirdDay","CalendarService","firstDaySlots","secondDaySlots","thirdDaySlots","CalendarApp","selectedDate","handleDateChange","loader","setLoader","calendarTitle","seTcalendarTitle","pickerRedTitle","setPickerRedTitle","isOpen","setIsOpen","utils","DateFnsUtils","locale","heLocale","DatePicker","disablePast","shouldDisableDate","variant","okLabel","cancelLabel","open","onOpen","onClose","format","disableToolbar","InputProps","disableUnderline","keyboardbuttonprops","onSwiped","eventData","setTimeout","onSwipeDirection","updateIsModalOpen","_updateIsModalOpen","Modal","modalClass","setModalClass","isAdminContacts","handleClose","modalContent","SubmitForm","markedTreatmetns","setMarkedTreatmetns","dateIsraeliDisplay","isCalendarAdminForm","CancelAppointment","getEventsByPhone","clickedUser","eventsToCancel","setEventsToCancel","pageCount","setPageCount","eventsAmount","setEventsAmount","then","events","now","eventToRmove","find","cancelAppointment","SignupOrLogin","to","Login","setPhone","password","setPassword","togglePhoneValidation","setTogglePhoneValidation","phoneIsValid","setPhoneIsValid","userFromDb","handleClickOpen","handleModalClickOpen","setOpen","dialogTitle","setDialogTitle","close","pass","openModal","setOpenModal","handleModalClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","Button","aria-describedby","EditButton","isContactsPath","toggleValidations","setUser","isValid","Transition","forwardRef","ref","Slide","Signup","toggleNameValidation","setToggleNameValidation","toggleEmailValidation","setToggleEmailValidation","setIsValid","navToContacts","emailIsValid","checkValidation","maxlength","TransitionComponent","keepMounted","getAd","updateAd","advertise","toggleAdMode","isAdMoneOn","createAd","updateIsAdShown","_updateIsAdShown","setOwner","HomePage","changeRoute","route","ad","useParams","setAdvertise","document","body","backgroundImage","require","AdvertiseService","content","isAdModeOn","src","workPlaceTitle","workPlaceSubTitle","href","facebook","instagram","wazeUrl","EditUser","isNameEditing","setIsNameEditing","isNameDisabled","setIsNameDisabled","nameBorderBottom","setNameBorderBottom","nameFocus","useRef","setIsPhoneEditing","setIsPhoneDisabled","setPhoneBorderBottom","setIsEmailEditing","setIsEmailDisabled","setEmailBorderBottom","focus","isPhoneEditing","isPhoneDisabled","phoneBorderBottom","phoneFocus","isEmailEditing","isEmailDisabled","emailBorderBottom","emailFocus","toggleEditing","Advertise","advertiseContent","setAdvertiseContent","setIsAdModeOn","cols","rows","AdminContacts","searchTerm","setSearchTerm","setClickedUser","appointmentsModalIsOpen","setAppointmentsModalIsOpen","placeholder","saveClickedUser","Contacts","markClickedUser","AppointmentOrBlock","updateRecurrence","_updateRecurrence","AppointmentFreq","freqOrCount","recurrenceCopy","for","updateSlotToBlock","_updateSlotToBlock","BlockHours","clickedSlotRange","slotsRange","slotRange","BlockConfermation","ModalButton","handleModalRoute","checkBtnValidation","approvedCounter","updateAvailbleDuration","updateIsDayFullyAvailable","_updateIsDayFullyAvailable","updateTableModel","_updateTableModel","CalendarAdmin","constrains","workingHours","tempEventToRmoveId","setTempEventToRmoveId","eventToRmoveId","setEventToRmove","prevEventsToDisplay","setPrevEventsToDisplay","reccurenceBlock","setReccurenceBlock","modalSubJect","setModalSubJect","title","text","setModalContent","isTempModeOn","setIsTempModeOn","setWeeklyDates","tableCells","setTableCells","occDates","setOccupiedDates","getMonth","setMonth","getWeeklyEvents","eventsToDisplay","setEventsToDisplay","getDailyDates","daysForDisplay","setDaysForDisplay","eventsIds","weeklyRange","openAppointmentsModal","dateToScheduale","cancelAppiontment","eventsToDisplayCopy","isTemp","isCancelApp","confirmedDeletedEvent","mongo","Promise","all","counter","cellIsRendered","evenOrOdd","range","rowSpan","checkIfClicked","mongoEvent","isApproved","cancelRecurrenceBlock","idToCompareWithMongo","reccurenceMongoEvent","tempEvent","startTimeTs","startTimeTsIdx","endTimeTs","endTimeTsIdx","isCellOccupied","j","prevEvents","confirmedBlockOrOccDates","Array","isArray","closeAppointmentsModal","d","path","exact","component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d804f8cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/handlight.34ad6669.png\";","module.exports = __webpack_public_path__ + \"static/media/hex3.1b35ebf6.png\";","module.exports = __webpack_public_path__ + \"static/media/oo.bb4ea92a.png\";","module.exports = __webpack_public_path__ + \"static/media/ornailsart2.193eb280.png\";","const INITIAL_STATE = {\n    treatment: null,\n    treatments: null,\n    duration:0,\n    availableDuration:0,\n    pickedTreatmentsCount:0\n}\n\nexport function TreatmentReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n\n        case 'SET_TREATMENTS':\n            return {\n                ...state,\n                treatments: action.treatments\n            }            \n        case 'SET_TREATMENT':\n            return {\n                ...state,\n                treatment: action.treatment\n            }    \n        case 'REMOVE_TREATMENT':\n        return {\n          ...state,\n          treatments: state.treatments.filter(treatment => treatment._id !== action.treatmentId)\n        };     \n        case 'UPDATE_TREATMENTS':\n        return {\n          ...state,\n          treatments:action.treatments \n        };   \n        \n        case 'UPDATE_PICKED_TREATMENTS_COUNT' :\n        return {\n          ...state,\n          pickedTreatmentsCount: state.pickedTreatmentsCount+(action.count)\n        };              \n        case 'UPDATE_DURATION':\n        return {\n          ...state,\n          duration: state.duration+(action.duration)\n        };                 \n        case 'UPDATE_AVAILBLE_DURATION':\n        return {\n          ...state,\n          availableDuration: state.availableDuration+(action.availableDuration)\n        };                 \n        case 'INIT_DURATION':\n        return {\n          ...state,\n          duration:0,\n          availableDuration:0\n        };           \n        case 'INIT_PICKED_TREATMENTS_COUNT':\n        return {\n          ...state,\n          pickedTreatmentsCount:0\n        };           \n      \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    isModalOpen:false\n}\n\nexport function ModalReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'UPDATE_IS_MODAL_OPEN':\n            return {\n                ...state,\n                isModalOpen: action.isModalOpen\n            }\n        default:\n            return state;\n    }\n}\n","const INITIAL_STATE = {\n  step:0,\n  steps:['בחירת טיפולים ', ' בחירת תור', 'אישור']\n}\n\nexport function StepperReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'UPDATE_ACTIVE_STEP':\n            return {\n                ...state,\n                step:action.step\n            }       \n       \n        default:\n            return state;\n    }\n}\n\n","const INITIAL_STATE = {\n    calendar: null,\n    timeSlots: null,\n    hoursToBlock:null,\n    slotToBlock:null,\n    confirmedEventId:null,\n    isDayFullyAvailable:false,\n    tableModel:[],\n    recurrence: {isRecurrence:false, freq:'DAILY', count: 1}\n}\n\nexport function CalendarReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {      \n        \n        case 'SET_CALENDAR':\n            return {\n                ...state,\n                calendar: action.calendar\n            }          \n        case 'SET_TIMESLOTS':\n            return {\n                ...state,\n                timeSlots: action.timeSlots\n            }          \n        case 'UPDATE_HOURS_TO_BLOCK':\n            return {\n                ...state,\n                slotsRangeToBlock: action.slotsRangeToBlock\n            }          \n        case 'UPDATE_SLOT_TO_BLOCK':\n            return {\n                ...state,\n                slotToBlock: action.slotToBlock\n            }          \n        case 'UPDATE_IS_DAY_FULLY_AVAILABLE':\n            return {\n                ...state,\n                isDayFullyAvailable: action.isDayFullyAvailable\n            }          \n        case 'UPDATE_RECURRENCE':\n            return {\n                ...state,\n                recurrence: action.recurrence\n            }          \n        case 'UPDATE_TABLE_MODEL':\n\n            return {\n                ...state,\n                tableModel : action.tableModel\n            }          \n\n        default:\n            return state;\n    }\n}\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nexport default history;","import history from '../history';\nimport Axios from 'axios';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\n\nexport default {\n    get(endpoint, data){\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data){\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data){\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data){\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\n\nasync function ajax(endpoint, method='get', data=null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n          history.push('/login');\n        }\n        throw err;\n    }\n}","export default {\n    saveToStorage,\n    loadFromStorage,\n    removeFromStorage\n}\n\nfunction saveToStorage(key, value) {\n    var str = JSON.stringify(value);\n    localStorage.setItem(key, str);\n}\nfunction removeFromStorage(key) {\n    localStorage.removeItem(key);\n}\n\nfunction loadFromStorage(key) {\n    var str = localStorage.getItem(key)\n    return JSON.parse(str)\n}","import HttpService from './HttpService'\nimport StorageService from \"../services/StorageService\";\n\nexport default {\n    getUsers,\n    getUser,\n    addUser,\n    removeUser,\n    updateUser,\n    unshiftCellByPhoneNumber,\n    // routim\n    getOwner\n}\n\nfunction _sortUsers(users) {\n    return users.sort((a, b) => a.name.localeCompare(b.name))\n}\n\n// async function getUsers() {\n//     const users = await HttpService.get('user')\n//     return _sortUsers(users)\n// }\n\n//  routim\nasync function getUsers(workPlace) {\n    console.log(workPlace)\n    const users = await HttpService.get(`user/workPlace/${workPlace}`)\n    return _sortUsers(users)\n}\n\nfunction getUser(phone) {\n    return HttpService.get(`user/${phone}`)\n}\n\n// routim\nfunction getOwner(workPlace){\n    return HttpService.get(`user/owner/${workPlace}`)\n}\n\nfunction updateUser(user) {\n    user.oldPhone = StorageService.loadFromStorage('tori-user').phone\n    StorageService.saveToStorage('tori-user', user)\n    return HttpService.put(`user/`, user)\n}\n\nasync function addUser(user, isCreateadByAdmin) {\n    user.isMarked = false\n    if (!isCreateadByAdmin) StorageService.saveToStorage('tori-user', user)\n    //need to come from backend env\n    // if (user.phone === '123456789') user.isAdmin = true else\n    user.isAdmin = false\n    return await HttpService.post('user', user)\n}\n\nasync function removeUser(_id) {\n    StorageService.saveToStorage('tori-user', '')\n    return HttpService.delete(`user/${_id}`)\n}\n\n\nfunction unshiftCellByPhoneNumber(users, phone) {\n    const idx = users.findIndex(user => user.phone === phone)\n    let splicedCell = users.splice(idx, 1)[0]\n    splicedCell.isMarked = true\n    let copySplicedCell = { ...splicedCell }\n    users.unshift(copySplicedCell)\n    return users\n}\n\n\n","import UserService from '../services/UserService';\n\nconst INITIAL_STATE = {\n    users: [],\n    loggedInUser:null,\n    userToSchedule: null,\n    isAdShown: false,\n    userPhoneInContactSignup: '',\n    // routim\n    owner:null\n}\n\nexport function UserReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                   users: (state.userPhoneInContactSignup) ? UserService.unshiftCellByPhoneNumber(action.users, state.userPhoneInContactSignup) : action.users\n            }\n        case 'UPDATE_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'UPDATE_LOGEDIN_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n        case 'SET_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n            // routim\n        case 'SET_OWNER':\n            return {\n                ...state,\n                owner: action.owner\n            }\n        case 'UPDATE_USER_TO_SCHEDULE':\n            return {\n                ...state,\n                userToSchedule: action.userToSchedule\n            }\n        case 'UPDATE_IS_AD_SHOWN':\n            return {\n                ...state,\n                isAdShown: action.isAdShown\n            }\n        case 'UPDATE_NUMBER_IN_CONTACT_SIGNUP':\n            return {\n                ...state,\n                userPhoneInContactSignup: action.userPhoneInContactSignup\n            }\n\n        default:\n            return state;\n    }\n}\n","import { TreatmentReducer } from './reducers/TreatmentReducer';\nimport { ModalReducer } from './reducers/ModalReducers';\nimport { StepperReducer } from './reducers/StepperReducer';\nimport { CalendarReducer } from './reducers/CalendarReducer';\nimport { UserReducer } from './reducers/UserReducer';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    TreatmentReducer,\n    CalendarReducer,\n    StepperReducer,\n    UserReducer,\n    ModalReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import {store} from \"../store.js\";\n\nexport default {\n    initApp\n}\n\nfunction initApp() {\n    store.dispatch({type: 'UPDATE_ACTIVE_STEP',step:0})\n    store.dispatch({type: 'SET_TREATMENT', treatment:null})\n    store.dispatch({type: 'SET_TREATMENTS', treatments:null})\n    store.dispatch({type: 'SET_TIMESLOTS',timeSlots:null})\n    store.dispatch({type: 'INIT_DURATION'})\n    store.dispatch({type: 'INIT_PICKED_TREATMENTS_COUNT'})\n}\n\n","import React, {useEffect} from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StoreService from '../../services/StoreService';\nimport './TabsApp.scss';\n\nexport function _TabsApp(props) {\n  const [value, setValue] = React.useState(0);\n  const location = useLocation()\n  useEffect(() => {(location.pathname !== '/cancelAppointment')? setValue(0): setValue(1)},[value,location]);\n\n  // tabs style\n  const style = {\n    width:'28%',\n    boxShadow:'none',\n    color:'white'\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue === 1) {\n      props.history.push('/cancelAppointment')\n    } else {\n      props.history.push('/treatments')\n    }\n  };\n\n  function navToHomePage() {\n    StoreService.initApp()\n    // props.history.push('/')\n\n    // routim\n    props.history.push(`/${props.owner.workPlace}`)\n}\n\n  return (\n\n    <AppBar position=\"static\" style={{boxShadow:'none'}} >\n      <Tabs value={value} onChange={handleChange} className=\"tabs flex space-between\">\n        <Tab label=\"זימון תור\" style={style}/>\n        <Tab label=\"התורים שלי\" style={style}/>\n        <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i  className=\"fas fa-tasks\"></i></h2>\n      </Tabs>\n    </AppBar>\n  );\n}\n\nfunction mapStateProps(state) {\n  return {\n      // routim\n      owner:state.UserReducer.owner\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\n\nexport const TabsApp = withRouter(connect(mapStateProps, mapDispatchToProps)(_TabsApp))\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {MuiThemeProvider,createMuiTheme,makeStyles} from \"@material-ui/core/styles\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport './StepperApp.scss'\n\n// StepperApp style\nconst theme = createMuiTheme({\n// add margin left from the circules\n  palette: {\n    primary: {\n      main: '#273650'\n    }\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  }\n}));\n\n\nexport function _StepperApp(props) {\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n\n  <MuiThemeProvider theme={theme}>\n      <Stepper activeStep={props.activeStep}>\n        {props.steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step  key={label} {...stepProps}>\n              <StepLabel  {...labelProps}>{label}  </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n\n\nfunction mapStateProps(state) {\n  return {\n    steps: state.StepperReducer.steps,\n    activeStep:state.StepperReducer.step\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const StepperApp = connect(mapStateProps, mapDispatchToProps)(_StepperApp)","import React, { useState, useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TabsApp } from '../TabsApp/TabsApp.jsx';\nimport { StepperApp } from '../StepperApp/StepperApp.jsx';\nimport StoreService from '../../services/StoreService';\nimport './AppHeader.scss';\n\n\nfunction _AppHeader(props) {\n\n    const location = useLocation()\n\n    const [headerConstrains, setHeaderConstrains] = useState(false)\n\n    useEffect(() => {\n        let initWithFalse = { isHeader: false, noHeaderMargin: false, isStepper: false, isTabs: false }\n        switch (location.pathname) {\n            case '/':\n                setHeaderConstrains(false)\n                break;\n            case '/calendarAdmin/':\n                setHeaderConstrains(false)\n                break;\n            case '/advertise':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/signupOrLogin':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/signup':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/login':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/treatments':\n                setHeaderConstrains({ ...initWithFalse, isStepper: true, isTabs: true })\n                break;\n            case '/calendar':\n                setHeaderConstrains({ ...initWithFalse, isStepper: true, isHeader: true, noHeaderMargin: true })\n                break;\n            case '/form':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, isStepper: true })\n                break;\n            case '/cancelAppointment':\n                setHeaderConstrains({ ...initWithFalse, isTabs: true })\n                break;\n            case '/editUser':\n                setHeaderConstrains({ ...initWithFalse, isHeader: true, noHeaderMargin: true })\n                break;\n            default:\n                setHeaderConstrains(false)\n        }\n    }, [location.pathname]);\n\n    function navToHomePage() {\n        StoreService.initApp()\n        // props.history.push('/')\n\n        // routim\n        props.history.push(`/${props.owner.workPlace}`)\n    }\n\n    return (\n        <>\n            {\n                (headerConstrains) &&\n                <div className={`${(headerConstrains.noHeaderMargin) ? 'app-header-no-margin' : 'app-header'}`}>\n                    {\n                        (headerConstrains.isHeader) ?\n                            <header className=\"flex upper-header align-center\">\n                                <h2 onClick={navToHomePage} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></h2>\n                            </header>\n                            :\n                            ''\n                    }\n                    {\n                        (headerConstrains.isTabs) ?\n                            <TabsApp />\n                            :\n                            ''\n                    }\n                    {\n                        (headerConstrains.isStepper) ?\n                            <StepperApp />\n                            :\n                            ''\n                    }\n                </div>\n            }\n        </>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\n\nexport const AppHeader = withRouter(connect(mapStateProps, mapDispatchToProps)(_AppHeader))\n\n\n\n\n\n","\n\nexport default {\n  englishToHebrew,\n  getIsosDate,\n  getTimeSlotsForPreview,\n  getDailySlotsForPreview,\n  changeTimeForDisplay,\n  idGen,\n  calculateEndTime,\n  arrayToString,\n  convertDateToIsraelisDisplay,\n  convertDateTo4DigitsDisplay,\n  getDayByHebrewWord,\n  getEventReadyForDisplay,\n  convertNumberToWords,\n  validateEmail,\n  getWeekIsosDatesForCalendar,\n  checkIfTsInRange,\n  getMonthByIdx,\n  timeToDisplay,\n  getSplitedEventDesc,\n  convertDurationToApiStr,\n  calculateDuration,\n  dateToDisplay,\n  getArray\n}\n\nvar gUtcDiff = 2\n\n// for half an hour slots = 2. 15 min slots will be 4 etc...\nvar gDividedHour = 2\n\nfunction englishToHebrew(word) {\n  let convertedWord\n  switch (word) {\n    case ('minutes'):\n      convertedWord = 'דק׳';\n      break;\n    case ('build'):\n      convertedWord = 'בנייה';\n      break;\n    case ('filling'):\n      convertedWord = 'מילוי';\n      break;\n    case ('medical-manicure'):\n      convertedWord = 'מניקור רפואי';\n      break;\n    case ('gel'):\n      convertedWord = 'לק ג׳ל';\n      break;\n    case ('medical-pedicure'):\n      convertedWord = 'פדיקור';\n      break;\n    case ('medical-pedicure-gel'):\n      convertedWord = 'פדיקור רפואי עם לק ג׳ל';\n      break;\n    case ('half-pedicure'):\n      convertedWord = 'חצי פדיקור';\n      break;\n    case ('half-pedicure-gel'):\n      convertedWord = 'חצי פדיקור עם ג׳ל';\n      break;\n    case ('eyebrows-mustache'):\n      convertedWord = 'גבות ושפם';\n      break;\n    default:\n      convertedWord = \"ברירת מחדל\"\n  }\n\n  return ' ' + convertedWord\n}\n//get a date and how many days before/after and returns only the date part by isos convention\nfunction getIsosDate(daysAfterOrBefore, date = new Date(), recurrenceAvailbilityCheck = false) {\n  let dateCopy = new Date(date.getTime())\n  dateCopy.setDate(dateCopy.getDate() + daysAfterOrBefore)\n  if ((dateCopy.getDay() === 6) && (!recurrenceAvailbilityCheck)) {\n    return ''\n  }\n  dateCopy = dateCopy.toISOString().slice(0, 10)\n  return dateCopy\n}\n\nfunction getWeekIsosDatesForCalendar(dayByNum, date) {\n  let weeklyDates = []\n  if (date.getDay() === 6) {\n    date = new Date(date.getTime() + (1000 * 60 * 60 * 24));\n    dayByNum = 1\n  }\n  switch (dayByNum) {\n    case 1:\n      for (var i = 0; i < 6; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 2:\n      for (var i = -1; i < 5; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 3:\n      for (var i = -2; i < 4; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 4:\n      for (var i = -3; i < 3; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 5:\n      for (var i = -4; i < 2; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    case 6:\n      for (var i = -5; i < 1; i++) {\n        weeklyDates.push(getIsosDate(i, date))\n      }\n      break;\n    default:\n      console.log('Err with getting week dates')\n  }\n  return weeklyDates.map(isosDate => {\n    return { start: `${isosDate}T06:00:00Z`, end: `${isosDate}T18:00:00Z` }\n  })\n}\n\nfunction convertDurationToApiStr(duration) {\n  return duration / 60 + 'H'\n}\n\nfunction timeToDisplay(time) {\n  if (time.slice(0, 1) === '0') { time = time.slice(1, 5) }\n  return time\n}\n\nfunction dateToDisplay(date) {\n  if (date.slice(0, 1) === '0') { date = date.slice(1, 10) }\n  return date\n}\n\nfunction getDailySlotsForPreview(slotsRanges, duration) {\n  const timeslotsByConstraints = slotsRanges.map(sr => getTimeSlotsForPreview(sr, duration))\n  const mergedTimeSlotsToRender = [].concat.apply([], timeslotsByConstraints);\n  return mergedTimeSlotsToRender\n}\n\nfunction getTimeSlotsForPreview(timeslot, duration) {\n  let slotsToRender = [];\n  let year = timeslot.start.slice(0, 4)\n  let month = timeslot.start.slice(5, 7)\n  let day = timeslot.start.slice(8, 10)\n  let hours = +timeslot.start.slice(11, 13)\n  let min = timeslot.start.slice(14, 16)\n  const startTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  year = timeslot.end.slice(0, 4)\n  month = timeslot.end.slice(5, 7)\n  day = timeslot.end.slice(8, 10)\n  hours = +timeslot.end.slice(11, 13)\n  min = timeslot.end.slice(14, 16)\n  const endTime = new Date(year, month - 1, day, hours + gUtcDiff, min, 0, 0);\n  let nextTimeSlot = startTime//maby need copy\n  hours = nextTimeSlot.getHours()\n  min = nextTimeSlot.getMinutes()\n  let slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n  if ((nextTimeSlot.getTime() + (duration * 60 * 1000)) <= endTime.getTime()) { slotsToRender.push(slotToRender) }\n  while ((nextTimeSlot.getTime() + (duration * 60 * 1000)) < endTime.getTime()) {\n    nextTimeSlot = new Date(nextTimeSlot.getTime() + ((60 * 60 * 1000) / gDividedHour));//adding half an hour\n    hours = nextTimeSlot.getHours()\n    min = nextTimeSlot.getMinutes()\n    slotToRender = checkDigitsAndAddZerosIfNeeded(hours) + ':' + checkDigitsAndAddZerosIfNeeded(min);\n    slotsToRender.push(slotToRender)\n  }\n  return slotsToRender\n}\n\n//get an hour and returns full isos date (including the time) reducing the diff from the hours\nfunction changeTimeForDisplay(time, diff) {\n  let hours = +time.slice(0, 2) - diff\n  let minutes = time.slice(3, 5)\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + (minutes)\n}\n\n\nfunction calculateEndTime(time, duration) {\n  let hours = +time.slice(0, 2)\n  let minutes = time.slice(3, 5)\n\n  if (duration % 60 === 30) {\n    if (+minutes === 30) {\n      hours += Math.floor(duration / 60) + 1\n      minutes = '00'\n    }\n    else {\n      hours += Math.floor(duration / 60)\n      minutes = '30'\n    }\n  }\n  else {\n    hours += (duration / 60)\n  }\n\n  hours = checkDigitsAndAddZerosIfNeeded(hours)\n  return hours + ':' + minutes\n}\n\nfunction checkDigitsAndAddZerosIfNeeded(digit) {\n  digit = (digit < 10) ? '0' + digit : digit\n  return digit\n}\n\nfunction calculateDuration(start, end) {\n  let startHours = +start.slice(0, 2) * 60\n  let startMinutes = +start.slice(3, 5)\n  let endHours = +end.slice(0, 2) * 60\n  let endMinutes = +end.slice(3, 5)\n  const duration = (endHours - startHours + endMinutes - startMinutes)\n  return duration\n}\n\n\nfunction idGen() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\n\nfunction arrayToString(pickedTreatments) {\n  let treatmentsType = ''\n  pickedTreatments.forEach((tr, idx) => {\n    if (pickedTreatments.length !== idx + 1) treatmentsType += tr.name + ', '\n    else treatmentsType += tr.name\n  })\n  return treatmentsType\n}\n\nfunction convertDateToIsraelisDisplay(date) {\n  const dateParts = (date).split('-')\n  return `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`\n}\n\nfunction convertDateTo4DigitsDisplay(date) {\n  const dateParts = (date).split('-')\n  if (dateParts[2].slice(0, 1) === '0') { return `${dateParts[2].slice(1, 2)}.${dateParts[1]}` }\n  else { return `${dateParts[2].slice(0, 2)}.${dateParts[1]}` }\n}\n\nfunction getDayByHebrewWord(idx) {\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  return days[idx]\n}\n\n\nfunction getEventReadyForDisplay(filteredEvents) {\n  return filteredEvents.map(event => {\n    return {\n      id: event._id,\n      treatments: event.treatments,\n      startTime: changeTimeForDisplay(event.startTime, gUtcDiff * -1),\n      endTime: changeTimeForDisplay(event.endTime, gUtcDiff * -1),\n      date: convertDateToIsraelisDisplay(event.date),\n      email: event.email,\n      name: event.name,\n    }\n  })\n}\n//returns an object with boolean if time slot match the range and the amount of time slots\nfunction checkIfTsInRange(tsToCompare, startTime, endTime, duration) {\n\n  //adding 3 hours to match the time differnce\n  const tsToCompareWithAddedHours = changeTimeForDisplay(tsToCompare, gUtcDiff * -1)\n  const timeRangeBySlots = getDailySlotsForPreview([{ start: startTime, end: endTime }], duration)\n  if (timeRangeBySlots.length) {\n    return { occupied: timeRangeBySlots.includes(tsToCompareWithAddedHours), rowspan: timeRangeBySlots.length }\n  }\n  else {\n    if (startTime.slice(11, 16) === tsToCompare) {\n      return { occupied: true, rowspan: 1 }\n    } else {\n      return { occupied: false, rowspan: 1 }\n    }\n  }\n}\n\nfunction convertNumberToWords(idx) {\n  const words = ['אחד', 'שני', 'שלושה', 'ארבעה', 'חמשה', 'ששה', 'שבעה', 'שמונה', 'תשעה', 'עשרה', 'אחד עשר', 'שתיים עשר', 'שלושה עשר', 'ארבע עשר', 'חמישה עשר', 'ששה עשר']\n  return words[idx - 1]\n}\n\nfunction getMonthByIdx(idx) {\n  const months = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\n  return months[idx - 1]\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction getSplitedEventDesc(desc) {\n  let splitedDesc = desc.split(' - ')\n  return { name: splitedDesc[0], treatment: splitedDesc[1] }\n}\n\nfunction getArray(num, priceOrDuration) {\n  let arr = []\n  if (priceOrDuration) arr[0] = priceOrDuration\n  for (var i = 0; i < num; i++) {\n    arr.push(i)\n  }\n  return arr\n}","import HttpService from './HttpService'\nimport UtilsService from \"../services/UtilsService\";\n\nexport default {\n    getTreatments,\n    getById,\n    remove,\n    update,\n    updateTreatments,\n    getMarkedTreatmentsStr\n}\n\n// update only the store not mongo DB\nfunction updateTreatments(treatments, updatedTreatment){\n    const idx = treatments.findIndex(tr => tr._id === updatedTreatment._id)\n    treatments[idx] = updatedTreatment\nreturn treatments\n}\n\nfunction getMarkedTreatmentsStr(treatments) {\n    treatments = (treatments.filter(tr => tr.marked))\n    return UtilsService.arrayToString(treatments)\n}\n\n// comunicate with backend\n// function getTreatments() {\n//     return HttpService.get('treatment')\n// }\n\n// routim\nfunction getTreatments(workPlace) {\n    return HttpService.get(`treatment/owner/${workPlace}`)\n}\n\nfunction getById(treatmentId) {\n    return HttpService.get(`treatment/${treatmentId}`)\n}\n\nfunction remove(treatmentId) {\n    return HttpService.delete(`treatment/${treatmentId}`)\n}\n\nfunction update(treatment) {\n    return HttpService.put(`treatment/${treatment._id}`, treatment)\n}","import TreatmentService from '../services/TreatmentService';\n\n\n// export function loadTreatments() {\n  \n//   return async dispatch => {\n//     try {\n//       const treatments = await TreatmentService.getTreatments();\n//       dispatch(setTreatments(treatments));\n   \n//     } catch (err) {\n//       console.log('TreatmentActions: err in loadTreatments', err);\n//     };\n//   }\n// }\n\n// routim \nexport function loadTreatments(workPlace) {\n  return async dispatch => {\n    try {\n      const treatments = await TreatmentService.getTreatments(workPlace);\n      dispatch(setTreatments(treatments));\n   \n    } catch (err) {\n      console.log('TreatmentActions: err in loadTreatments', err);\n    };\n  }\n}\n\nexport function setTreatments(treatments) {\n  return {\n    type: 'SET_TREATMENTS',\n    treatments\n  };\n}\n\nexport function setTreatment(treatment) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_setTreatment(treatment)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\nexport function _setTreatment(treatment) {\n  return {\n    type: 'SET_TREATMENT',\n    treatment\n  };\n}\n\n\nexport function updateTreatmentsCount(count) {\n  return async dispatch => {\n    try {\n      await \n      dispatch((_updateTreatmentsCount(count)));\n    } catch (err) {\n      console.log('TreatmentActions: err in setTreatment', err);\n    }\n  };\n}\n\n\nexport function _updateTreatmentsCount(count) {\n  return {\n    type: 'UPDATE_PICKED_TREATMENTS_COUNT',\n    count\n  };\n}\n\n\n\nexport function removeTreatment(treatmentId) {\n  return async dispatch => {\n    try {\n      await TreatmentService.remove(treatmentId);\n      dispatch(_removeTreatment(treatmentId));\n    } catch (err) {\n      console.log('TreatmentActions: err in removeTreatment', err);\n    }\n  };\n}\n\nfunction _removeTreatment(treatmentId) {\n  return {\n    type: 'REMOVE_TREATMENT',\n    treatmentId\n  };\n}\n\nexport function updateTreatments(treatments) {\n  console.log(treatments)\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateTreatments(treatments));\n    } catch (err) {\n      console.log('TreatmentActions: err in updateTreatments', err);\n    }\n  };\n}\n\nexport function _updateTreatments(treatments) {\n  return {\n    type: 'UPDATE_TREATMENTS',\n    treatments\n  };\n}\n\n\n\nexport function updateDuration(duration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateDuration(duration));\n    } catch (err) {\n      console.log('TreatmentActions: err in addDuration', err);\n    }\n  };\n}\n\nexport function _updateDuration(duration) {\n    return {\n      type: 'UPDATE_DURATION',\n      duration\n    };\n}\n\nexport function initDuration() {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_initDuration());\n    } catch (err) {\n      console.log('ERR WITH initDuration', err);\n    }\n  };\n}\n\nfunction _initDuration() {\n  return {\n    type: 'INIT_DURATION'\n  };\n}\n\n\nexport function updateAvailbleDuration(availableDuration) {\n  return async dispatch => {\n    try {\n      await \n      dispatch(_updateAvailbleDuration(availableDuration));\n    } catch (err) {\n      console.log('ERR WITH updateAvailbleDuration', err);\n    }\n  };\n}\n\nfunction _updateAvailbleDuration(availableDuration) {\n  return {\n    type: 'UPDATE_AVAILBLE_DURATION',\n    availableDuration\n  };\n}\n","import UserService from '../services/UserService';\nimport StorageService from '../services/StorageService';\n\n// export function loadUsers() {\n//   return async dispatch => {\n//     try {\n//       const users = await UserService.getUsers();\n//       dispatch(setUsers(users));\n//     } catch (err) {\n//       console.log('userActions: err in loadUsers', err);\n//     };\n//   }\n// }\n// routim\nexport function loadUsers(workPlace) {\n  console.log('action ', workPlace)\n  return async dispatch => {\n    try {\n      const users = await UserService.getUsers(workPlace);\n      dispatch(setUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users\n  };\n}\n\nexport function updateUsers(users) {\n  return async dispatch => {\n    try {\n      dispatch(_updateUsers(users));\n    } catch (err) {\n      console.log('userActions: err in loadUsers', err);\n    };\n  }\n}\n\nexport function _updateUsers(users) {\n  return {\n    type: 'UPDATE_USERS',\n    users\n  };\n}\n\n// routim\nexport function setOwner(owner) {\n  return async dispatch => {\n    try {\n      dispatch(_setOwner(owner));\n    } catch (err) {\n      console.log('userActions: err in setting owner', err);\n    };\n  }\n}\n\nexport function _setOwner(owner) {\n  return {\n    type: 'SET_OWNER',\n    owner\n  };\n}\n\nexport function updateLoggedInUser(loggedInUser) {\n  return async dispatch => {\n    try {\n      dispatch(_updateLoggedInUser(loggedInUser));\n    } catch (err) {\n      console.log('userActions: err in updateUser', err);\n    };\n  }\n}\n\nexport function _updateLoggedInUser(loggedInUser) {\n  return {\n    type: 'UPDATE_LOGEDIN_USER',\n    loggedInUser\n  };\n}\n\n\nexport function setUserToSchedule() {\n  return dispatch => {\n    const userToSchedule = StorageService.loadFromStorage('tori-user');\n    dispatch(_setUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _setUserToSchedule(userToSchedule) {\n  return {\n    type: 'SET_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\n\nexport function updateUserToSchedule(userToSchedule) {\n  return dispatch => {\n    dispatch(_updateUserToSchedule(userToSchedule));\n  }\n}\n\nexport function _updateUserToSchedule(userToSchedule) {\n  return {\n    type: 'UPDATE_USER_TO_SCHEDULE',\n    userToSchedule\n  };\n}\n\n\nexport function updateIsAdShown(isAdShown) {\n  return dispatch => {\n    dispatch(_updateIsAdShown(isAdShown));\n  }\n}\n\nexport function _updateIsAdShown(isAdShown) {\n  return {\n    type: 'UPDATE_IS_AD_SHOWN',\n    isAdShown\n  };\n}\n\n\n\nexport function updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return dispatch => {\n    dispatch(_updateUserPhoneInContactSignup(userPhoneInContactSignup));\n  }\n}\n\nexport function _updateUserPhoneInContactSignup(userPhoneInContactSignup) {\n  return {\n    type: 'UPDATE_NUMBER_IN_CONTACT_SIGNUP',\n    userPhoneInContactSignup\n  };\n}\n\n","import React, { useState } from 'react';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset,createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport './SwitchApp.scss'\n\nconst theme = createMuiTheme({\n  direction: 'rtl',\n});\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nexport function SwitchApp(props) {\n\n  const [checked, setChecked] = useState(props.marked);\n\n  const handleChange = (event) => {\n    if (!checked) {\n      props.updateDuration(true)\n      props.updatePickedTreatments(true)\n    }\n    else {\n      // props.setIsActive(false)\n      props.updateDuration(false)\n      props.updatePickedTreatments(false)\n    }\n    setChecked(event.target.checked)\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <Switch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checked\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateDuration,updateTreatments,updateTreatmentsCount} from '../../actions/treatmentActions';\nimport { SwitchApp } from '../SwitchApp/SwitchApp';\nimport UtilService from '../../services/UtilsService'\nimport TreatmentService from '../../services/TreatmentService';\nimport './TreatmentPreview.scss';\n\nclass _TreatmentPreview extends Component {\n    state = {\n        updatedTreatment: this.props.treatment,\n        treatmentsToUpdate: this.props.treatments\n    }\n\n    updateDuration = (isMarked) => {\n        if (isMarked) {\n            this.props.updateDuration(+this.props.treatment.duration)\n        } else {\n            this.props.updateDuration((+this.props.treatment.duration) * -1)\n        }\n    }\n\n    // mark the treatment\n   updatePickedTreatments = (isMarked) => {\n            this.setState({updatedTreatment:{...this.state.updatedTreatment,marked:isMarked}}, ()=>{\n                if(isMarked){\n                    this.props.updateTreatmentsCount(1)\n                }\n                else{\n                  this.props.updateTreatmentsCount(-1)\n                }\n            const treatments = TreatmentService.updateTreatments(this.state.treatmentsToUpdate,this.state.updatedTreatment)\n            this.setState({treatmentsToUpdate:treatments})\n        })\n    }\n\n    render() {\n        const {updatedTreatment} = this.state\n        return (\n            <div className={`treatment-preview ${(updatedTreatment.marked)?'marked-by-switch':\"\"}`}>\n                {updatedTreatment &&\n                    <div className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {updatedTreatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + updatedTreatment.price}</div>\n                        <div className=\"align-col\">{updatedTreatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                        <SwitchApp className=\"align-col\" marked={updatedTreatment.marked} updateDuration={this.updateDuration} updatePickedTreatments={this.updatePickedTreatments} />\n                    </div>\n                }\n            </div>\n        )\n      }\n}\n    \nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    updateDuration,\n    updateTreatments,\n    updateTreatmentsCount\n}\n\nexport const TreatmentPreview = connect(mapStateProps, mapDispatchToProps)(_TreatmentPreview)","import React from 'react';\nimport { TreatmentPreview } from '../TreatmentPreview/TreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentList.scss';\n\nexport function TreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <TreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation,withRouter } from 'react-router-dom';\nimport UtilsService from '../../services/UtilsService';\nimport './TreatmentTitle.scss';\n\n\nfunction _TreatmentTitle(props) {\n    const location = useLocation()\n    let isCalendarAdmin=( location.pathname === '/calendarAdmin/treatments')\n    let isDurationValid=(props.duration>props.availableDuration)\n    return (\n        <div className={`treatment-title ${isCalendarAdmin?'treatment-title-in-modal':''} \n         ${isCalendarAdmin&&isDurationValid?'pink-title-treatments-modal':''}`}>\n                {\n                    isCalendarAdmin?\n                    <div className=\"back-arrow\" onClick={()=> props.history.push('/calendarAdmin/contacts')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    :\n                    ''\n                }\n            {\n                <div className=\"treatment-title-text\">{\n               (isDurationValid&&isCalendarAdmin) ?\n                  'משך זמן הטיפולים ארוך מידי ! '\n                :\n                (props.pickedTreatmentsCount) ?\n\n                (props.pickedTreatmentsCount===1)?\n                `נבחר טיפול  ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)}     `\n                :\n                   `נבחרו ${UtilsService.convertNumberToWords(props.pickedTreatmentsCount)} טיפולים `\n\n                    :\n                    (props.isClicked)?\n                     <span className=\"red-title\">לא נבחרו טיפולים!</span>\n                    :\n                    isCalendarAdmin\n                    ?\n                    \"בחרו סוג טיפול אחד או יותר\"\n                    : \n                    \"  בחרו  סוג  טיפול  אחד  או  יותר  ולחצו  'הבא'\"\n                    }\n                </div>\n                }\n                 <div className=\"modal-header-cls-btn-space\"></div>\n        </div>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentTitle = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentTitle))","\n\nexport function updateActiveStep(step) {\n    return async dispatch => {\n      try {\n        await \n        dispatch(_updateActiveStep(step));\n      } catch (err) {\n        console.log('StepperActions: err in updateActiveStep', err);\n      }\n    };\n  }\n  \n  export function _updateActiveStep(step) {\n      return {\n        type: 'UPDATE_ACTIVE_STEP',\n        step\n        }\n  };\n\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport './NavBtns.scss';\nfunction _NavBtns(props) {\n\n    const location = useLocation()\n    const [activeBtn, setActiveBtn] = useState('');\n\n    useEffect(() => { toggleBtnsStyle() });\n\n    function toggleBtnsStyle() {\n        if ((props.activeStep === 2 && !props.treatment) || (props.duration)) {\n            setActiveBtn('active-btn')\n        } else { setActiveBtn('') }\n    }\n\n    function isNextBtnDisable() {\n        if (!props.duration) return true\n        if (props.activeStep === 2 && !props.treatment) return true\n    }\n\n    function changeStep(diff) {\n\n        if (props.activeStep + diff === 3) {\n            props.setAppointment()\n            props.handleOpen()\n        }\n        props.updateActiveStep(props.activeStep + diff)\n        if (!props.activeStep && diff > 0) {\n            props.history.push('/calendar')\n        }\n        else if (props.activeStep === 1 && diff > 0) props.history.push('/form')\n        else if (props.activeStep === 2 && diff < 0) props.history.push('/calendar')\n        else if (props.activeStep === 1 && diff < 0) props.history.push('/treatments')\n    }\n\n    function noPickedItemTitle(){\n        if (!props.duration){\n            props.updateTitleProp()\n        }\n    }\n\n    return (\n\n        <div className={`nav-btns-container`}>\n            {\n                (location.pathname === '/treatments') ?\n                    <div className=\"nav-btn-wrapper-next\" onClick={noPickedItemTitle}>\n                            <button className=\"nav-btn-next\" onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                הבא\n                             </button>\n                    </div>\n                    :\n                    (location.pathname !== '/form') ?\n                        <div className=\"nav-btn-wrapper\">\n                            <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                חזור\n                </button>\n                        </div>\n                        :\n                        <div className=\"flex btns-wrraper\">\n                            <div className=\"nav-btn-wrapper\">\n                                <button className={`nav-btn active-btn`} disabled={props.activeStep === 0} onClick={() => changeStep(-1)} >\n                                    חזור\n                    </button>\n                            </div>\n                            <div className={`nav-btn-wrapper`}>\n                                <button className={`nav-btn ${activeBtn}`} onClick={() => changeStep(1)} disabled={isNextBtnDisable()}>\n                                    אישור\n                </button>\n                            </div>\n                        </div>\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        steps: state.StepperReducer.steps,\n        activeStep: state.StepperReducer.step,\n        duration: state.TreatmentReducer.duration,\n        treatment: state.TreatmentReducer.treatment,\n\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep\n}\n\nexport const NavBtns = withRouter(connect(mapStateProps, mapDispatchToProps)(_NavBtns))\n","export default {\n    getMotionStyle\n}\n\n// textAlign: 'center'\n\nfunction getMotionStyle(style) {\n    // style motion div\n    const pageVariants = {\n        in: {\n            opacity: 1,\n            x: \"0\"\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n    const pageVariantsWithTextAlign = {\n        in: {\n            opacity: 1,\n            x: \"0\",\n            textAlign: 'center'\n        },\n        out: {\n            opacity: 0,\n            x: \"50%\"\n        }\n    }\n\n    const pageTransition = {\n        duration: 0.5,\n        type: \"spring\",\n        stiffness: 50\n    }\n    if (style === 'pageVariants') return pageVariants\n    else if(style === 'pageTransition') return pageTransition\n    else return pageVariantsWithTextAlign\n}","import React from 'react';\nimport Loader from 'react-loader-spinner'\nexport class LoaderApp extends React.Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Oval\"\n        color=\"var(--color1)\"\n        height={75}\n        width={75}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { setUserToSchedule, updateUserToSchedule } from '../../actions/userAction.js';\nimport { TreatmentList } from '../../cmps/TreatmentList/TreatmentList';\nimport { TreatmentTitle } from '../../cmps/TreatmentTitle/TreatmentTitle';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './TreatmentApp.scss';\nimport '../../styles/style.scss';\n\nexport function _TreatmentApp(props) {\n    const location = useLocation()\n    const { loadTreatments, treatments, setUserToSchedule, userToSchedule } = props\n    useEffect(() => {\n        // if (!treatments) loadTreatments()\n        // routim\n        if (!treatments) loadTreatments(props.owner.workPlace)\n    }, [loadTreatments, treatments]);\n\n    useEffect(() => {\n        console.log(treatments)\n    }, [treatments]);\n\n    useEffect(() => {\n        (async () => {\n        if (!userToSchedule && !props.loggedInUser.isAdmin) setUserToSchedule()\n    })()\n    }, [setUserToSchedule, userToSchedule]);\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    function updateTitleProp() {\n        setIsClicked(true)\n    }\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n            {\n                (location.pathname !== '/calendarAdmin/treatments')\n                    ?\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </motion.div>\n                    :\n                    <div>\n                        <TreatmentTitle isClicked={isClicked} />\n                        <TreatmentList treatments={treatments} />\n                    </div>\n            }\n            {\n                (location.pathname !== '/calendarAdmin/treatments') &&\n                <NavBtns updateTitleProp={updateTitleProp} />\n            }\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        userToSchedule: state.UserReducer.userToSchedule,\n        loggedInUser: state.UserReducer.loggedInUser,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments,\n    setUserToSchedule,\n    updateUserToSchedule\n}\n\nexport const TreatmentApp = connect(mapStateProps, mapDispatchToProps)(_TreatmentApp)\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setTreatment } from '../../actions/treatmentActions';\nimport UtilService from '../../services/UtilsService'\nimport './EditTreatmentPreview.scss';\n\nclass _EditTreatmentPreview extends Component {\n    state = {\n        treatment: this.props.treatment,\n    }\n\n    pickedTreatment = () => {\n        this.props.setTreatment(this.props.treatment)\n        this.props.history.push('/treatmentToEdit')\n    }\n\n    render() {\n        const { treatment } = this.state\n        return (\n            <div className={`treatment-preview ${(treatment.marked) ? 'marked-by-switch' : \"\"}`}>\n                {treatment &&\n                    <div onClick={this.pickedTreatment} className=\" preview-container flex align-center space-between\">\n                        <div className=\"align-col-name\">\n                            {treatment.name}\n                        </div>\n                        <div className=\"align-col\">{'₪' + treatment.price}</div>\n                        <div className=\"align-col\">{treatment.duration + UtilService.englishToHebrew('minutes')}</div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment\n}\n\nexport const EditTreatmentPreview = withRouter(connect(mapStateProps, mapDispatchToProps)(_EditTreatmentPreview))","import React from 'react';\nimport { EditTreatmentPreview } from '../EditTreatmentPreview/EditTreatmentPreview';\nimport UtilsService from '../../services/UtilsService';\nimport './EditTreatmentList.scss';\n\nexport function EditTreatmentList(props) {\n    return (\n        <div className=\"treatment-list main-container flex column\">\n            {\n                props.treatments.map(treatment => {\n                    let id=UtilsService.idGen()\n                    return (\n                        <div key={id}>\n                            <EditTreatmentPreview  treatment={treatment} getTreatmentsToUpdate={props.getTreatmentsToUpdate} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loadTreatments } from '../../actions/treatmentActions.js';\nimport { EditTreatmentList } from '../../cmps/EditTreatmentList/EditTreatmentList';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport './EditTreatments.scss';\nimport '../../styles/style.scss';\n\nexport function _EditTreatments(props) {\n    const { loadTreatments, treatments} = props\n    useEffect(() => {\n        if (!treatments) loadTreatments()\n    }, [loadTreatments, treatments]);\n\n    if (!treatments) return <div className=\"loader\"><LoaderApp /></div>\n    return (\n        <div className=\"treatment-app\">\n                    <motion.div\n                        initial=\"out\"\n                        exit=\"in\"\n                        animate=\"in\"\n                        variants={MotionService.getMotionStyle('pageVariants')}\n                        transition={MotionService.getMotionStyle('pageTransition')}\n                    >\n                        <EditTreatmentList treatments={treatments} />\n                    </motion.div>\n        </div>\n\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTreatments\n}\n\nexport const EditTreatments = connect(mapStateProps, mapDispatchToProps)(_EditTreatments)\n\n\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport UtilsService from \"../../services/UtilsService\";\nimport './TreatmentToEdit.scss';\n\nfunction _TreatmentToEdit(props) {\n    const [arr, setArr] = React.useState(UtilsService.getArray(1003, props.treatment.price))\n    const [arr2, setArr2] = React.useState(UtilsService.getArray(10, props.treatment.duration))\n    const [credentials, setCredentials] = React.useState({ name:props.treatment.name , min: '', amount: '' })\n    const [minSelected, setMinSelected] = React.useState(0)\n   \n  \n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        console.log(field,'field');\n        console.log(value,'value');\n        switch (field) {\n            case 'min':\n                    setCredentials({ ...credentials, min: (value === 0) ? arr2[0] : (value) * 30})\n                    setMinSelected(value)\n                break;\n            case 'amount':\n                setCredentials({ ...credentials, amount: value})\n                break;\n            case 'name':\n                setCredentials({ ...credentials, name: value})\n                break;\n            default:\n                console.log('Err updating name/amount/min')\n        }\n    }\n\n    function printThat(){\n        console.log(credentials);\n    }\n\n    return (\n        <div>\n            <div>\n                <div>סוג טיפול</div>\n                <input name=\"name\" value={credentials.name} onChange={handleChange} />\n            </div>\n            <div>\n                <div>משך זמן הטיפול</div>\n                <select name=\"min\" onChange={handleChange}>\n                    {\n                        arr2.map((ar, index) => {\n                            let id = UtilsService.idGen()\n                            return (\n                                <option name=\"min\" key={id} selected={(minSelected===index)?true :false} value={ (index)} >{(index === 0) ? arr2[0] : (index) * 30} דקות</option>\n                            )\n                        })\n                    }\n                </select>\n            </div>\n\n            <div>\n                <div>מחיר הטיפול</div>\n                <select name=\"amount\" size=\"1\" onChange={handleChange}>\n                    {\n                        arr.map((ar, index) => {\n                            let id = UtilsService.idGen()\n                            return (\n                                <option name=\"amount\" key={id} value={(index === 0) ? arr[0] : index}  >{(index === 0) ? arr[0] : index} ₪</option>\n                            )\n                        })\n                    }\n                </select>\n            </div>\n            <button onClick={printThat}>press</button>\n        </div>\n    )\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const TreatmentToEdit = withRouter(connect(mapStateProps, mapDispatchToProps)(_TreatmentToEdit))","import './DailySlots.scss';\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {setTreatment} from '../../actions/treatmentActions';\nimport {updateActiveStep} from '../../actions/stepperActions';\nimport UtilsService from '../../services/UtilsService';\n\n function _DailySlots(props) {\n\n    function onAppointmentChoice(ts, date, diff) {\n        props.updateActiveStep(props.activeStep + diff)\n        let treatment = {\n            time: ts,\n            date\n        }\n        props.setTreatment(treatment)\n        props.history.push('/form')\n    }\n\n    return (\n        <div id='idForScrollBar' className=\"daily-slots flex column align-center space-between\">\n            {props.timeSlots.map(ts => <button onClick={() => onAppointmentChoice(ts, props.date, 1)}\n            className=\"timeslot-btn\" key={UtilsService.idGen()}>{UtilsService.timeToDisplay(ts)}</button>)}\n        </div>\n    )\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        treatment: state.TreatmentReducer.treatment,\n        activeStep: state.StepperReducer.step\n    }\n}\n\nconst mapDispatchToProps = {\n    setTreatment,\n    updateActiveStep\n}\n\nexport const DailySlots = withRouter(connect(mapStateProps, mapDispatchToProps)(_DailySlots))\n","import React, {useEffect} from \"react\";\nimport { DailySlots } from '../DailySlots/DailySlots';\nimport UtilsService from '../../services/UtilsService';\nimport './TimeslotList.scss';\n\nexport function TimeslotList(props) {\n\n    useEffect(() => {\n        }, []);\n\n    return (\n        <div className=\"timeslot-list flex\">\n            {\n                Object.keys(props.timeSlots).map(day => {\n                    // not necceserly meants it isnt fully booked even if it gets false, because the treatment might just be longer than the window got\n                    const isDateFullyBooked = (typeof props.timeSlots[day] == 'string') ? true : false\n                    const date = isDateFullyBooked ? props.timeSlots[day].slice(0, 10) : (props.timeSlots[day])[0].start.slice(0, 10)\n                    // running on each day\n                    const slotsForPreview = isDateFullyBooked ? [] : UtilsService.getDailySlotsForPreview(props.timeSlots[day], props.duration)\n                    return (\n                        <div key={UtilsService.idGen()}>\n                            <div className=\"date-container\">\n                                {\n                                !slotsForPreview.length?     \n                                <div className=\"fully-booked\">\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                    <div className=\"fully-booked-title\">אין תור פנוי</div>\n                                </div>\n                                :\n                                <div>\n                                    <div>{`${UtilsService.getDayByHebrewWord(new Date(date).getDay())} - ${UtilsService.convertDateTo4DigitsDisplay(date)}`}</div>\n                                </div>\n                                }\n                            </div>\n                            <DailySlots timeSlots={slotsForPreview} date={date} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import HttpService from './HttpService'\n\nexport default {\n    saveConfirmedEvent,\n    getMongoEventByEventCalendarId,\n    getReccurenceMongoEventBySubStrId,\n    getEventByPhone,\n    removeEventFromDB\n}\n\n// MONGO DB - GOES THREW BACKEND\n\nfunction saveConfirmedEvent(event){\n    return HttpService.post('event',event)\n}\n\nfunction getEventByPhone (phone) {\n    return HttpService.get(`event/${phone}`)\n}\n\n\nfunction getMongoEventByEventCalendarId(evId) {\n    return HttpService.get(`event/${evId}`)\n}\n\nasync function getReccurenceMongoEventBySubStrId(subStrId) {\n    return await HttpService.get(`event/reccurence/${subStrId}`)\n}\n\nfunction removeEventFromDB (_id) {\n    return HttpService.delete(`event/${_id}`)\n}","import HttpService from './HttpService'\n\nexport default {\n    sendEmail\n}\n\n// routim\n// function sendEmail(name, date, email='', isConfirmation, phone='', duration='', time='', treatments='', businessName) {\nfunction sendEmail(name, date, email='', isConfirmation, phone='', duration='', time='', treatments='') {\n    const businessName='נייל סלון'\n    let bodyText = ''\n    if (isConfirmation) {\n        bodyText =`        שלום ${name} ,\n\n        שמחים שבחרת ${businessName} !\n        נקבע לך תור ל${treatments}  \n        בתאריך ${date}\n        בשעה ${time}\n        משך זמן הטיפול מוערך כ- ${duration} דקות\n        הטלפון שהתקבל ליצירת קשר הוא - ${phone}\n        \n        תודה`\n    } else {\n        bodyText = `\n        שלום,\n         ${name}\n        התור שנקבע לתאריך ${date} בוטל \n        תודה על העדכון `\n    }\n    let emailObj = {\n        email,\n        bodyText\n    }\n    return HttpService.post('email',emailObj)\n}","import HttpService from './HttpService'\nimport EventService from './EventService'\nimport UtilsService from \"../services/UtilsService\";\nimport EmailService from '../services/EmailService';\n\nexport default {\n    getCalendar,\n    getAvailbleDailySlots,\n    addEventToCalendar,\n    addRecurrenceToCalendar,\n    removeEventFromCalendar,\n    setAppointment,\n    getEventsFromCalendar,\n    buildWeeklyModel,\n    getAvailbleDuration,\n    getHoursToBlock,\n    blockSlotRange,\n    getDatesWeeklyRange\n}\n\nvar gUtcDiff = 2\n\n// get the first calendar connected to this TOKEN (usually only 1 should be there)\nfunction getCalendar() {\n    return HttpService.get('calendar')\n}\n\n\nasync function getEventsFromCalendar(timeRange, owner) {\n    console.log(owner)\n    // return await HttpService.post(`calendar/${timeRange.start}/${timeRange.end}`)\n    return await HttpService.post(`calendar/events`, {timeRange, owner})\n}\n\n// routim\n// async function getEventsFromCalendar(timeRangeAndIds) {\n//     return await HttpService.get('calendar/events', timeRangeAndIds)\n// }\n\n// function addEventToCalendar(startTime, endTime, eventName, creatorName = 'block', creatorEmail) {\n//     const event = { eventName, creatorName, creatorEmail, startTime, endTime }\n//     return HttpService.post('calendar', event)\n// }\n\n// routim\nfunction addEventToCalendar(startTime, endTime, eventName, creatorName = 'block', creatorEmail, owner) {\n    const event = { eventName, creatorName, creatorEmail, startTime, endTime, owner}\n    return HttpService.post('calendar', event)\n}\n\n// adding Recurrence event/block\n// async function addRecurrenceToCalendar(startTime, endTime, eventName, creatorName = 'block', recurrence) {\n//     const event = { eventName, creatorName, startTime, endTime, recurrence}\n//     return HttpService.post('calendar/recurrence', event)\n// }\n\n// adding Recurrence event/block\n// routim\nasync function addRecurrenceToCalendar(startTime, endTime, eventName, creatorName = 'block', recurrence, owner) {\n    const token = owner.token\n    const accountId = owner.accountId\n    const event = { eventName, creatorName, startTime, endTime, recurrence, token, accountId}\n    return HttpService.post('calendar/recurrence', event)\n}\n\n// routim\nasync function removeEventFromCalendar(event) {\n    const res = await HttpService.delete('calendar', event)\n    return res\n}\n\n// async function removeEventFromCalendar(eventId) {\n//     const res = await HttpService.delete('calendar', { eventId })\n//     return res\n// }\n\n// routim\nasync function getAvailbleDailySlots(startTime, endtTime, duration, owner) {\n    const dailySlots = { startTime, endtTime, duration, owner }\n    return await HttpService.post('calendar/slots', dailySlots)\n}\n\n// async function getAvailbleDailySlots(startTime, endtTime, duration) {\n//     const dailySlots = { startTime, endtTime, duration }\n//     return await HttpService.post('calendar/slots', dailySlots)\n// }\n\n// MAKING SOME CALCULATIONS AND THAN CALLING OTHER FUNCTIONS TO ADD THE EVENT TO CALENDAR + MONGO DB\n// async function setAppointment(treatments, duration, phone, email, name, treatment) {\n// confirmedEvent = await addEventToCalendar(startTime, endTime, treatments, name, 'ayal@gmail.com')\n// const event = {\n//     name,\n//     email,\n//     phone,\n//     eventId: confirmedEvent.id,\n//     treatments,\n//     duration,\n//     startTime: startTime.slice(11, 20),\n//     endTime: endTime.slice(11, 20),\n//     date: startTime.slice(0, 10)\n// }\n\n// email for routim wasnt applied yet\n//  EmailService.sendEmail(name, treatment.date, email, true, phone, duration, treatment.time, treatments, owner.workPlaceTitle) line 111\n// on email service needs to update the ENV file somehow or send those details\n// routim\n    async function setAppointment(treatments, duration, phone, email, name, treatment, owner) { \n    // in case of recurrence => (treatments, duration, phone, email, name, treatment, recurrence)\n    let time = UtilsService.changeTimeForDisplay(treatment.time, gUtcDiff)\n    let firstTime = time\n    const startTime = `${treatment.date}T${time}:00Z`\n    time = UtilsService.calculateEndTime(time, duration)\n    const endTime = `${treatment.date}T${time}:00Z`\n    let confirmedEvent\n    // if (!recurrence.isRecurrence){\n        confirmedEvent = await addEventToCalendar(startTime, endTime, treatments, name, 'ayal@gmail.com', owner) \n    // } else {\n        // checking if recurrence is possible during all the chosen dates\n    //     const occupiedDates = await checkRecurrenceAvailbility (new Date(`${treatment.date}T02:00:00Z`), firstTime, time, duration, recurrence)\n    //     if (!occupiedDates.length) {\n    //     confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, treatments, name, recurrence)\n    //     } else {\n    //         console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n    //         return\n    //     }\n    // }\n\n    const event = { \n        name,\n        email,\n        phone,\n        eventId: confirmedEvent.id,\n        treatments,\n        duration,\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10),\n        accountId: owner.accountId,\n        calendarId: owner.calendarId,\n        token: owner.token,\n        workPlace: owner.workPlace\n    }\n    EventService.saveConfirmedEvent(event)\n    EmailService.sendEmail(name, treatment.date, email, true, phone, duration, treatment.time, treatments)\n    return confirmedEvent\n}\n\n\n// async function checkRecurrenceAvailbility (fullDate, firstTime, time, duration, recurrence) {\n//     const availbleSlots = await getAvailbleDailySlots(startTime, endTime, duration)\n// routim\n\n// freq should get DAILY or WEEKLY depends - representing day or week diff. count - for how many times to repeat \nasync function checkRecurrenceAvailbility (fullDate, firstTime, time, duration, recurrence, owner) {\n\n    let occupiedDates = []\n    let startTime\n    let endTime\n    let isosDate = UtilsService.getIsosDate(0, fullDate)\n    let freq = (recurrence.freq === 'DAILY')? 1 : 7\n    let recurrenceAvailbilityCheck = true\n    duration = UtilsService.convertDurationToApiStr(duration)\n\n    for (var i=0; i < recurrence.count; i++){\n    startTime = `${isosDate}T${firstTime}:00Z`\n    endTime = `${isosDate}T${time}:00Z`\n    const availbleSlots = await getAvailbleDailySlots(startTime, endTime, duration, owner)\n\n    // if the time is already occupied the day isnt avaiblle\n    if (typeof availbleSlots === 'string'){\n        occupiedDates.push(isosDate)\n    }\n    isosDate = UtilsService.getIsosDate(i+freq, fullDate, recurrenceAvailbilityCheck) \n    }\n    console.log(occupiedDates)\n    return occupiedDates\n}\n\n// async function blockSlotRange(slotToBlock, name = 'block', recurrence) {\n//  confirmedEvent = await addEventToCalendar(startTime, endTime, name) \n// const occupiedDates = await checkRecurrenceAvailbility (new Date(`${slotToBlock.date}T02:00:00Z`), time1, time2, duration, recurrence)\n//            confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, name, 'block', recurrence)\n// const event = {\n//     name,\n//     email: '',\n//     phone: '',\n//     eventId: confirmedEvent.id,\n//     treatments: '',\n//     duration: '',\n//     startTime: startTime.slice(11, 20),\n//     endTime: endTime.slice(11, 20),\n//     date: startTime.slice(0, 10)\n// }\n// routim\n\nasync function blockSlotRange(slotToBlock, name = 'block', recurrence, owner) {\n    let time1 = UtilsService.changeTimeForDisplay(slotToBlock.start, gUtcDiff)\n    let time2 = UtilsService.changeTimeForDisplay(slotToBlock.end, gUtcDiff)\n    const startTime = `${slotToBlock.date}T${time1}:00Z`\n    const endTime = `${slotToBlock.date}T${time2}:00Z`\n    const duration = UtilsService.calculateDuration (time1, time2)\n\n    let confirmedEvent \n    if (+recurrence.count===1) {\n        confirmedEvent = await addEventToCalendar(startTime, endTime, name, 'block', '', owner)\n        console.log('herer')\n    } else {\n        // checking if recurrence is possible during all the chosen dates\n\n        const occupiedDates = await checkRecurrenceAvailbility (new Date(`${slotToBlock.date}T02:00:00Z`), time1, time2, duration, recurrence, owner)\n        if (!occupiedDates.length) {\n             confirmedEvent = await addRecurrenceToCalendar(startTime, endTime, name, 'block', recurrence, owner)\n        } else {\n            console.log ('recurrence is not possible - the xx date is already full', occupiedDates)\n            return occupiedDates\n        }\n    }\n    console.log('adsasd', confirmedEvent)\n\n    const event = { \n        name,\n        email: '',\n        phone: '',\n        eventId: confirmedEvent.id,\n        treatments: '',\n        duration: '',\n        startTime: startTime.slice(11, 20),\n        endTime: endTime.slice(11, 20),\n        date: startTime.slice(0, 10),\n        accountId: owner.accountId,\n        calendarId: owner.calendarId,\n        token: owner.token,\n        workPlace: owner.workPlace\n    }\n    EventService.saveConfirmedEvent(event)\n    return confirmedEvent\n}\n\n\n/////////////////////calendarAdmin:\n\nfunction buildWeeklyModel(timeSlots, weeklyEvents) {\n    let tableCellsModel = []\n    for (var i = 0; i < timeSlots.length; i++) {\n        tableCellsModel.push([])\n    }\n    timeSlots.map((ts, tsIdx) => {\n        weeklyEvents.map((dailyEvents, dailyIdx) => {\n            if (dailyEvents.length) {\n                let isCellInUsed = false\n                return dailyEvents.map((ev, eventIdx) => {\n                    const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                    if (range.occupied) {\n                        isCellInUsed = true\n                        tableCellsModel[dailyIdx, tsIdx].push(false)\n                        // tableCellsModel[dailyIdx, tsIdx].push({name:ev.name,id:ev.id,start:ev.start,end:ev.end})\n                    }\n                    else if ((dailyEvents.length === eventIdx + 1) && (!isCellInUsed)) {\n                        tableCellsModel[dailyIdx, tsIdx].push(true)\n                    }\n                })\n            } else {\n                tableCellsModel[dailyIdx, tsIdx].push(true)\n            }\n        })\n    })\n    return tableCellsModel\n}\n\nfunction getAvailbleDuration(table, cellPos, slotSize = 30) {\n    let durationAvalability = 0\n    let i = cellPos.tsIdx\n    while (table[i][cellPos.dailyIdx] && i < table.length - 1) {\n        durationAvalability += slotSize\n        i++\n    }\n    if (!durationAvalability) return slotSize\n    return durationAvalability\n}\n\nfunction getHoursToBlock(timeSlots, ts, availableDuration, date, isDayFullyAvailable, slotSize = 30) {\n    let hoursToBlock = []\n    const tsIdx = timeSlots.findIndex(timeSlot => timeSlot === ts)\n    const availableSlots = availableDuration / slotSize\n    for (let i = tsIdx; i < (tsIdx + availableSlots); i++) {\n        hoursToBlock.push(\n            {\n                date,\n                start: ts,\n                end: timeSlots[i + 1],\n                isMarked: false\n            }\n        )\n    }\n    if (isDayFullyAvailable) {\n        hoursToBlock.unshift(\n            {\n                date,\n                start: timeSlots[0],\n                end: timeSlots[timeSlots.length - 1],\n                isMarked: false\n            }\n        )\n        if (ts === timeSlots[0]) hoursToBlock.pop()\n    }\n    return hoursToBlock\n}\n\nfunction getDatesWeeklyRange(date) {\n    const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n    const firstDay = UtilsService.convertDateToIsraelisDisplay(days[0].start.slice(0, 10))\n    const lastDay = UtilsService.convertDateToIsraelisDisplay(days[days.length - 1].start.slice(0, 10))\n    return { lastDay, firstDay }\n\n}","import CalendarService from '../services/CalendarService';\nimport UtilsService from '../services/UtilsService';\n\n// THUNK\nexport function loadCalendar() {\n  \n  return async dispatch => {\n    try {\n      const calendar = await CalendarService.getCalendar();\n      dispatch(setCalendar(calendar));\n    } catch (err) {\n      console.log('calendarActions: err in loadCalendars', err);\n  };\n}\n}\n\nexport function setCalendar(calendar) {\n    return {\n      type: 'SET_CALENDAR',\n      calendar\n     };\n}\n\n// routim\n\n\n// export function loadTimeSlots(pickedDate = null){\n  export function loadTimeSlots(pickedDate = null, owner){\n  let date\n      if (!pickedDate) {\n        date = new Date()\n        var firstDay = UtilsService.getIsosDate (0)\n        var secondDay = UtilsService.getIsosDate (1)\n        var thirdDay = UtilsService.getIsosDate (2)\n      } else {\n      // get day after and day before\n      // firstDay = UtilsService.getIsosDate (-1, pickedDate)\n      // secondDay = UtilsService.getIsosDate (0,  pickedDate)\n      // thirdDay = UtilsService.getIsosDate (1, pickedDate )\n      date = pickedDate\n        firstDay = UtilsService.getIsosDate (0, pickedDate)\n        secondDay = UtilsService.getIsosDate (1, pickedDate)\n        thirdDay = UtilsService.getIsosDate (2, pickedDate )\n      } \n      // check for saturday (unwroking day), if it was, sending the correction to skip that day\n        if (!firstDay) {\n          firstDay = UtilsService.getIsosDate (1, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!secondDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (2, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n        }\n        if (!thirdDay) {\n          firstDay = UtilsService.getIsosDate (0, date)\n          secondDay = UtilsService.getIsosDate (1, date)\n          thirdDay = UtilsService.getIsosDate (3, date )\n         }     \n  return async dispatch => {\n    try {\n      const timeSlots = {\n        // 1H means the min block time range later to scheduale a meeting\n        firstDaySlots: await CalendarService.getAvailbleDailySlots(`${firstDay}T06:00:00`, `${firstDay}T18:00:00`, '1H', owner), \n        secondDaySlots: await CalendarService.getAvailbleDailySlots(`${secondDay}T06:00:00`, `${secondDay}T18:00:00`, '1H', owner),\n        thirdDaySlots : await CalendarService.getAvailbleDailySlots(`${thirdDay}T06:00:00`, `${thirdDay}T18:00:00`, '1H', owner)\n\n      // firstDaySlots: await CalendarService.getAvailbleDailySlots(`${firstDay}T06:00:00`, `${firstDay}T18:00:00`, '1H'),\n      // secondDaySlots: await CalendarService.getAvailbleDailySlots(`${secondDay}T06:00:00`, `${secondDay}T18:00:00`, '1H'),\n      // thirdDaySlots : await CalendarService.getAvailbleDailySlots(`${thirdDay}T06:00:00`, `${thirdDay}T18:00:00`, '1H')\n      }\n      dispatch(setTimeSlots(timeSlots));\n    } catch (err) {\n      console.log('Err getting timeslots', err);\n    }\n  }\n}\n\nexport function setTimeSlots(timeSlots) {\n  return {\n    type: 'SET_TIMESLOTS',\n    timeSlots\n   };\n}\n\n\n\nexport function updateHoursToBlock(slotsRangeToBlock) {\n   return  dispatch => { dispatch(_updateHoursToBlock(slotsRangeToBlock))}\n}\n\n\n\nexport function _updateHoursToBlock(slotsRangeToBlock) {\n    return {\n      type: 'UPDATE_HOURS_TO_BLOCK',\n      slotsRangeToBlock\n     };\n}\n\n\nexport function updateSlotToBlock(slotToBlock) {\n   return  dispatch => { dispatch(_updateSlotToBlock(slotToBlock))}\n}\n\n\n\nexport function _updateSlotToBlock(slotToBlock) {\n    return {\n      type: 'UPDATE_SLOT_TO_BLOCK',\n      slotToBlock\n     };\n}\n\nexport function updateRecurrence(recurrence) {\n  return  dispatch => { dispatch(_updateRecurrence(recurrence))}\n}\n\nexport function _updateRecurrence(recurrence) {\n    return {\n      type: 'UPDATE_RECURRENCE',\n      recurrence\n     };\n}\n\nexport function  updateTableModel (tableModel) {\n  return  dispatch => { dispatch(_updateTableModel(tableModel))}\n}\n\nexport function  _updateTableModel(tableModel) {\n    return {\n      type: 'UPDATE_TABLE_MODEL',\n      tableModel\n     };\n}\n\n\n\nexport function updateIsDayFullyAvailable(isDayFullyAvailable) {\n   return  dispatch => { dispatch(_updateIsDayFullyAvailable(isDayFullyAvailable))}\n}\n\n\n\nexport function _updateIsDayFullyAvailable(isDayFullyAvailable) {\n    return {\n      type: 'UPDATE_IS_DAY_FULLY_AVAILABLE',\n      isDayFullyAvailable\n     };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport { TimeslotList } from '../../cmps/TimeslotList/TimeslotList';\nimport { loadTimeSlots } from '../../actions/calendarActions.js';\nimport UtilsService from '../../services/UtilsService';\nimport { Swipeable } from 'react-swipeable'\nimport StoreService from '../../services/StoreService';\nimport { StepperApp } from '../../cmps/StepperApp/StepperApp.jsx';\nimport './CalendarApp.scss';\n\n\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\nexport function _CalendarApp(props) {\n\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [loader, setLoader] = useState(false);\n    const [calendarTitle, seTcalendarTitle] = useState('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n    const [pickerRedTitle, setPickerRedTitle] = useState('date-picker-title');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { loadTimeSlots } = props\n    useEffect(() => {\n        // routim\n         loadTimeSlots(null, props.owner)\n        // loadTimeSlots()\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }, [loadTimeSlots]);\n\n\n    async function handleChange(date) {\n        setLoader(true)\n        handleDateChange(date)\n        // await props.loadTimeSlots(date)\n        // routim\n        await props.loadTimeSlots(date, props.owner)\n        if (props.timeSlots) {\n            setLoader(false)\n        }\n    }\n\n    function disableDay(date) {\n        return  (date.getDay() === 6);\n    }\n\n\n    function onSwipeDirection(direction) {\n        if(props.timeSlots&&!loader){\n            const dateCopy = (new Date(selectedDate.setDate(selectedDate.getDate())))\n        //need to change to normal way\n        if ((direction === 'Left')&& (selectedDate.getTime()) > (new Date().getTime())) {\n              // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() - 1 === -1) || (dateCopy.getDay() - 2 === -1) || (dateCopy.getDay() - 3 === -1)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 3)));\n            }\n        }\n        else if (direction === 'Right') {\n            // checking if there was an unworking day who should be skipped in the range (like saturday), and handle it by jumping one more\n            if ((dateCopy.getDay() + 1 === 6) || (dateCopy.getDay() + 2 === 6) || (dateCopy.getDay() + 3 === 6)){\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 4)));\n            } else {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 3)));\n            }\n        }\n        else {\n            if ((direction !== 'Up') && (direction !== 'Down')) {\n                seTcalendarTitle('לא ניתן לבחור תאריך שעבר')\n                setPickerRedTitle('picker-red-title')\n                setTimeout(() => {\n                    seTcalendarTitle('בחרו תאריך ושעה, ניתן להחליק ימינה/שמאלה ');\n                    setPickerRedTitle('date-picker-title')\n                }, 3000);\n            }\n        }\n    }\n    }\n\n    function navToHomePage() {\n        StoreService.initApp()\n        // props.history.push('/')\n        // routim\n\n        props.history.push(`/${props.owner.workPlace}`)\n    }\n\n    return (\n        <>\n                {/* <div className=\"header-calendar-app flex justifiy-center align-center space-between\" > */}\n                    <div className=\"weekly-dates-container weekly-dates-container-calendar-app flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                        <i className=\"calendar-icon-in-calendar fas fa-calendar-week\"></i>\n                        <div className=\"date-range-in-calendar\">{UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(0,selectedDate))}<br />\n                        {\n                            // check for saturday case\n                             ((UtilsService.getIsosDate(2,selectedDate)) !== '')?\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(2,selectedDate))\n                             :\n                             UtilsService.convertDateToIsraelisDisplay(UtilsService.getIsosDate(3,selectedDate))\n                        }\n                        </div>\n                    </div>\n                    {/* <div id=\"text2\" onClick={navToHomePage} >Tori<i className=\"fas fa-tasks\"></i></div> */}\n                {/* </div> */}\n                {/* <StepperApp className=\"calendar-app-stepper\"/> */}\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\" }}\n            >\n                <div className=\"calendar-picker-container\">\n                    <div className={`${pickerRedTitle}`}>\n                        {calendarTitle}\n                    </div> \n                    </div>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                    <ThemeProvider theme={materialTheme}>\n                        <DatePicker\n                            disablePast={true}\n                            shouldDisableDate={disableDay}\n                            variant=\"dialog\"\n                            okLabel=\"אישור\"\n                            cancelLabel=\"ביטול\"\n                            open={isOpen}\n                            onOpen={() => setIsOpen(true)}\n                            onClose={() => setIsOpen(false)}\n                            format=\"MM/dd/yyyy\"\n                            id=\"date-picker-inline\"\n                            disableToolbar\n                            value={selectedDate}\n                            onChange={handleChange}\n                            InputProps={{\n                                disableUnderline: true,\n                                style: { width: '0' }\n                            }}\n                            keyboardbuttonprops={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </ThemeProvider>\n                </MuiPickersUtilsProvider>\n\n        \n                <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                    <div className=\"time-slot-lists-container\">\n                        {(props.timeSlots && !loader) ? <TimeslotList date={selectedDate} timeSlots={props.timeSlots} duration={props.duration} />\n                            : <div className=\"loaderContainer flex  justify-center\"><LoaderApp /></div>}\n                    </div>\n                </Swipeable>\n            </motion.div>\n            <NavBtns />\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        timeSlots: state.CalendarReducer.timeSlots,\n        duration: state.TreatmentReducer.duration,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    loadTimeSlots\n}\n\nexport const CalendarApp = connect(mapStateProps, mapDispatchToProps)(_CalendarApp)\n","export function updateIsModalOpen(isModalOpen) {\n    return async dispatch => {\n      try {\n        dispatch(_updateIsModalOpen(isModalOpen));\n      } catch (err) {\n        console.log('modalAction: err in updateIsModalOpen', err);\n      };\n    }\n  }\n  \n  export function _updateIsModalOpen(isModalOpen) {\n    return {\n      type: 'UPDATE_IS_MODAL_OPEN',\n      isModalOpen\n    };\n  }","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport StoreService from '../../services/StoreService';\nimport './Modal.scss';\n\nexport default function _Modal(props) {\n    const location = useLocation()\n    const [modalClass, setModalClass] = useState('');\n    let isAdminContacts = (location.pathname === '/adminContacts')\n    useEffect(() => {\n        if (!isAdminContacts) setModalClass('ad-modal-in')\n        else setModalClass('ad-modal-in-in-admin-contacts')\n    }, []);\n\n    const handleClose = () => {\n        if (!isAdminContacts) setModalClass('ad-modal-out')\n        else setModalClass('ad-modal-out-in-admin-contacts')\n        setTimeout(() => {\n            props.updateIsModalOpen(false)\n            if (!isAdminContacts) setModalClass('ad-modal-in')\n            else setModalClass('ad-modal-in-in-admin-contacts')\n            // here, so when modal is closing it will not be the homepage modal - there is the setitmeout delay.\n            // if (location.pathname === '/form') props.history.push('/')\n            // routim\n            if (location.pathname === '/form') props.history.push(`/${props.owner.workPlace}`)\n            \n            if (location.pathname === '/form' || location.pathname === '/cancelAppointment') StoreService.initApp()\n        }, 500);\n    }\n\n    return (\n        <>\n            {\n                props.isModalOpen &&\n                <div className=\"main-modal-container\">\n                    <div className={`ad-modal-screen ${(isAdminContacts) ? 'modal-screen-admin-contacts' : ''}`} onClick={handleClose}> </div>\n                    <div className={`ad-modal ${modalClass}`}>\n                        <div className=\"advertise-content\">{props.modalContent}</div>\n                        <button className=\"ad-modal-btn\" onClick={handleClose}> אישור</button>\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        isModalOpen: state.ModalReducer.isModalOpen,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Modal = withRouter(connect(mapStateProps, mapDispatchToProps)(_Modal))\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { NavBtns } from '../../cmps/NavBtns/NavBtns';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport StoreService from '../../services/StoreService';\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport { withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport TreatmentService from \"../../services/TreatmentService\";\nimport './SubmitForm.scss';\n\n\n\nexport function _SubmitForm(props) {\n    const location = useLocation()\n    const [markedTreatmetns, setMarkedTreatmetns] = React.useState('');\n    const dateIsraeliDisplay = UtilsService.convertDateToIsraelisDisplay(props.treatment.date)\n    const endTime = UtilsService.calculateEndTime(props.treatment.time, props.duration)\n    const { name, phone, email } = props.userToSchedule\n    useEffect(() => {\n        setMarkedTreatmetns(TreatmentService.getMarkedTreatmentsStr(props.treatments))\n    }, [props.treatments])\n\n    const handleOpen = () => {\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    };\n\n    function init() {\n        StoreService.initApp()\n        props.history.push('/treatments')\n    }\n\n    async function setAppointment() {\n        // await CalendarService.setAppointment(markedTreatmetns, props.duration, phone, email, name, props.treatment)\n        // routim\n        await CalendarService.setAppointment(markedTreatmetns, props.duration, phone, email, name, props.treatment, props.owner)\n    }\n\n    let isCalendarAdminForm = (location.pathname === '/calendarAdmin/form')\n\n    return (\n        <div className=\"submit-form flex column  align-center\">\n            {isCalendarAdminForm && <header className=\"header-in-form-modal flex align-center space-between\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/treatments')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div>\n                    לקביעת התור לחצו 'אישור'\n                                    </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>}\n            {!isCalendarAdminForm && <button className=\"reset-btn\" onClick={init}> איפוס <i className=\"fas fa-redo-alt\"></i></button>}\n            <div className={`user-details ${isCalendarAdminForm ? 'user-details-in-modal' : ''}`}>\n                <div>שם : {name}</div>\n                <div>טלפון : {phone}</div>\n                {(email)?<div>אימייל : {email}</div>:''}\n            </div>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isCalendarAdminForm) ? MotionService.getMotionStyle('pageTransition') : ''}\n           style={{textAlign:'center', width:'100%'}}\n           >\n                <div className=\"appointment-details\">\n                    <div className=\"table-cell\">סוג הטיפול : {TreatmentService.getMarkedTreatmentsStr(props.treatments)}</div>\n                    <div className=\"table-cell\">תאריך : {UtilsService.convertDateToIsraelisDisplay(props.treatment.date)}</div>\n                    <div className=\"last-cell\">בין השעות : {UtilsService.calculateEndTime(props.treatment.time, props.duration)} - {props.treatment.time}</div>\n                </div>\n            </motion.div>\n            <Modal modalContent={<div className=\"main-modal-in-form flex column justify-center align-center\">\n                    <div className=\"title-modal-in-form\">התור נקבע בהצלחה</div>\n                    <div className=\"form-modal-content flex column space-between\">\n                        <div className=\"margin-bottom-5\"> נקבע לך תור ל{markedTreatmetns}  </div>\n                        <div className=\"margin-bottom-5\"> בתאריך: {dateIsraeliDisplay}</div>\n                        <div> בין השעות: {endTime} - {props.treatment.time}</div>\n                    </div>\n                </div>}\n                />\n            {!isCalendarAdminForm && <NavBtns handleOpen={handleOpen} setAppointment={setAppointment} />}\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        duration: state.TreatmentReducer.duration,\n        userToSchedule: state.UserReducer.userToSchedule,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const SubmitForm = withRouter(connect(mapStateProps, mapDispatchToProps)(_SubmitForm))\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { setTimeSlots } from '../../actions/calendarActions.js';\nimport { updateActiveStep } from '../../actions/stepperActions';\nimport UtilsService from \"../../services/UtilsService\";\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport EmailService from '../../services/EmailService';\nimport StorageService from \"../../services/StorageService\";\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp';\nimport './CancelAppointment.scss';\n\nexport function _CancelAppointment(props) {\n\n    useEffect(() => {\n        getEventsByPhone()\n    }, []);\n\n    const location = useLocation()\n\n    const [loader, setLoader] = React.useState(<LoaderApp />);\n    setTimeout(() => {\n        setLoader('')\n    }, 2000);\n\n    const [phone, setPhone] = React.useState((props.clickedUser) ? props.clickedUser.phone : StorageService.loadFromStorage('tori-user').phone);\n\n    const [eventsToCancel, setEventsToCancel] = useState(null)\n\n    const [pageCount, setPageCount] = useState(0)\n\n    const [eventsAmount, setEventsAmount] = useState(0)\n\n    function getEventsByPhone() {\n        EventService.getEventByPhone(phone)\n            .then(events => {\n                if (!events[0]) return\n                const filteredEvents = events.filter(event => {\n                    let year = event.date.slice(0, 4)\n                    let month = event.date.slice(5, 7)\n                    let day = event.date.slice(8, 10)\n                    let hours = +event.startTime.slice(0, 2) + 3\n                    const date = new Date(year, month - 1, day, hours, 0).getTime()\n                    return (date > Date.now())\n                })\n                if (filteredEvents.length) {\n                    setEventsAmount(filteredEvents.length)\n                    filteredEvents.sort((a, b) => {\n                        if (+a.date.slice(2,4) > +b.date.slice(2,4)) return 1\n                        if (+a.date.slice(8,10) > +b.date.slice(8,10)) return 1\n                        if (+a.date.slice(5,7) > +b.date.slice(5,7)) return 1\n                        return -1\n                    })\n                    setEventsToCancel(UtilsService.getEventReadyForDisplay(filteredEvents))\n                } else {\n                    setEventsToCancel(null)\n                }\n            })\n    }\n\n\n   \n    // CalendarService.removeEventFromCalendar(eventToRmove.eventId)\n    // routim\n    // email service need changes\n    async function cancelAppointment(eventId) {\n        props.updateIsModalOpen(true)\n        const events = await EventService.getEventByPhone(phone)\n        let eventToRmove = events.find(event => event._id === eventId)\n        // delete from Calendar\n        CalendarService.removeEventFromCalendar(eventToRmove)\n\n        if (pageCount) { setPageCount(pageCount - 1) }\n        EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n        // delete from mongo data base\n        await EventService.removeEventFromDB(eventToRmove._id)\n        getEventsByPhone()\n        //open modal useing store\n    }\n\n    function checkNextBtnDisabillity(){\n        if (!eventsToCancel) return true\n        return  !((eventsToCancel.length > 1) && (pageCount < eventsToCancel.length-1))\n    }\n\n    function checkBackBtnDisabillity(){\n        if (!eventsToCancel) return true\n        return  !pageCount > 0\n    }\n\n    return (\n        <div className=\"cancel-appointment flex column align-center space-between \">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n            >\n                {\n                    (loader) ?\n                        <div className=\"cancel-apointment-loader\">{loader}</div>\n                        :\n                        <main className=\"cancel-appointment-wrapper\">\n                                      {(eventsToCancel) ?\n                                      (eventsAmount===1) ?\n                                        <div className={`appointments-amount-title ${(location.pathname!=='/cancelAppointment')? 'appointments-amount-title-modal' : ''}`}>\n                                            {`נמצא תור אחד`}\n                                        </div>\n                                        :\n                                        <div className={`appointments-amount-title ${(location.pathname!=='/cancelAppointment')? 'appointments-amount-title-modal' : ''}`}>\n                                            {`נמצאו ${UtilsService.convertNumberToWords(eventsAmount)} תורים`}\n                                        </div>\n                                            :\n                                            ''\n                                        }\n                            <div className=\"table-wrapper\">\n                                {(eventsToCancel) ?\n                                <div>\n                              \n                                    <div className={`cancel-table-container`}>\n                                        <div className=\"apointment-details\">\n                                            <div className=\"table-cell\"> <span>סוג הטיפול</span> : {eventsToCancel[pageCount].treatments}</div>\n                                            <div className=\"table-cell\"> בתאריך : {eventsToCancel[pageCount].date}</div>\n                                            <div className=\"last-cell\"> בין השעות : {`${eventsToCancel[pageCount].endTime} - ${eventsToCancel[pageCount].startTime}`}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                    :\n                                    <div className=\"no-apointments\">\n                                        לא נמצאו תורים\n                                    </div>\n                                }\n                            </div>\n                            {eventsToCancel &&\n                            <div className=\"cancel-appointment-btn flex align-center space-around\" onClick={() => cancelAppointment(eventsToCancel[pageCount].id)}>\n                                    <div className=\"cancel-appointment-btn-text\">בטל תור זה</div>\n                                    <i className=\"fas fa-ban\"></i>\n                            </div>\n                            }\n                                    <div className=\"cancel-appointment-btns-container flex\">\n                                            <div className=\"nav-btn-wrapper\"  >\n                                                <button className={`nav-btn ${(props.clickedUser)?'nav-btn-right':''}`} disabled={checkBackBtnDisabillity()} onClick={() => setPageCount(pageCount - 1)}>\n                                                    <i className=\"fas fa-arrow-circle-right\"></i>\n                                                </button>\n                                            </div>\n                                            <div className={`nav-btn-wrapper`} >\n                                                <button className={`nav-btn ${(props.clickedUser)?'nav-btn-left':''}`} disabled={checkNextBtnDisabillity()} onClick={() => {\n                                                    setPageCount(pageCount + 1)\n                                                    console.log(pageCount)\n                                            } }>\n                                                     <i className=\"fas fa-arrow-circle-left\"></i>\n                                                </button>\n                                            </div>\n                                         </div>\n                        </main>\n                }\n                \n            </motion.div>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{ height: '100%' }}>\n                    <div>התור בוטל, תודה על העדכון.</div>\n                </div>} />\n        </div>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveStep,\n    setTimeSlots,\n    updateIsModalOpen\n}\n\nexport const CancelAppointment = withRouter(connect(mapStateProps, mapDispatchToProps)(_CancelAppointment))\n\n\n","import React from \"react\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './SignupOrLogin.scss';\nimport { Link } from 'react-router-dom'\n// routim\n// import { useParams } from \"react-router\";\n\nexport function SignupOrLogin(props) {\n    // routim\n    // let { workPlace } = useParams();\n\n    return (\n        <main className=\"signup-or-login-container flex align-center column\">\n        <motion.div\n            className=\"motion-div\"\n            initial=\"out\"\n            exit=\"in\"\n            animate=\"in\"\n            variants={MotionService.getMotionStyle('pageVariants')}\n            transition={MotionService.getMotionStyle('pageTransition')}\n            style={{ width: \"100%\", height: \"100%\" }}\n       >\n          \n                <div className=\"square top-square\">\n                    <Link className=\"signUp-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/signup\">\n                        {/* routim to=`/${workPlace}/signup` */}\n                       <div className=\"signup-or-login-text\">הרשמ/י</div> \n                       <i class=\"fas fa-user-edit\"></i>\n            </Link>\n                </div>\n                <div className=\"square bottom-square\">\n                    <Link className=\"login-link-in-sign-up-or-login flex align-center justify-center column\" to=\"/login\">\n                        {/* routim to=`/${workPlace}/login` */}\n                       <div className=\"signup-or-login-text\">התחבר/י</div> \n                       <i class=\"fas fa-sign-in-alt\"></i>\n            </Link>\n                </div>\n        </motion.div>\n            </main>\n    );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UserService from \"../../services/UserService\";\nimport AuthService from \"../../services/AuthService\";\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport './Login.scss';\n\n\n// const ownerPassword = '1234'\n\nfunction _Login(props) {\n    const [phone, setPhone] = React.useState('')\n    const [password, setPassword] = useState('');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [phoneIsValid, setPhoneIsValid] = useState(false);\n\n    useEffect(() => {\n        checkValidation()\n    }, [phone])\n\n    // hide text validation if text is valid\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'phone':\n                setPhone(value)\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        setPhoneIsValid((phone.length > 8) && (phone.length < 11))\n    }\n\n    function toggleValidations() {\n        if (!phoneIsValid) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        const userFromDb = await UserService.getUser(phone)\n        //validation of owner phone number\n        if (userFromDb) {\n            if (!userFromDb.isAdmin) {\n                //need to bring from mongo\n                const { name, email, phone } = userFromDb\n                StorageService.saveToStorage('tori-user', { name, email, phone })\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/treatments')\n                // ('/${props.owner.workPlace}/treatments')\n            }\n            else {\n                handleClickOpen()\n            }\n        } else {\n            handleModalClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = async (close) => {\n        const userFromDb = await UserService.getUser(phone)\n        if (close !== 'close') {\n            //ownerPassword \n            // routim\n            // if (AuthService.login(userFromDb, password)) {\n            if (password === props.owner.pass) {\n                setOpen(false);\n                const { name, email, phone } = userFromDb\n                StorageService.saveToStorage('tori-user', { name, email, phone })\n                props.updateLoggedInUser(userFromDb)\n                props.history.push('/calendarAdmin')\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleModalClickOpen = () => {\n        setOpenModal(true);\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    return (\n        <main className=\"main-login-container log-in-page flex align-center  column\">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariants')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n    \n                <div className=\"login-title\">\n                    אנא הכניסו מספר טלפון לזיהוי\n                </div>\n                <form className=\"main-form flex align-center column\">\n\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                    </div>\n                </form>\n            </motion.div>\n            <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        הכנס סיסמה\n          </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"סיסמה\"\n                        type=\"email\"\n                        fullWidth\n                        value={password}\n                        onChange={handleChange}\n                        name=\"password\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose('close')} color=\"primary\">\n                        בטל\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        אשר\n                   </Button>\n                </DialogActions>\n            </Dialog>\n            {/* //second modal */}\n            <Dialog\n                open={openModal}\n                onClose={handleModalClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description row\">\n                        <div>\n                            <div>\n                                המספר שהוקש אינו קיים במערכת.\n                                    </div>\n                            <div className=\"flex\">\n                                <div>להרשמה לחץ</div>\n                                <Link className=\"login-link flex align-center justify-center\" to=\"/signup\">\n                                    {/* to=\"/${props.owner.workPlace}/signup\" */}\n                                    כאן\n                                       </Link>\n                            </div>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose} color=\"primary\" autoFocus>\n                        ביטול\n                         </Button>\n                </DialogActions>\n            </Dialog>\n            <div className=\"save-btn-wrapper\" onClick={toggleValidations}> </div>\n            <button className=\"save-btn\" onClick={setUser} disabled={!phoneIsValid}>התחבר</button>\n        </main>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const Login = connect(mapStateProps, mapDispatchToProps)(_Login)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './EditButton.scss';\n\n\n\n\nfunction _EditButton(props) {\n    const location = useLocation()\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n    return (\n        <>\n        <div className=\"save-btn-wrapper\" onClick={() => props.toggleValidations()}> </div>\n            <button className={`save-btn ${isContactsPath?'save-btn-in-contact-path' :''}`} onClick={() => props.setUser()} disabled={!props.isValid.phone || !props.isValid.email || !props.isValid.name}>שמור</button>\n        </>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const EditButton = connect(mapStateProps, mapDispatchToProps)(_EditButton)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateUserPhoneInContactSignup, updateUserToSchedule } from '../../actions/userAction.js';\nimport { useLocation } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from 'react-router-dom'\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from \"../../services/UserService\";\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport { motion } from 'framer-motion'\nimport { EditButton } from '../../cmps/EditButton/EditButton';\nimport MotionService from \"../../services/MotionService\";\nimport './Signup.scss';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function _Signup(props) {\n\n    const location = useLocation()\n    // const [credentials, setCredentials] = React.useState({ name: '', phone: '', email: '' })\n    // routim\n    const [credentials, setCredentials] = React.useState({ name: '', phone: '', email: '', workPlace: props.owner.workPlace })\n    const { name, phone, email } = credentials\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n    function navToContacts() {\n        props.history.push('/calendarAdmin/contacts')\n              {/* routim `/${props.owner.workPlace}/calendarAdmin/contacts' */}\n    }\n\n    const isContactsPath = (location.pathname === '/calendarAdmin/contacts/signup')\n\n    async function setUser() {\n        const user = await UserService.getUser(phone)\n        if (user) {\n            handleClickOpen()\n        } else {\n            if (!isContactsPath) props.updateLoggedInUser(credentials)\n            await UserService.addUser(credentials, isContactsPath)\n            if (!isContactsPath) {\n                if (phone !== props.owner.phone) props.history.push('/treatments')\n                //   {/* routim `/${props.owner.workPlace}/treatments' */}\n                else props.history.push('/calendarAdmin')\n                // routim ('/${props.owner.workPlace}/calendarAdmin')\n            } else {\n                await props.updateUserPhoneInContactSignup(credentials.phone)\n                props.updateUserToSchedule(credentials)\n                navToContacts()\n            }\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <main className=\"main-login-container flex align-center column\">\n            <motion.div\n                className=\"motion-div\"\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={(!isContactsPath) ? MotionService.getMotionStyle('pageVariants') : ''}\n                transition={(!isContactsPath) ? MotionService.getMotionStyle('pageTransition') : ''}\n                style={{ width: \"100%\", height: \"100%\" }}\n         >\n\n                {isContactsPath && <header className=\"header-in-signup-modal\">\n                    {isContactsPath && <div className=\"back-arrow\" onClick={navToContacts}><i class=\"fas fa-arrow-right\"></i></div>}\n                </header>}\n                <div className={`login-title ${isContactsPath ? 'login-title-display-none' : ''}`}>\n                    אנא מלאו את השדות הבאים ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                </div>\n                <form className={`main-form flex align-center justify-center column ${isContactsPath ? 'main-form-in-contact-path' : ''}`}>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* שם מלא  </div>\n                            <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                        </div>\n                        <input maxlength=\"18\" autoFocus={true} className=\"name\" name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title\">* טלפון  </div>\n                            <div className={`validation-text ${togglePhoneValidation}`}>\n                                {\n                                    (phone) ?\n                                        \"מספר הטלפון שהוקש שגוי\"\n                                        :\n                                        \"זהו שדה חובה, יש להכניס טלפון\"\n                                }\n                            </div>\n                        </div>\n                        <input className=\"phone\" name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n\n                    </div>\n                    <div className=\"input-container\">\n                        <div className=\"form-title-container flex\">\n                            <div className=\"form-title form-title-email\">מייל </div>\n                            <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                        </div>\n                        <input className=\"email\" name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                    </div>\n                </form>\n            </motion.div>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        <div>\n                            <div>\n                                המספר שהוקש כבר קיים במערכת.\n                                    </div>\n                            {(!isContactsPath) &&\n                                <div className=\"flex\">\n                                    <div>להתחברות לחץ</div>\n                                    <Link className=\"login-link flex align-center justify-center\" to=\"/login\">\n                                              {/* routim to=`/${props.owner.workPlace}/login` */}\n                                        כאן\n                                       </Link>\n                                </div>\n                            }\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        ביטול\n                       </Button>\n                </DialogActions>\n            </Dialog>\n            <EditButton toggleValidations={toggleValidations} setUser={setUser} isValid={isValid} />\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateUserPhoneInContactSignup,\n    updateUserToSchedule,\n    updateLoggedInUser\n}\n\nexport const Signup = connect(mapStateProps, mapDispatchToProps)(_Signup)\n\n// routim\n// when saving new owner props.owner.workPlace to data \n// props.owner.workPlace = props.owner.workPlace.replace(/(^\\w{1})|(\\s{1}\\w{1})/g, match => match.toUpperCase());    uppercase first letter in every word\n// props.owner.workPlace = props.owner.workPlace.replace(/\\s/g,'') => delete all spaces\n// props.owner.workPlace = props.owner.workPlace.charAt(0).toLocaleLowerCase()+props.owner.workPlace.slice(1)   => lowwercase only the first letter","import HttpService from './HttpService'\n\nexport default {\n    getAd,\n    updateAd,\n    toggleAdMode,\n    createAd\n}\n\n// MONGO DB - GOES THREW BACKEND\n\n// routim\n function getAd(workPlace) {\n    return HttpService.get(`advertise/${workPlace}`)\n}\n\n//  function getAd() {\n//     return HttpService.get('advertise')\n// }\n\n// function updateAd(content) {\n//     return HttpService.put('advertise', content)\n// }\n\n// routim\nfunction updateAd(advertise) {\n    return HttpService.put('advertise', advertise)\n}\n\nfunction toggleAdMode(isAdMoneOn){\n    return HttpService.put('advertise/mode',isAdMoneOn)\n}\n\n// routim\n// function toggleAdMode(modeObj){\n//     return HttpService.put('advertise/mode',modeObj)\n// }\n\n//  function createAd() {\n//     return  HttpService.post('advertise')\n// }\n\n// routim\n function createAd(workPlace) {\n    return  HttpService.post(`advertise/${workPlace}`)\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateIsAdShown, setOwner} from '../../actions/userAction';\nimport { updateIsModalOpen } from '../../actions/modalAction.js';\nimport { Modal } from '../../cmps/Modal/Modal';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport UserService from '../../services/UserService';\n// routim\nimport { useParams } from \"react-router\";\nimport './HomePage.scss';\n\n\nexport function _HomePage(props) {\n    function changeRoute(route) {\n        (props.loggedInUser) ? props.history.push(route) : props.history.push('/signupOrLogin')\n    }\n    let { workPlace } = useParams();\n    const [advertise, setAdvertise] = useState();\n\n    // routim\n   \n    let ad\n\n    useEffect(() => {\n        (async () => {\n                let owner\n                // routim\n                console.log('workPlace', workPlace)\n                if (!props.owner) {\n                // loader until owner ? or start ffrom login/signup page\n                owner = await UserService.getOwner(workPlace)\n                console.log('owner',owner)\n                props.setOwner(owner)\n                console.log('owner.mainBgImgUrl',owner)\n                document.body.style.backgroundImage = `url(${require('../../styles/img/handlight.png')})`\n                // document.body.style.backgroundImage = `url(${owner.mainBgImgUrl}`\n                // useLayoutEffect => might be better to use\n                ad = await AdvertiseService.getAd(owner.workPlace)\n            } else {\n                ad = await AdvertiseService.getAd(props.owner.workPlace)\n            }\n            ad = ad[0]\n            if (props.loggedInUser&&(!props.loggedInUser.isAdmin)) {\n                if (ad && ad.content && ad.isAdModeOn) {\n                    if (!props.isAdShown) {\n                        setAdvertise(ad.content)\n                        props.updateIsModalOpen(true)\n                        props.updateIsAdShown(true)\n                    }\n                }\n            } else {\n                if (ad) return\n                else {\n                    AdvertiseService.createAd(owner.workPlace)\n                }\n            }\n        })()\n    }, [props.loggedInUser]);\n\n    return (\n        // routim\n        props.owner &&\n        // <div className=\"home-page-wrapper\" >\n        // routim\n        <div className=\"home-page-wrapper\" style={{backgroundImage:`url(${require('../../styles/img/hex3.png')})`}}>\n        {/* // <div className=\"home-page-wrapper\" style={{backgroundImage:`url(${props.owner.homePageBgImgUrl}`}}> */}\n            <main className=\"home-page\">\n                <img className=\"cover-photo\" src={require('../../styles/img/oo.png')} />\n                {/* routim */}\n                {/* <img className=\"cover-photo\" src={props.owner.coverImgUrl}/> */}\n                {(props.loggedInUser) ?\n                    <div className=\"login-container\" onClick={() => props.history.push('/editUser')}>\n                        <div className=\"admin-logo\"> <i className=\"fas fa-user-tie\"></i></div>\n                        <div>{props.loggedInUser.name}</div>\n                    </div>\n                    :\n                    <div className=\"login-container\" onClick={() => props.history.push('/signupOrLogin')}>\n                        <div className=\"user-logo\">  <i className=\"fas fa-user-tie\"></i></div>\n                        <div>הרשם/</div>\n                        <div>התחבר</div>\n                    </div>\n                }\n               {\n                //    routim\n                <div className=\"profile-container\">\n                    <div className=\"profile-img\" style={{backgroundImage:`url(${require('../../styles/img/ornailsart2.png')})`}}></div>\n                    {/* <div className=\"profile-img\" style={{backgroundImage:`url(${props.owner.profileImgUrl}`}}></div> */}\n                    <div className=\"profile-text-container\">\n                        <div id=\"profile-title\" className=\"profile-title\">{props.owner.workPlaceTitle}</div>\n                        <div className=\"profile-sub-title\">{props.owner.workPlaceSubTitle}</div>\n                    </div>\n                </div> \n}\n                <div className=\"icons-container flex column align-center justify-center\">\n                {((props.loggedInUser ) && !props.loggedInUser.isAdmin)\n                        ?\n                        < div className=\"bottom-icons-container flex space-around\">\n                            <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                    קביעת תור\n                    </div>\n                            <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                    ביטול תור\n                    </div>\n                            <a className=\"phone\" href=\"tel:0538281511\">\n                                <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                         חייגו אלינו\n                    </a>\n                        </div>\n                        :\n                        props.loggedInUser\n                            ?\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/calendarAdmin')}>\n                                    <div className=\"circle\"><i class=\"far fa-calendar-alt\"></i></div>\n                     יומן\n                       </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/adminContacts')}>\n                                    <div className=\"circle\"><i class=\"fas fa-users\"></i> </div>\n                    לקוחות\n                      </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/advertise')}>\n                                    <div className=\"circle\"><i class=\"far fa-comment-alt\"></i></div>\n                    פרסומים\n                      </div>\n                            </div>\n                            :\n                            < div className=\"bottom-icons-container flex space-around\">\n                                <div className=\"queue-container\" onClick={() => changeRoute('/treatments')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-clock\"></i></div>\n                        קביעת תור\n                         </div>\n                                <div className=\"remove-queue-container\" onClick={() => changeRoute('/cancelAppointment')}>\n                                    <div className=\"circle\"><i class=\"fas fa-user-times\"></i></div>\n                       ביטול תור\n                         </div>\n                                <a className=\"phone\" href=\"tel:0538281511\">\n                                    <div className=\"circle\"><i className=\"fas fa-phone-alt\"></i></div>\n                        חייגו אלינו\n                          </a>\n                            </div>\n                    }\n                    <div className=\"top-icons-container flex space-around\">\n                        <a className=\"facebook-container\" href={`https://www.facebook.com/${(props.owner)?props.owner.facebook:''}/`} >\n                            <div className=\"circle\"><i class=\"fab fa-facebook-f\"></i> </div>\n                       פייסבוק\n                        </a>\n                        <a className=\"instagram-container\" href={`https://www.instagram.com/${(props.owner)?props.owner.instagram:''}/`}>\n                            <div className=\"circle\"><i class=\"fab fa-instagram\"></i></div>\n                           אינסטגרם\n                        </a>\n                        <a className=\"waze-container\" href={(props.owner)?props.owner.wazeUrl:'' }>\n                            <div className=\"circle\"> <i className=\"fab fa-waze\"></i></div>\n                        נווטו אלינו\n                        </a>\n                    </div>\n                </div>\n                 <Modal modalContent={advertise} />  \n            </main>\n        </div >\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        isAdShown: state.UserReducer.isAdShown,\n        loggedInUser: state.UserReducer.loggedInUser,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsAdShown,\n    updateIsModalOpen,\n    // routim\n    setOwner\n}\n\nexport const HomePage = connect(mapStateProps, mapDispatchToProps)(_HomePage)\n\n// \"postbuild\": \"rsync  -a build/static ../backend/public\",","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from 'react-redux';\nimport StorageService from \"../../services/StorageService\";\nimport UtilsService from \"../../services/UtilsService\";\nimport UserService from '../../services/UserService';\nimport { EditButton } from '../../cmps/EditButton/EditButton';\nimport { updateLoggedInUser } from '../../actions/userAction.js';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport './EditUser.scss';\n\n\nexport function _EditUser(props) {\n    const [credentials, setCredentials] = React.useState(props.loggedInUser)\n    const { name, phone, email } = credentials\n    const [password, setPassword] = useState('');\n    const [toggleNameValidation, setToggleNameValidation] = useState('visibility');\n    const [togglePhoneValidation, setTogglePhoneValidation] = useState('visibility');\n    const [toggleEmailValidation, setToggleEmailValidation] = useState('visibility');\n    const [isValid, setIsValid] = useState(\n        {\n            name: false,\n            phone: false,\n            email: true\n        }\n    );\n\n    useEffect(() => {\n        checkValidation()\n    }, [credentials])\n\n    // hide text validation if text is valid\n    useEffect(() => {\n        if (name) setToggleNameValidation('visibility')\n    }, [name])\n\n    useEffect(() => {\n        if ((phone.length > 8) && (phone.length < 11)) {\n            setTogglePhoneValidation('visibility')\n        }\n    }, [phone])\n\n    useEffect(() => {\n        if (UtilsService.validateEmail(email)) {\n            setToggleEmailValidation('visibility')\n        }\n    }, [email])\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'name':\n\n                setCredentials({ ...credentials, name: value })\n                break;\n            case 'phone':\n                setCredentials({ ...credentials, phone: value })\n                // checkPhoneValidation()\n                break;\n            case 'email':\n                setCredentials({ ...credentials, email: value })\n                // checkEmailValidation()\n                break;\n            case 'password':\n                setPassword(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n\n\n    function checkValidation() {\n        let emailIsValid = true\n        if (email) {\n            emailIsValid = UtilsService.validateEmail(email)\n        }\n        setIsValid({\n            name: (name.length > 0),\n            phone: ((phone.length > 8) && (phone.length < 11)),\n            email: emailIsValid\n        })\n    }\n\n    function toggleValidations() {\n        if (!isValid.name) {\n            setToggleNameValidation('')\n        } else {\n            setToggleNameValidation('visibility')\n        }\n        if (!isValid.phone) {\n            setTogglePhoneValidation('')\n        } else {\n            setTogglePhoneValidation('visibility')\n        }\n        if (!isValid.email) {\n            setToggleEmailValidation('')\n        } else {\n            setToggleEmailValidation('visibility')\n        }\n    }\n\n\n    async function setUser() {\n        //validation of owner phone number\n        if (!props.loggedInUser.isAdmin) {\n            UserService.updateUser(credentials)\n            // props.history.push('/')\n            // routim\n            props.history.push(`/${props.owner.workPlace}`)\n        }\n        else {\n            handleClickOpen()\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [dialogTitle, setDialogTitle] = React.useState(' הרשאת מנהל');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (close) => {\n        if (close !== 'close') {\n            //owner password\n            if (password === props.owner.pass) {\n                setOpen(false);\n                UserService.updateUser(credentials)\n                // props.history.push('/')\n                // routim \n\n                props.history.push(`/${props.owner.workPlace}`)\n            }\n            else {\n                setDialogTitle('ססמא שגויה!')\n            }\n        }\n        else {\n            setOpen(false);\n            setDialogTitle('הרשאת מנהל')\n        }\n    };\n\n\n\n\n    const [isNameEditing, setIsNameEditing] = useState(false);\n    const [isNameDisabled, setIsNameDisabled] = useState(true);\n    const [nameBorderBottom, setNameBorderBottom] = useState('thin-border-bottom');\n    const nameFocus = useRef(null);\n    useEffect(() => {\n        if (isNameEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            nameFocus.current.focus();\n        }\n    }, [isNameEditing]);\n\n    const [isPhoneEditing, setIsPhoneEditing] = useState(false);\n    const [isPhoneDisabled, setIsPhoneDisabled] = useState(true);\n    const [phoneBorderBottom, setPhoneBorderBottom] = useState('thin-border-bottom');\n    const phoneFocus = useRef(null);\n    useEffect(() => {\n        if (isPhoneEditing) {\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            //unable email\n            setIsEmailEditing(false)\n            setIsEmailDisabled(true)\n            setEmailBorderBottom('thin-border-bottom')\n            phoneFocus.current.focus();\n        }\n    }, [isPhoneEditing]);\n\n    const [isEmailEditing, setIsEmailEditing] = useState(false);\n    const [isEmailDisabled, setIsEmailDisabled] = useState(true);\n    const [emailBorderBottom, setEmailBorderBottom] = useState('thin-border-bottom');\n    const emailFocus = useRef(null);\n    useEffect(() => {\n        if (isEmailEditing) {\n            //unable phone\n            setIsPhoneEditing(false)\n            setIsPhoneDisabled(true)\n            setPhoneBorderBottom('thin-border-bottom')\n            //unable name\n            setIsNameEditing(false)\n            setIsNameDisabled(true)\n            setNameBorderBottom('thin-border-bottom')\n            emailFocus.current.focus();\n        }\n    }, [isEmailEditing]);\n\n\n    const toggleEditing = (value) => {\n        if (value === 'name') {\n            setIsNameEditing(!isNameEditing);\n            setIsNameDisabled(!isNameDisabled)\n            if (nameBorderBottom === 'thick-border-bottom') {\n                setNameBorderBottom('thin-border-bottom')\n            } else {\n                setNameBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'phone') {\n            setIsPhoneEditing(!isPhoneEditing);\n            setIsPhoneDisabled(!isPhoneDisabled)\n            if (phoneBorderBottom === 'thick-border-bottom') {\n                setPhoneBorderBottom('thin-border-bottom')\n            } else {\n                setPhoneBorderBottom('thick-border-bottom')\n            }\n        }\n        if (value === 'email') {\n            setIsEmailEditing(!isEmailEditing);\n            setIsEmailDisabled(!isEmailDisabled)\n            if (emailBorderBottom === 'thick-border-bottom') {\n                setEmailBorderBottom('thin-border-bottom')\n            } else {\n                setEmailBorderBottom('thick-border-bottom')\n            }\n        }\n    };\n\n\n    function signOut() {\n        StorageService.removeFromStorage('tori-user')\n        props.updateLoggedInUser(null)\n        // props.history.push('/')\n        // routim\n\n        props.history.push(`/${props.owner.workPlace}`)\n    }\n\n    return (\n        <main className=\"main-edit-container flex column  align-center\">\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n               \n                    <div className=\"sign-out flex align-center justify-center space-between\" onClick={signOut}>\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                        <div>התנתק</div>\n                    </div>\n                    <div className=\"login-title\">\n                        לשינוי לחצו על סמל העריכה ולחצו 'שמור'.\n                    <div className=\"login-title-sub\">שדות המסומנים ב - *  הינם שדות חובה</div>\n                    </div>\n                    <form className=\"main-form flex align-center justify-center column\">\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title\">* שם מלא  </div>\n                                <div className={`validation-text ${toggleNameValidation}`}>זהו שדה חובה, יש להכניס שם</div>\n                            </div>\n                            <div className={`input-edit-container ${nameBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page name\" disabled={isNameDisabled} ref={nameFocus} name=\"name\" id=\"outlined-basic\" variant=\"outlined\" value={name} onChange={handleChange} />\n                                {\n                                    (isNameEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('name')}></i>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title\">* טלפון  </div>\n                                <div className={`validation-text ${togglePhoneValidation}`}>\n                                    {\n                                        (phone) ?\n                                            \"מספר הטלפון שהוקש שגוי\"\n                                            :\n                                            \"זהו שדה חובה, יש להכניס טלפון\"\n                                    }\n                                </div>\n                            </div>\n                            <div className={`input-edit-container ${phoneBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page phone\" disabled={isPhoneDisabled} ref={phoneFocus} name=\"phone\" id=\"outlined-basic\" variant=\"outlined\" value={phone} onChange={handleChange} />\n                                {\n                                    (isPhoneEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('phone')}></i>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"input-container\">\n                            <div className=\"form-title-container flex\">\n                                <div className=\"form-title form-title-email\">מייל </div>\n                                <div className={`validation-text ${toggleEmailValidation}`}>האימייל שהוקש שגוי</div>\n                            </div>\n                            <div className={`input-edit-container ${emailBorderBottom} flex justify-center align-center`}>\n                                <input className=\"input-edit-page email\" disabled={isEmailDisabled} ref={emailFocus} name=\"email\" id=\"outlined-basic\" variant=\"outlined\" value={email} onChange={handleChange} />\n                                {\n                                    (isEmailEditing) ?\n                                        <i className=\"edit-logo fas fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                        :\n                                        <i className=\"edit-logo far fa-edit\" onClick={() => toggleEditing('email')}></i>\n                                }\n                            </div>\n                        </div>\n                    </form>\n\n                    {/* <div className=\"save-btn-wrapper\" onClick={toggleValidations}> <button className=\"save-btn\" onClick={setUser} disabled={!isValid.phone || !isValid.email || !isValid.name}>שמור</button></div> */}\n\n                \n\n\n           \n            </motion.div>\n            <Dialog open={open} onClose={() => handleClose('close')} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"> {dialogTitle}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        הכנס סיסמה\n</DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"סיסמה\"\n                        type=\"email\"\n                        fullWidth\n                        value={password}\n                        onChange={handleChange}\n                        name=\"password\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose('close')} color=\"primary\">\n                        בטל\n</Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        אשר\n</Button>\n                </DialogActions>\n            </Dialog>\n            <EditButton toggleValidations={toggleValidations} setUser={setUser} isValid={isValid} />\n            </main>\n    );\n}\n\n\n\nfunction mapStateProps(state) {\n    return {\n        loggedInUser: state.UserReducer.loggedInUser,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateLoggedInUser\n}\n\nexport const EditUser = connect(mapStateProps, mapDispatchToProps)(_EditUser)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport AdvertiseService from '../../services/AdvertiseService';\nimport {Modal} from '../../cmps/Modal/Modal';\nimport {updateIsModalOpen} from '../../actions/modalAction.js';\nimport './Advertise.scss';\n\nexport function _Advertise(props) {\n\n    const [advertiseContent, setAdvertiseContent] = useState('')\n    // boolean shows if the returned ad should be shown and make the opposite to backend if btn clicked\n    const [isAdModeOn, setIsAdModeOn] = useState('')\n\n    useEffect(() => {\n        (async () => {\n            //    let ad = await AdvertiseService.getAd()\n            // routim\n            let ad = await AdvertiseService.getAd(props.owner.workPlace)\n            setIsAdModeOn(ad[0].isAdModeOn)\n            setAdvertiseContent(ad[0].content)\n        })()\n    }, []);\n\n\n    function handleChange({ target }) {\n        setAdvertiseContent(target.value)\n    }\n\n    // function updateAdContent() {\n    //     AdvertiseService.updateAd({ advertiseContent })\n    //     //open modal useing store\n    //     props.updateIsModalOpen(true)\n    // }\n\n    // routim\n    function updateAdContent() {\n        AdvertiseService.updateAd({ advertiseContent, workPlace:props.owner.workPlace})\n        //open modal useing store\n        props.updateIsModalOpen(true)\n    }\n    \n    function toggleAdMode() {\n        AdvertiseService.toggleAdMode({isAdModeOn:!isAdModeOn})\n        setIsAdModeOn(!isAdModeOn)\n    }\n\n    // routim\n    // function toggleAdMode() {\n    //     AdvertiseService.toggleAdMode({isAdModeOn:!isAdModeOn, wokrPlace:props.owner.workPlace})\n    //     setIsAdModeOn(!isAdModeOn)\n    // }\n\n    return (\n        <main className=\"main-ad-container\">\n            {\n                <div className=\"ad-title\">ערכו את המודעה ולחצו 'שמור טקסט'</div>\n            }\n            {\n                isAdModeOn?\n                <div className=\"ad-title ad-sub-title\">לעצירת הפרסום לחצו 'הפסק פרסום'</div>:\n                <div className=\"ad-title ad-sub-title\">לחצו 'המשך פרסום' כדי להפעילה</div>\n            }\n                <div className=\"textarea-container\">\n                    <textarea className=\"ad-textarea\" cols=\"30\" rows=\"10\" value={advertiseContent} onChange={handleChange} ></textarea>\n                    <div className=\"ad-btn-container flex column\">\n                        {\n                            isAdModeOn?\n                            <button className=\"ad-btn stop-ad-btn\" onClick={toggleAdMode}> הפסק פרסום</button>\n                            :\n                            <button className=\"ad-btn run-ad-btn\" onClick={toggleAdMode}> המשך פרסום</button>\n                        }\n                    </div>\n                </div>\n            <button className=\"ad-content-btn\" onClick={updateAdContent}>שמור טקסט</button>\n            <Modal modalContent={\n                <div className=\"flex align-center justify-center\" style={{height:'100%'}}>\n                <div>הטקסט נשמר</div>\n                </div>\n                } />\n        </main>\n\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateIsModalOpen\n}\n\nexport const Advertise = connect(mapStateProps, mapDispatchToProps)(_Advertise)\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule } from '../../actions/userAction.js';\nimport { CancelAppointment } from '../CancelAppointment/CancelAppointment';\nimport './AdminContacts.scss';\nexport function _AdminContacts(props) {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [clickedUser, setClickedUser] = useState('')\n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = useState(false);\n\n    useEffect(() => {\n        // routim\n        props.loadUsers(props.owner.workPlace)\n        // props.loadUsers()\n    }, [props.loadUsers]);\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n    }\n    function saveClickedUser(user) {\n        setClickedUser(user)\n        setAppointmentsModalIsOpen(true)\n    }\n    return (\n        <main className=\"admin-contacts\">\n                   {appointmentsModalIsOpen &&\n                    <>\n                        <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                        </div>\n                        <div className=\"apointments-modal\">\n                             <header className=\"header-admin-contacts-modal\">\n                                <div className=\"space-div-for-flex\"></div>\n                                <div className=\"admin-contacts-title-in-modal\">\n                                 התורים של {clickedUser.name}\n                                </div>\n                                <div className={'modal-header-cls-btn-space'}></div>\n                             </header>\n                            <CancelAppointment clickedUser={clickedUser}/>\n                        </div>\n                    </>\n                }\n            <div className=\"search-input-wrapper flex align-center\">\n                <input className=\"search-input-admin-contacts\" placeholder=\"חפשו לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                <i className=\"fas fa-search\"></i>\n                {/* <div onClick={() => props.history.push('/')} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></div> */}\n                {/* routim */}\n                <div onClick={() => props.history.push(`/${props.owner.workPlace}`)} id=\"text\" className=\"logo\"> Tori<i className=\"fas fa-tasks\"></i></div>\n            </div>\n            <div className=\"admin-contacts-modal-title\">\n                ניתן להתקשר, לשלוח ווצאפ, לראות תורים שנקבעו\n                <div>  ואף למחוק אותם, ע״י לחיצה על האייקון המתאים.</div>\n            </div>\n            <div className=\"contacts-users-container-warpper\">\n                <div className=\"contacts-users-container\">\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container flex align-center justify-center`}  key={idx}>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-icons-container flex \">\n                                        <div className=\"user-que user-attr\" onClick={() => saveClickedUser(user)}><i class=\"far fa-calendar-check\"></i></div>\n                                        <a className=\"user-whatsapp user-attr\" href={`https://api.whatsapp.com/send?phone=+972${user.phone.slice(1,user.phone.length)}`}>\n                                            <div><i class=\"fa fa-whatsapp\"></i></div>\n                                        </a>\n                                        <a className=\"user-phone user-attr\"  href={`tel:${user.phone}`}>\n                                             <div ><i class=\"fas fa-phone-alt\"></i></div>\n                                        </a>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        loggedInUser: state.UserReducer.loggedInUser,\n         // routim\n        owner:state.UserReducer.owner\n    }\n}\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule\n}\nexport const AdminContacts = connect(mapStateProps, mapDispatchToProps)(_AdminContacts)","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadUsers, updateUsers, updateUserToSchedule,updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport './Contacts.scss';\n\nexport function _Contacts(props) {\n    const [searchTerm, setSearchTerm] = React.useState('')\n   \n    useEffect(() => {\n        // props.loadUsers()\n        // routim\n        props.loadUsers(props.owner.workPlace)\n    }, [props.loadUsers]);\n\n    function handleChange({ target }) {\n        const field = target.name;\n        const value = target.value;\n        switch (field) {\n            case 'term':\n                setSearchTerm(value)\n                break;\n            default:\n                console.log('Err updating name/phone/email')\n        }\n    }\n    function markClickedUser(clickedUser) {\n        let users = props.users.slice()\n        if (clickedUser.isMarked) {\n            users = users.map(user => {\n                user.isMarked = false\n                props.updateUserToSchedule(null)\n                return user\n            })\n        } else {\n            users = users.map(user => {\n                if (user._id === clickedUser._id) {\n                    user.isMarked = true\n                    props.updateUserToSchedule(user)\n                    return user\n                } else {\n                    user.isMarked = false\n                    return user\n                }\n            })\n        }\n        props.updateUsers(users)\n    }\n\n    function transferTosignup() {\n        props.history.push('/calendarAdmin/contacts/signup')\n    }\n\n    return (\n        <main className=\"contacts-main-container\">\n            <div className=\"search-input-container flex align-center\">\n                <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"search-wrapper flex align-center\">\n                    <input className=\"search-input\" placeholder=\"חפש לפי שם או טלפון\" name=\"term\" value={searchTerm} onChange={handleChange} />\n                    <i className=\"fas fa-search\"></i>\n                </div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </div>\n            <div className=\"users-container-warpper\">\n                <div className=\"users-container\">\n                     <div className={`user-container  flex align-center justify-center`} onClick={transferTosignup}>\n                                    {/* // just for kepping the space of the text */}\n                                    <div className=\"check-mark-container\"></div>\n                                    <div className=\"user-name user-attr\">לקוח חדש</div>\n                                    <div className=\"user-icon user-attr\"> <i class=\"fas fa-user-plus\"></i></div>\n                                </div>\n                    {\n                        (props.users) &&\n                        props.users.map((user, idx) => {\n                            return (\n                                (user.name.includes(searchTerm) || user.phone.includes(searchTerm)) &&\n                                (!user.isAdmin)\n                                &&\n                                <div className={`user-container ${(user.isMarked) ? 'user-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(user)} key={idx}>\n                                    <div className=\"check-mark-container flex align-center\">\n                                        {\n                                            (user.isMarked) && <i class=\"fas fa-check\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"user-name user-attr\">{user.name}</div>\n                                    <div className=\"user-phone user-attr\">{user.phone}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userPhoneInContactSignup: state.UserReducer.userPhoneInContactSignup,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    loadUsers,\n    updateUsers,\n    updateUserToSchedule,\n    updateUserPhoneInContactSignup\n}\n\nexport const Contacts = connect(mapStateProps, mapDispatchToProps)(_Contacts)","import React from \"react\";\nimport { connect } from 'react-redux';\nimport './AppointmentOrBlock.scss';\n\nexport function _AppointmentOrBlock(props) {\n\n    return (\n        <>\n            <main className=\"main-appointment-or-block-container flex justify-center align-center column\">\n            <header className=\"header-in-apointment-or-block-modal\">\n                <div className=\"space-div-for-flex\"></div>\n                <div className=\"appointment-or-block-title-modal\">בחרו בפעולה הרצויה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n                <div className=\"routes-btn-container flex column space-around\">\n                    <div className=\"contacts-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/contacts')}>\n                        <div className=\"app-or-block-title\">קביעת תור ללקוח</div>\n                        <i className=\"app-icon fas fa-user-clock\"></i>\n                    </div >\n                    <div className=\"block-route-btn flex justify-center align-center column\" onClick={() => props.history.push('/calendarAdmin/blockHours')}>\n                        <div className=\"app-or-block-title\">סגירת חלונות זמנים</div>\n                        <i class=\"fas fa-ban\"></i>\n                    </div>\n                </div>\n            <footer className=\"footer-in-apointment-or-block-modal\"></footer>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const AppointmentOrBlock = connect(mapStateProps, mapDispatchToProps)(_AppointmentOrBlock)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { updateRecurrence } from '../../actions/calendarActions';\nimport './AppointmentFreq.scss';\n\nexport function _AppointmentFreq(props) {\n\n    function updateRecurrence(freqOrCount){\n        freqOrCount = freqOrCount.target.value \n        let recurrenceCopy = {...props.recurrence}\n        recurrenceCopy.isRecurrence = true\n        if (freqOrCount.length > 2) {recurrenceCopy.freq = freqOrCount}\n        else  {recurrenceCopy.count = freqOrCount}\n        props.updateRecurrence(recurrenceCopy)\n    }\n\n    return (\n        <>\n            <main className=\"appointment-freq flex justify-center align-center column\">\n            <header className=\"header-in-appointment-freq-modal\">\n                <div className=\"back-arrow\" onClick={() => props.history.push('/calendarAdmin/blockHours')}><i class=\"fas fa-arrow-right\"></i></div>\n                <div className=\"appointment-freq-title-modal\">קבעו את תדירות הסגירה</div>\n                <div className={'modal-header-cls-btn-space'}></div>\n            </header>\n            <div className=\"appointment-freq-main-contianer\">\n                <div className=\"appointment-freq-exmple-container\">\n                    <br/>\n                    <div className=\"\">בחרו את מספר הסגירות,</div>\n                    <div className=\"\">ואחת לכמה זמן תופיע הסגירה.</div>\n                    <br/>\n                    <div>לדוגמא: </div>\n                    <br/>\n                    <div>נניח שמספר הסגירות הוא שתיים,</div>\n                    <div>ובחרתם סגירות על בסיס שבועי.</div>\n                    <br/>\n                    <div>יקבעו שתי סגירות!</div>\n                    <br/>\n                    <div> הראשונה ביום הנבחר,</div>\n                    <div>והשנייה בדיוק שבוע לאחר מכן.</div>\n                    <br/>\n                    <div className=\"one-time-appointment\">לסגירה רגילה וחד פעמית.</div>\n                    <div className=\"one-time-appointment\">אין צורך לבחור, פשוט לחצו אישור.</div>\n                    <br/>\n                </div>\n                <div className=\"appointment-freq-selects-wrapper\">\n                    <div className=\"count-container flex space-between\">\n                        <div className=\"count-title\" for=\"count\">מספר החזרות הרצוי:</div>\n                            <select className=\"count-select\" id=\"count\" name=\"count\" onChange={updateRecurrence}>\n                                <option value={1} selected={(props.recurrence.count === '1')? true : false }>אחת</option>\n                                <option value={2} selected={(props.recurrence.count === '2')? true : false }>שתיים</option>\n                                <option value={3} selected={(props.recurrence.count === '3')? true : false }>שלוש</option>\n                                <option value={4} selected={(props.recurrence.count === '4')? true : false }>ארבע</option>\n                                <option value={5} selected={(props.recurrence.count === '5')? true : false }>חמש</option>\n                                <option value={6} selected={(props.recurrence.count === '6')? true : false }>שש</option>\n                                <option value={7} selected={(props.recurrence.count === '7')? true : false }>שבע</option>\n                                <option value={8} selected={(props.recurrence.count === '8')? true : false }>שמונה</option>\n                                <option value={9} selected={(props.recurrence.count === '9')? true : false }>תשע</option>\n                                <option value={10} selected={(props.recurrence.count === '10')? true : false }>עשר</option>\n                                <option value={11} selected={(props.recurrence.count === '11')? true : false }>אחת-עשרה</option>\n                                <option value={12} selected={(props.recurrence.count === '12')? true : false }>שתיים-עשרה</option>\n                                <option value={13} selected={(props.recurrence.count === '13')? true : false }>שלוש-עשרה</option>\n                                <option value={14} selected={(props.recurrence.count === '14')? true : false }>ארבע-עשרה</option>\n                                <option value={15} selected={(props.recurrence.count === '15')? true : false }>חמש-עשרה</option>\n                                <option value={16} selected={(props.recurrence.count === '16')? true : false }>שש-עשרה</option>\n                                <option value={17} selected={(props.recurrence.count === '17')? true : false }>שבע-עשרה</option>\n                                <option value={18} selected={(props.recurrence.count === '18')? true : false }>שמונה-עשרה</option>\n                                <option value={19} selected={(props.recurrence.count === '19')? true : false }>תשע-עשרה</option>\n                                <option value={20} selected={(props.recurrence.count === '20')? true : false }>עשרים</option>\n                            </select>\n                    </div>\n                    <br/>\n                            <div className=\"freq-container flex space-between\">\n                                <div className=\"freq-title\" for=\"freq\">חזרתיות על בסיס:</div>\n                                <select className=\"appointment-freq-select\" name=\"freq\" id=\"freq\" onChange={updateRecurrence}>\n                                    <option value=\"DAILY\" selected={(props.recurrence.freq === 'DAILY')? true : false }>יומי</option>\n                                    <option value=\"WEEKLY\" selected={(props.recurrence.freq === 'WEEKLY')? true : false }>שבועי</option>\n                                </select>\n                            </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        recurrence: state.CalendarReducer.recurrence,\n        userToSchedule: state.UserReducer.userToSchedule\n    }\n}\n\nconst mapDispatchToProps = {\n    updateRecurrence\n}\n\nexport const AppointmentFreq = connect(mapStateProps, mapDispatchToProps)(_AppointmentFreq)\n","import React  from \"react\";\nimport { connect } from 'react-redux';\nimport { updateHoursToBlock, updateSlotToBlock } from '../../actions/calendarActions';\nimport './BlockHours.scss';\n\nexport function _BlockHours(props) {\n\n    function markClickedUser(clickedSlotRange) {\n        console.log('clickedSlotRange',clickedSlotRange)\n        let slotsRange = props.slotsRangeToBlock.slice()\n        if (clickedSlotRange.isMarked) {\n            slotsRange = slotsRange.map(slotRange => {\n                slotRange.isMarked = false\n                props.updateSlotToBlock(null)\n                return slotRange\n            })\n        } else {\n            slotsRange = props.slotsRangeToBlock.map(slotRange => {\n                if ((slotRange.end === clickedSlotRange.end)&&(slotRange.start === clickedSlotRange.start)) {\n                    slotRange.isMarked = true\n                    props.updateSlotToBlock(slotRange)\n                    return slotRange\n                } else {\n                    slotRange.isMarked = false\n                    return slotRange\n                }\n            })\n        }\n        props.updateHoursToBlock(slotsRange)\n    }\n \n    return (\n        <main className=\"hours-main-container\">\n                <header className=\"header-in-block-hours-modal flex align-center\">\n                     <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/appointmentOrBlock')}><i  class=\"fas fa-arrow-right\"></i></div>\n                    <div className=\"block-hours-title-in-modal\">בחרו חלון זמנים ולחצו 'אישור' </div>\n                    <div className={'modal-header-cls-btn-space'}></div>\n                </header>\n            <div className=\"hours-container-warpper\">\n                <div className=\"hours-container\">\n                    {\n                        (props.slotsRangeToBlock) &&\n                        props.slotsRangeToBlock.map((slotRange, idx) => {\n                            return (\n                                (props.isDayFullyAvailable && (idx === 0))\n                                    ?\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div>סגירת יום שלם</div>\n                                    </div>\n                                    :\n                                    <div className={`hour-container ${(slotRange.isMarked) ? 'hour-clicked' : ''} flex align-center justify-center`} onClick={() => markClickedUser(slotRange)} key={idx}>\n                                        <div className=\"check-mark-container flex align-center\">\n                                            {\n                                                (slotRange.isMarked) && <i class=\"fas fa-check\"></i>\n                                            }\n                                        </div>\n                                        <div className=\"hour-end user-attr\">{slotRange.end}</div>\n                                        <div className=\"hours-dash\">-</div>\n                                        <div className=\"hour-start user-attr\">{slotRange.start}</div>\n                                    </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </main>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        isDayFullyAvailable: state.CalendarReducer.isDayFullyAvailable\n    }\n}\n\nconst mapDispatchToProps = {\n    updateHoursToBlock,\n    updateSlotToBlock\n}\n\nexport const BlockHours = connect(mapStateProps, mapDispatchToProps)(_BlockHours)\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport UtilsService from \"../../services/UtilsService\";\nimport './BlockConfermation.scss';\n\nexport function _BlockConfermation(props) {\n  return (\n    <>\n      <header className=\"header-in-block-confermation-modal flex space-between\">\n        <div className=\"back-arrow\" onClick={()=>props.history.push('/calendarAdmin/freq')}><i  class=\"fas fa-arrow-right\"></i></div>\n        <div className=\"block-confirmation-title-in-modal\">\n          לסגירת החלון שנבחר לחצו 'אישור'\n        </div>\n        <div className={'modal-header-cls-btn-space'}></div>\n      </header>\n      <main className=\"main-confermation-container flex align-center justify-center\">\n        <div className=\"block-confermation-details\">\n          <div className=\"table-cell1\">חלון הזמנים שנבחר :</div>\n          <div className=\"table-cell2\">תאריך : {UtilsService.convertDateToIsraelisDisplay(props.slotToBlock.date)}</div>\n          <div className=\"table-cell3\">בין השעות : {props.slotToBlock.end} - {props.slotToBlock.start}</div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nfunction mapStateProps(state) {\n  return {\n    slotToBlock: state.CalendarReducer.slotToBlock\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const BlockConfermation = connect(mapStateProps, mapDispatchToProps)(_BlockConfermation)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './ModalButton.scss';\n\nfunction _ModalButton(props) {\n    const location = useLocation()\n    function checkBtnValidation() {\n        const path = location.pathname\n        let isValid = true\n        switch (path) {\n            case '/calendarAdmin/contacts':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/treatments':\n                isValid = (!props.pickedTreatmentsCount) || (!(props.duration <= props.availableDuration))\n                break;\n            case '/calendarAdmin/form':\n                isValid = false\n                break;\n            case '/calendarAdmin/freq':\n                isValid = false\n                break;\n            case '/calendarAdmin/blockHours':\n                isValid = props.isClicked\n                break;\n            case '/calendarAdmin/blockConfermation':\n                isValid = false\n                break;\n            case '/calendarAdmin/appointmentOrBlock':\n                isValid = true\n                break;\n            default:\n                console.log('Err updating button modal validation')\n        }\n        return isValid\n    }\n    return (\n        <button className=\"calendar-admin-modal-btn\" onClick={() => props.handleModalRoute(props.duration)}\n            disabled={checkBtnValidation()}>\n            {\n                (location.pathname === '/calendarAdmin/contacts') ?\n                    'בחרו לקוח ולחצו כאן להמשך'\n                    :\n                    (location.pathname === '/calendarAdmin/treatments')\n                        ?\n                        'לחצו כאן להמשך'\n                        :\n                        (location.pathname === '/calendarAdmin/blockHours')\n                            ?\n                            'אישור'\n                            :\n                            (location.pathname === '/calendarAdmin/appointmentOrBlock')\n                                ?\n                                ''\n                                :\n                                'אישור'\n            }\n        </button>\n    )\n}\n\nfunction mapStateProps(state) {\n    return {\n        pickedTreatmentsCount: state.TreatmentReducer.pickedTreatmentsCount,\n        availableDuration: state.TreatmentReducer.availableDuration,\n        duration: state.TreatmentReducer.duration\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const ModalButton = connect(mapStateProps, mapDispatchToProps)(_ModalButton)","import React, { useEffect, useState } from \"react\";\nimport { useLocation, HashRouter as Router, withRouter, Route } from 'react-router-dom';\nimport { connect} from 'react-redux';\nimport { motion } from 'framer-motion'\nimport MotionService from \"../../services/MotionService\";\nimport { Swipeable } from 'react-swipeable'\nimport { LoaderApp } from '../../cmps/LoaderApp/LoaderApp'\nimport DateFnsUtils from '@date-io/date-fns';\nimport heLocale from \"date-fns/locale/he\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { updateAvailbleDuration, setTreatment } from '../../actions/treatmentActions.js';\nimport { updateHoursToBlock, updateIsDayFullyAvailable, updateTableModel} from '../../actions/calendarActions';\nimport { updateUserPhoneInContactSignup } from '../../actions/userAction.js';\nimport TreatmentService from \"../../services/TreatmentService\";\nimport UtilsService from '../../services/UtilsService';\nimport CalendarService from '../../services/CalendarService';\nimport EventService from '../../services/EventService';\nimport StoreService from '../../services/StoreService';\nimport { TreatmentApp } from '../TreatmentApp/TreatmentApp'\nimport { Contacts } from '../../pages/Contacts/Contacts.jsx'\nimport { AppointmentOrBlock } from '../../pages/AppointmentOrBlock/AppointmentOrBlock.jsx'\nimport { AppointmentFreq } from '../../pages/AppointmentFreq/AppointmentFreq.jsx'\nimport { BlockHours } from '../../pages/BlockHours/BlockHours.jsx'\nimport { BlockConfermation } from '../../pages/BlockConfermation/BlockConfermation.jsx'\nimport { SubmitForm } from '../../pages/SubmitForm/SubmitForm.jsx'\nimport { ModalButton } from '../../cmps/ModalButton/ModalButton.jsx'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport './CalendarAdmin.scss';\nimport { Signup } from \"../Signup/Signup\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide timeout={5000} direction=\"down\" ref={ref} {...props} />;\n});\n\n// material ui - date picker style\nconst materialTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: '#e91e63',\n            },\n        },\n\n        MuiPickersDay: {\n            day: {\n                color: 'black',\n            },\n            daySelected: {\n                backgroundColor: '#e91e63',\n            },\n            dayDisabled: {\n                color: '#e91e63',\n            },\n            current: {\n                color: '#e91e63',\n            },\n        },\n    },\n});\n\nlet approvedCounter = 0\n\nfunction _CalendarAdmin(props) {\n\n    //the date is irrelevant, its only for the formated function the hours wiil be given by the owner.\n    const location = useLocation()\n    // routim\n    const constrains = {\n        start: `2020-10-12T${props.owner.workingHours.start}:00Z`,\n        end: `2020-10-12T${props.owner.workingHours.end}:00Z`\n    }\n\n    // const constrains = {\n    //     start: \"2020-10-12T06:00:00Z\",\n    //     end: \"2020-10-12T18:00:00Z\"\n    // }\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [tempEventToRmoveId, setTempEventToRmoveId] = useState('');\n    const [eventToRmoveId, setEventToRmove] = React.useState({});\n    const [prevEventsToDisplay, setPrevEventsToDisplay] = React.useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [reccurenceBlock, setReccurenceBlock] = React.useState(false);\n    const [modalSubJect, setModalSubJect] = React.useState('');\n    const [modalContent, setModalContent] = React.useState({title:'הסרת חסימה ',text:'להסרת החסימה לחצו אישור'});\n    const [isTempModeOn, setIsTempModeOn] = useState(false);\n    const [weeklyDates, setWeeklyDates] = useState([]);\n    const [timeSlots, setWorkingTimeSlots] = useState(getWorkingTimeSlots());\n    const [isClicked, setIsClicked] = useState(true);\n    const [tableCells, setTableCells] = useState([]);\n    const [occDates, setOccupiedDates] = useState([]);\n    const [month, setMonth] = useState(UtilsService.getMonthByIdx(new Date().getMonth() + 1));\n    const [eventsToDisplay, setEventsToDisplay] = useState(async () => {\n        return await getWeeklyEvents()\n    });\n    const [daysForDisplay, setDaysForDisplay] = useState(() => {\n        return getDailyDates(selectedDate)\n    });\n    const [loader, setLoader] = useState(true);\n\n    let eventsIds = []\n\n\n    let weeklyRange = CalendarService.getDatesWeeklyRange(selectedDate)\n    \n    const [appointmentsModalIsOpen, setAppointmentsModalIsOpen] = React.useState(false);\n\n\n    useEffect(() => {\n        (async () => {\n\n            let weeklyEvents = await eventsToDisplay\n            let isTemp = false\n            weeklyEvents.forEach(dailyEvents => {\n                dailyEvents.forEach(ev => {\n                    if (ev.isTemp) isTemp = true\n                })\n            })\n            if (!isTemp) {\n                setIsTempModeOn(false)\n                setOpen(false)\n            }\n\n            if (!props.tableModel.length) {\n                let table = CalendarService.buildWeeklyModel(timeSlots,await eventsToDisplay)\n                props.updateTableModel(table)\n            }\n\n            if (weeklyEvents) setLoader(false)\n            if (weeklyEvents && timeSlots) {\n                console.log('calendaradmin recreated')\n\n                return setTableCells(\n                    timeSlots.map((ts, tsIdx) => {\n                        if (tsIdx === timeSlots.length - 1) return\n                        return <tr key={tsIdx}>\n                            <td className=\"td-hours\">{UtilsService.timeToDisplay(ts)}</td>\n                            {\n                                weeklyEvents.map((dailyEvents, dailyIdx) => {\n                                    let counter = 0\n                                    if (dailyEvents.length) {\n                                        let cellIsRendered = false\n                                        return dailyEvents.map((ev, eventIdx) => {\n                                            let evenOrOdd = (dailyIdx % 2 === 0) ? 'even-event' : 'odd-event'\n                                            if (counter > 2) counter = 0\n                                            const range = UtilsService.checkIfTsInRange(ts, ev.start, ev.end, 30)\n                                            if (range.occupied) {\n                                                cellIsRendered = true\n                                                if (!eventsIds.includes(ev.id)) {\n                                                    eventsIds.push(ev.id)\n                                                    return <td className={`occupied-cell ${(ev.name === 'block - block') ? 'blocked-cell' : ''} ${evenOrOdd}-${(counter)} ${(ev.isTemp&&!ev.isCancelApp) ? 'temp-cell' : ''}`} key={eventIdx} onClick={() => handleClickOpen(ev)} rowSpan={range.rowspan}>\n                                                        <div className=\"occupied-cell-content\">\n                                                            <div className=\"event-time-wrapper\">\n                                                                <div className=\"event-time\">{UtilsService.timeToDisplay((ev.start).slice(11, 16))}-{UtilsService.timeToDisplay((ev.end).slice(11, 16))}</div>\n                                                            </div>\n                                                            {(ev.name === 'block - block')\n                                                                ?\n                                                                <div>\n                                                                    סגור\n                                                                </div>\n                                                                :\n                                                                <div className=\"event-desc\">\n                                                                    <div className=\"event-name\">{UtilsService.getSplitedEventDesc(ev.name).name}</div>\n                                                                    <div className=\"event-treatment\">{UtilsService.getSplitedEventDesc(ev.name).treatment}</div>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </td>\n\n                                                } else return ''\n                                            }\n                                            else if ((dailyEvents.length === eventIdx + 1) && (!cellIsRendered)) {\n                                                return <td className=\"available-cell\" key={eventIdx} onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                            }\n                                            counter++\n                                        })\n                                    } else {\n                                        //all day available no event at this day\n                                        return <td key={dailyIdx} className=\"available-cell\" onClick={(isTemp) ? () => setOpen(true) : () => openAppointmentsModal({ tsIdx, dailyIdx }, ts, true)}>{<i className=\"fas fa-plus\"></i>}</td>\n                                    }\n                                })\n                            }\n                        </tr>\n                    })\n                )\n            }\n        })()\n    }, [eventsToDisplay, props.updateTableModel, props.tableModel]);\n\n    useEffect(() => {\n        checkIfClicked()\n    }, [props.users, props.slotsRangeToBlock]);\n\n    useEffect(() => {\n        if (approvedCounter === 2){\n            console.log(eventToRmoveId)\n            cancelAppiontment()\n            approvedCounter = 0\n            setReccurenceBlock(false)\n        }\n    }, [eventToRmoveId]);\n\n    useEffect(() => {\n        (async () => {\n                let table = CalendarService.buildWeeklyModel(timeSlots, await eventsToDisplay)\n                props.updateTableModel(table)\n        })()\n    }, [eventsToDisplay]);\n\n    function checkIfClicked() {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            setIsClicked(!(props.users.find(user => user.isMarked)))\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            setIsClicked(!(props.slotsRangeToBlock.find(sr => sr.isMarked)))\n        }\n    }\n\n    function openAppointmentsModal(cellPos, ts, isDayFullyAvailable = false) {\n        props.updateIsDayFullyAvailable(isDayFullyAvailable)\n        const dateToScheduale = weeklyDates[cellPos.dailyIdx].start\n        props.setTreatment({\n            time: ts,\n            date: dateToScheduale.slice(0, 10),\n            dailyIdx: cellPos.dailyIdx\n        })\n        const availableDuration = CalendarService.getAvailbleDuration(props.tableModel, cellPos)\n        props.updateAvailbleDuration(availableDuration)\n        props.updateHoursToBlock(CalendarService.getHoursToBlock(timeSlots, ts, availableDuration, dateToScheduale.slice(0, 10), isDayFullyAvailable))\n        setAppointmentsModalIsOpen(true)\n        props.history.push('/calendarAdmin/appointmentOrBlock')\n    }\n\n\n    function handleModalRoute(duration) {\n        if (location.pathname === '/calendarAdmin/contacts') {\n            props.history.push('/calendarAdmin/treatments')\n            setIsClicked(true)\n        }\n        if (location.pathname === '/calendarAdmin/treatments') {\n            props.history.push('/calendarAdmin/form')\n            // props.history.push('/calendarAdmin/freq')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n        //  if (userToSchedule) {props.history.push('/calendarAdmin/form')}\n        //  else {{props.history.push('/calendarAdmin/blockConfermation')}\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/form') {\n            // setAppointment(duration, props.recurrence)\n            setAppointment(duration)\n            closeAppointmentsModal()\n        }\n        if (location.pathname === '/calendarAdmin/blockHours') {\n            props.history.push('/calendarAdmin/freq')\n            // props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/freq') {\n            props.history.push('/calendarAdmin/blockConfermation')\n        }\n        if (location.pathname === '/calendarAdmin/blockConfermation') {\n            blockSlotRange(props.recurrence)\n            closeAppointmentsModal()\n        }\n    }\n\n    function getDailyDates(date) {\n        const days = UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)\n        setWeeklyDates(days)\n        return days.map(day => {\n            return day.start.slice(8, 10)\n        })\n    }\n\n\n    // const confirmedDeletedEvent = await CalendarService.removeEventFromCalendar(eventToRmoveId.calendar)\n    // routim\n    // need to cahgne things for email approval\n \n    async function cancelAppiontment() {\n        setIsTempModeOn(true)\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.filter(ev => ev.id !== tempEventToRmoveId)\n        })\n        eventsToDisplayCopy = eventsToDisplayCopy.map(dailyEvents => {\n            return dailyEvents.map(ev => {\n                ev.isTemp = true\n                ev.isCancelApp = true\n                return ev\n            })\n        })\n\n        setEventsToDisplay(eventsToDisplayCopy)\n    //    added routim\n        const event = {accountId:props.owner.accountId, calendarId:props.owner.calendarId, eventId:eventToRmoveId.calendar, token:props.owner.token}\n        const confirmedDeletedEvent = await CalendarService.removeEventFromCalendar(event) \n        console.log('confiremdn deleted from calendar',confirmedDeletedEvent)\n        if (!confirmedDeletedEvent) {\n            console.log('problem deleting event')\n            //need to put modal\n            return\n        }\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n        // delete from mongo data base - for blocks which are recurrence there is only one mongo event \n        if (eventToRmoveId.mongo) {EventService.removeEventFromDB(eventToRmoveId.mongo)}\n        // EmailService.sendEmail(eventToRmove.name, eventToRmove.date, eventToRmove.email, false)\n    }\n\n\n\n    function getWorkingTimeSlots() {\n        return UtilsService.getDailySlotsForPreview([constrains], 15)\n    }\n\n    async function getWeeklyEvents(date = new Date()) {\n        return await Promise.all((UtilsService.getWeekIsosDatesForCalendar(date.getDay() + 1, date)).map(async isosDate => {\n            // routim\n            // let timeRangeAndIds = {...isosDate}\n            // timeRangeAndIds.accountId = props.owner.accountId\n            // timeRangeAndIds.calendarId = props.owner.calendarId\n            // timeRangeAndIds.token = props.owner.token\n            //   return await CalendarService.getEventsFromCalendar(timeRangeAndIds)\n            return await CalendarService.getEventsFromCalendar(isosDate, props.owner)\n        }))\n    }\n\n    async function handleChange(date) {\n        setDaysForDisplay(getDailyDates(date))\n        setMonth(UtilsService.getMonthByIdx(date.getMonth() + 1))\n        eventsIds = []\n        setLoader(true)\n        const weeklyEvents = await getWeeklyEvents(date)\n        if (weeklyEvents) {\n            setLoader(false)\n        }\n        setEventsToDisplay(weeklyEvents)\n        handleDateChange(date)\n    }\n\n    function onSwipeDirection(direction) {\n        if (!loader) {\n            //need to change to normal way\n            if ((direction === 'Left') && (selectedDate.getTime()) > (new Date().getTime())) {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() - 7)));\n            }\n            else if (direction === 'Right') {\n                handleChange(new Date(selectedDate.setDate(selectedDate.getDate() + 7)));\n            }\n        }\n    }\n\n    const handleClickOpen = async (ev) => {\n        if (ev) {\n\n            if (ev.name === 'block - block') {\n                setModalSubJect('block')\n            } else {\n                 setModalSubJect('appointment')\n            }\n\n            if (ev.id.length > 60){\n                // must be a reccurence event\n                setReccurenceBlock(true)\n            }\n            setTempEventToRmoveId(ev.id)\n            const mongoEvent = await EventService.getMongoEventByEventCalendarId(ev.id)\n            console.log('mongo event',mongoEvent)\n            if (mongoEvent) {setEventToRmove({ mongo: mongoEvent._id, calendar: ev.id })}\n            else {setEventToRmove({ mongo: '', calendar: ev.id })}\n        }\n        setOpen(true);\n    };\n\n\n    // change to switch case with small functions\n    // fermove is approved is for the second time - so we can delete all events or just single\n    const handleClose = (isApproved) => {\n        console.log(reccurenceBlock, 'reccurenceBlock')\n        if (isApproved) {\n            // isapproved - approval on the modal - true/false\n            // counter to make sure how many times? 1? 2?\n            approvedCounter ++\n            console.log(approvedCounter, 'approvedCounter')\n        if (reccurenceBlock) {\n            // is it reccurence?\n            console.log(reccurenceBlock, 'reccurenceBlock')\n            setModalContent({title:'סגירה שחוזרת על עצמה', text:'למחיקת כל המופעים החוזרים של הסגירה, לחצו אישור. למחיקה בתאריך הספציפי שנבחר לחצו ביטול'})\n            if (approvedCounter === 2) {\n                // wants to delete the whole block reccurence\n                cancelRecurrenceBlock()\n                setOpen(false);\n                setModalContent({title:'הסרת חסימה ',text:'להסרת החסימה לחצו אישור'})\n                return\n            }\n            // means it is not modal after trying to scheduale on occupied dates but some kind of removal (either appointment or block)\n        } else if (!prevEventsToDisplay) {\n            // normal individual block\n            setOpen(false)\n            cancelAppiontment()\n            approvedCounter = 0\n            setModalContent({title:'הסרת חסימה ',text:'להסרת החסימה לחצו אישור'})\n        } else {\n            // must be modal after trying to schedaule reccurence block but dates are occupied\n            setOpen(false)\n            setEventsToDisplay(prevEventsToDisplay)\n            setPrevEventsToDisplay(null)\n        }\n    } else if (!isApproved && approvedCounter){\n        // wants to delete only ony specific block from the reccurence counter must be at least one from first click\n    // meaning first click was approved (to delete the block and the second wasnt - want to delete only the specific one - not the whole thing)\n        setOpen(false);\n        approvedCounter = 0\n        setReccurenceBlock(false)\n        setModalContent({title:'הסרת חסימה ',text:'להסרת החסימה לחצו אישור'})\n        if (!prevEventsToDisplay) {\n            cancelAppiontment()\n        } else {\n            setEventsToDisplay(prevEventsToDisplay)\n            setPrevEventsToDisplay(null)\n        }\n    } else {\n        // tried to scheduale recuurence block on dates which are occupied than click bitul\n        if (prevEventsToDisplay) {\n            setEventsToDisplay(prevEventsToDisplay)\n            setPrevEventsToDisplay(null)\n        }\n        setOpen(false)\n    }\n};\n\n    async function cancelRecurrenceBlock () {\n        const idToCompareWithMongo = eventToRmoveId.calendar.slice(0,40)\n        const reccurenceMongoEvent = await EventService.getReccurenceMongoEventBySubStrId(idToCompareWithMongo)\n        console.log(reccurenceMongoEvent,'reccurenceMongoEvent')\n        setTempEventToRmoveId(reccurenceMongoEvent.eventId)\n        setEventToRmove({ mongo: reccurenceMongoEvent._id, calendar: reccurenceMongoEvent.eventId })\n    }\n\n    // const confirmedEvent = await CalendarService.setAppointment(markedTreatmetns, duration, phone, email, name, props.treatment)\n    // routim\n\n    async function setAppointment(duration) {\n        setIsTempModeOn(true)\n        const markedTreatmetns = TreatmentService.getMarkedTreatmentsStr(props.treatments)\n        const { phone, email, name } = props.userToSchedule\n        let time = UtilsService.changeTimeForDisplay(props.treatment.time, 0)\n        const startTime = `${props.treatment.date}T${time}:00Z`\n        time = UtilsService.calculateEndTime(time, duration)\n        const endTime = `${props.treatment.date}T${time}:00Z`\n        const tempEvent = {\n            id: UtilsService.idGen(),\n            name: `${name} - ${markedTreatmetns}`,\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n        let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n        eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        setEventsToDisplay(eventsToDisplayCopy)\n        const confirmedEvent = await CalendarService.setAppointment(markedTreatmetns, duration, phone, email, name, props.treatment, props.owner) \n        if (!confirmedEvent) {\n            console.log('couldnt schduale appointment')\n            //need to put modal\n            return\n        }\n\n        setEventsToDisplay(await getWeeklyEvents(selectedDate))\n    }\n\n//             const confirmedBlockOrOccDates = await CalendarService.blockSlotRange(props.slotToBlock, 'block', recurrence) line 530\n    // routim\n\n    async function blockSlotRange(recurrence) {\n        setIsTempModeOn(true)\n        let time1 = UtilsService.changeTimeForDisplay(props.slotToBlock.start, 0)\n        let time2 = UtilsService.changeTimeForDisplay(props.slotToBlock.end, 0)\n        let startTime = `${props.slotToBlock.date}T${time1}:00Z`\n        let endTime = `${props.slotToBlock.date}T${time2}:00Z`\n        let tempEvent = {\n            id: UtilsService.idGen(),\n            name: 'block - block',\n            start: startTime,\n            end: endTime,\n            isTemp: true\n        }\n            let eventsToDisplayCopy = JSON.parse(JSON.stringify(await eventsToDisplay));\n            eventsToDisplayCopy[props.treatment.dailyIdx].push(tempEvent)\n        \n            let startTimeTs = tempEvent.start.slice(11,16) \n            let startTimeTsIdx = timeSlots.findIndex(ts => ts === startTimeTs)\n            let endTimeTs = tempEvent.end.slice(11,16)\n            let endTimeTsIdx = timeSlots.findIndex(ts => ts === endTimeTs)\n    \n            for (var i=1; i<props.recurrence.count && props.recurrence.freq === 'DAILY'; i++){\n              tempEvent = {...tempEvent}\n              startTime = new Date (new Date(startTime).getTime() + (1000 * 60 * 60 * 24))\n              startTime = startTime.toISOString()\n              endTime = new Date (new Date(endTime).getTime() + (1000 * 60 * 60 * 24))\n              endTime = endTime.toISOString()\n              tempEvent.id = UtilsService.idGen()\n              tempEvent.start = startTime\n              tempEvent.end = endTime\n            //   dailyIdx+i for the next day -- the j is for the ts (where exactly in the next day) => making sure there is not already an event there before pushing temp\n            let isCellOccupied = false\n            for (var j=startTimeTsIdx; j<endTimeTsIdx; j++) { \n                if (!props.tableModel[j][props.treatment.dailyIdx+i]){\n                    isCellOccupied = true\n                    console.log(timeSlots[j], 'is not availble at', props.treatment.dailyIdx+i)\n                }\n            }\n                if (!isCellOccupied) { eventsToDisplayCopy[props.treatment.dailyIdx+i].push(tempEvent)}\n        }\n            let prevEvents = [... await eventsToDisplay]\n            setEventsToDisplay(eventsToDisplayCopy)\n            const confirmedBlockOrOccDates = await CalendarService.blockSlotRange(props.slotToBlock, 'block', recurrence, props.owner) \n\n        if (Array.isArray(confirmedBlockOrOccDates)) {\n            setModalSubJect('occupied')\n            setOccupiedDates (confirmedBlockOrOccDates)\n            setPrevEventsToDisplay (prevEvents)\n            setIsTempModeOn(false)\n            setOpen(true)\n            return\n        } \n        console.log('confirmed eventId',confirmedBlockOrOccDates.id)\n        setEventsToDisplay(async () => {\n            return await getWeeklyEvents(selectedDate)\n        })\n    }\n\n    function closeAppointmentsModal() {\n        setAppointmentsModalIsOpen(false)\n        // chagne semantics, because it represents the opposite - making sure btn will be disable after modal closed and reopen\n        setIsClicked(true)\n        props.updateUserPhoneInContactSignup('')\n        StoreService.initApp()\n        props.history.push('/calendarAdmin')\n    }\n\n    function disableDay(date) {\n        return (date.getDay() === 6);\n    }\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale} >\n                <ThemeProvider theme={materialTheme}>\n                    <DatePicker\n                        disablePast={true}\n                        shouldDisableDate={disableDay}\n                        variant=\"dialog\"\n                        okLabel=\"אישור\"\n                        cancelLabel=\"ביטול\"\n                        open={isOpen}\n                        onOpen={() => setIsOpen(true)}\n                        onClose={() => setIsOpen(false)}\n                        format=\"MM/dd/yyyy\"\n                        id=\"date-picker-inline\"\n                        disableToolbar\n                        value={selectedDate}\n                        onChange={handleChange}\n                        InputProps={{\n                            disableUnderline: true,\n                            style: { width: '0', height: '0px' }\n                        }}\n                        keyboardbuttonprops={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </ThemeProvider>\n            </MuiPickersUtilsProvider>\n            <motion.div\n                initial=\"out\"\n                exit=\"in\"\n                animate=\"in\"\n                variants={MotionService.getMotionStyle('pageVariantsWithTextAlign')}\n                transition={MotionService.getMotionStyle('pageTransition')}\n                style={{ width: \"100%\", height: \"100%\" }}\n            >\n                <main className=\"calendar-admin-container\">\n                    <div className=\"header-app flex justifiy-center align-center space-between\" >\n                        <div className=\"weekly-dates-container flex space-between align-center\" onClick={() => setIsOpen(true)}>\n                            <i className=\"calendar-icon fas fa-calendar-week\"></i>\n                            <div className=\"weekly-dates-text\">{weeklyRange.firstDay}<br />{weeklyRange.lastDay} </div>\n                        </div>\n                        {/* <div id=\"text2\" onClick={() => props.history.push('/')} >Tori<i className=\"fas fa-tasks\"></i></div> */}\n                        {/* routim */}\n                        <div id=\"text2\" onClick={() => props.history.push(`/${props.owner.workPlace}`)} >Tori<i className=\"fas fa-tasks\"></i></div>\n                    </div>\n                    <Swipeable onSwiped={(eventData) => onSwipeDirection(eventData.dir)} >\n                        <header className=\"days-header-container flex space-between\">\n                            <div className=\"days-name-container month-container\" >\n                                <div className=\"month-name\">{month}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">ראשון</div>\n                                <div className=\"daily-num\"> {daysForDisplay[0]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שני</div>\n                                <div className=\"daily-num\"> {daysForDisplay[1]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שלישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[2]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">רביעי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[3]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">חמישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[4]}</div>\n                            </div>\n                            <div className=\"days-name-container\">\n                                <div className=\"daily-name\">שישי</div>\n                                <div className=\"daily-num\"> {daysForDisplay[5]}</div>\n                            </div>\n                        </header>\n                        <div>\n                            {\n                                !loader ?\n                                    <div className=\"table-container\">\n                                        <table>\n                                            <tbody>\n                                                {\n                                                    (tableCells.length) &&\n                                                    tableCells\n                                                }\n                                            </tbody>\n                                        </table>\n                                        <footer className=\"calendar-footer flex align-center justify-center\">\n                                            <div className=\"footer-hours\">{timeSlots[timeSlots.length-1]}</div>\n                                        </footer>\n                                    </div>\n                                    :\n                                    <div className=\"loader-container flex justify-center align-center space-around\">\n                                        <LoaderApp />\n                                    </div>\n                            }\n                        </div>\n                    </Swipeable>\n\n\n\n                    <div>\n                        <Dialog\n                            open={open}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={() => handleClose(false)}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\n                                    (isTempModeOn) ?\n                                        'ארעה שגיאה'\n                                        :\n                                        (modalSubJect === 'block')\n                                            ?\n                                            modalContent.title\n                                            :\n                                            (modalSubJect === 'appointment')?\n                                            'ביטול תור'\n                                            :\n                                                (occDates.length>1)?\n                                                 'התאריכים הנ״ל כבר תפוסים' \n                                                 :\n                                                 (occDates.length===1)?\n                                                 'התאריך הנ״ל כבר תפוס' \n                                                 :\n                                                 ''\n                            \n                                }\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    {\n                                        (isTempModeOn) ?\n                                            'סגרו את המודעה ונסו שנית'\n                                            :\n                                            (modalSubJect === 'block')\n                                                ?\n                                                modalContent.text\n                                                :\n                                                (modalSubJect === 'appointment')?\n                                                ' לביטול התור לחצו אישור'\n                                                :\n                                                (occDates.length>1)?\n                                                    `התאריכים - ${occDates.map(d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוסים, הסגירות לא נקבעו!`\n                                                    :\n                                                    (occDates.length===1)?\n                                                    `התאריך ${occDates.map\n                                                    (d=>UtilsService.convertDateTo4DigitsDisplay(d))} כבר תפוס, הסגירות לא נקבעו!`\n                                                    :\n                                                    ''\n                                           \n                                        // (isTempModeOn) ?\n                                        //     'סגרו את המודעה ונסו שנית'\n                                        //     :\n                                        //     (modalSubJect === 'block')\n                                        //         ?\n                                        //         'להסרת החסימה לחצו אישור'\n                                        //         :\n                                        //         ' לביטול התור לחצו אישור'\n                                    }\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => handleClose(false)} color=\"primary\">\n                                    ביטול\n                            </Button>\n                                {\n                                    (isTempModeOn)\n                                        ?\n                                        <Button onClick={() => handleClose(false)} color=\"primary\">\n                                            אישור\n                             </Button>\n                                        :\n                                        <Button onClick={() => handleClose(true)} color=\"primary\">\n                                            אישור\n                              </Button>\n                                }\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    {appointmentsModalIsOpen &&\n                        <>\n                            <div className=\"modal-screen\" onClick={closeAppointmentsModal}>\n                            </div>\n                            <div className=\"apointments-modal\">\n                                <Router>\n                                    <Route path=\"/calendarAdmin/contacts\" exact component={Contacts} />\n                                    <Route path=\"/calendarAdmin/contacts/signup\" component={Signup} />\n                                    <Route path=\"/calendarAdmin/treatments\" component={TreatmentApp} />\n                                    <Route path=\"/calendarAdmin/form\" component={SubmitForm} />\n                                    <Route path=\"/calendarAdmin/freq\" component={AppointmentFreq} />\n                                    <Route path=\"/calendarAdmin/appointmentOrBlock\" component={AppointmentOrBlock} />\n                                    <Route path=\"/calendarAdmin/blockHours\" component={BlockHours} />\n                                    <Route path=\"/calendarAdmin/blockConfermation\" component={BlockConfermation} />\n                                    {/* <Route path=\"/:workPlace/calendarAdmin/contacts\" exact component={Contacts} />\n                                    <Route path=\"/:workPlace/calendarAdmin/contacts/signup\" component={Signup} />\n                                    <Route path=\"/:workPlace/calendarAdmin/treatments\" component={TreatmentApp} />\n                                    <Route path=\"/:workPlace/calendarAdmin/form\" component={SubmitForm} />\n                                    <Route path=\"/:workPlace/calendarAdmin/freq\" component={AppointmentFreq} />\n                                    <Route path=\"/:workPlace/calendarAdmin/appointmentOrBlock\" component={AppointmentOrBlock} />\n                                    <Route path=\"/:workPlace/calendarAdmin/blockHours\" component={BlockHours} />\n                                    <Route path=\"/:workPlace/calendarAdmin/blockConfermation\" component={BlockConfermation} /> */}\n                                </Router>\n                                {((location.pathname !== '/calendarAdmin/appointmentOrBlock') && (location.pathname !== '/calendarAdmin/contacts/signup')) && <ModalButton handleModalRoute={handleModalRoute} isClicked={isClicked} />}\n                                <div className=\"close-admin-modal-btn\" onClick={closeAppointmentsModal}><i class=\"fas fa-times\"></i></div>\n                            </div>\n                        </>\n                    }\n                </main>\n            </motion.div>\n        </>\n    );\n}\n\nfunction mapStateProps(state) {\n    return {\n        users: state.UserReducer.users,\n        userToSchedule: state.UserReducer.userToSchedule,\n        treatments: state.TreatmentReducer.treatments,\n        treatment: state.TreatmentReducer.treatment,\n        slotsRangeToBlock: state.CalendarReducer.slotsRangeToBlock,\n        slotToBlock: state.CalendarReducer.slotToBlock,\n        recurrence: state.CalendarReducer.recurrence,\n        tableModel: state.CalendarReducer.tableModel,\n        // routim\n        owner:state.UserReducer.owner\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAvailbleDuration,\n    setTreatment,\n    updateHoursToBlock,\n    updateIsDayFullyAvailable,\n    updateUserPhoneInContactSignup,\n    updateTableModel\n}\n\nexport const CalendarAdmin = withRouter(connect(mapStateProps, mapDispatchToProps)(_CalendarAdmin))\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { TreatmentApp } from './pages/TreatmentApp/TreatmentApp.jsx'\nimport { EditTreatments } from './pages/EditTreatments/EditTreatments.jsx'\nimport { TreatmentToEdit } from './pages/TreatmentToEdit/TreatmentToEdit.jsx'\nimport { CalendarApp } from './pages/CalendarApp/CalendarApp.jsx'\nimport { SubmitForm } from './pages/SubmitForm/SubmitForm.jsx'\nimport { CancelAppointment } from './pages/CancelAppointment/CancelAppointment.jsx'\nimport { SignupOrLogin } from './pages/SignupOrLogin/SignupOrLogin.jsx'\nimport { Login } from './pages/Login/Login.jsx'\nimport { Signup } from './pages/Signup/Signup.jsx'\nimport { HomePage } from './pages/HomePage/HomePage.jsx'\nimport { EditUser } from './pages/EditUser/EditUser.jsx'\nimport { Advertise } from './pages/Advertise/Advertise.jsx'\nimport { AdminContacts } from './pages/AdminContacts/AdminContacts.jsx'\nimport { CalendarAdmin } from './pages/CalendarAdmin/CalendarAdmin.jsx'\nimport { HashRouter as Router } from 'react-router-dom';\nimport { updateLoggedInUser } from './actions/userAction.js';\nimport StorageService from './services/StorageService';\nimport UserService from './services/UserService';\n\nexport function _App(props) {\n\n  useEffect(() => {\n    (async () => {\n    let user = await StorageService.loadFromStorage('tori-user')\n    if (user&&!props.loggedInUser) {\n     await props.updateLoggedInUser(await UserService.getUser(user.phone))\n    }\n  })()\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch >\n          <Route path=\"/calendar\" component={CalendarApp} />\n          <Route path=\"/cancelAppointment\" component={CancelAppointment} />\n          <Route path=\"/form\" component={SubmitForm} />\n          <Route path=\"/treatments\" component={TreatmentApp} />\n          {/* <Route path=\"/editTreatments\" component={EditTreatments} /> */}\n          {/* <Route path=\"/treatmentToEdit\" component={TreatmentToEdit} /> */}\n          <Route path=\"/signupOrLogin\" component={SignupOrLogin} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/editUser\" component={EditUser} />\n          <Route path=\"/calendarAdmin\" component={CalendarAdmin} />\n          <Route path=\"/advertise\" component={Advertise} />\n          <Route path=\"/adminContacts\" component={AdminContacts} />\n          {/* <Route path=\"/\" component={HomePage} /> */}\n          <Route path=\"/:workPlace\" component={HomePage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n          {/* /* <Route path=\"/:workPlace/calendar\" component={CalendarApp} />\n          <Route path=\"/:workPlace/cancelAppointment\" component={CancelAppointment} />\n          <Route path=\"/:workPlace/form\" component={SubmitForm} />\n          <Route path=\"/:workPlace/treatments\" component={TreatmentApp} />\n          <Route path=\"/:workPlace/editTreatments\" component={EditTreatments} />\n          <Route path=\"/:workPlace/treatmentToEdit\" component={TreatmentToEdit} />\n          <Route path=\"/:workPlace/signupOrLogin\" component={SignupOrLogin} />\n          <Route path=\"/:workPlace/login\" component={Login} />\n          <Route path=\"/:workPlace/signup\" component={Signup} />\n          <Route path=\"/:workPlace/editUser\" component={EditUser} />\n          <Route path=\"/:workPlace/calendarAdmin\" component={CalendarAdmin} />\n          <Route path=\"/:workPlace/advertise\" component={Advertise}/>\n          <Route path=\"/:workPlace/adminContacts\" component={AdminContacts}/> */}\n\n\nfunction mapStateProps(state) {\n  return {\n    loggedInUser: state.UserReducer.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  updateLoggedInUser\n}\n\nexport const App = connect(mapStateProps, mapDispatchToProps)(_App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}